on:
  workflow_call:
    inputs:
      RG:
        required: true
        type: string
      AKSNAME:
        required: true
        type: string
      DNSDOMAIN:
        required: true
        type: string
      DNSRG:
        required: true
        type: string
      HELMCERTMANAGERISSUERURI:
        default: "postdeploy/helm/Az-CertManagerIssuer-0.3.0.tgz"
        required: false
        type: string
      HELMEXTERNALDNSURI:
        default: "postdeploy/helm/externaldns-0.2.0.tgz"
        required: false
        type: string
      CERTMANAGER:
        type: boolean
        default: true
        required: false
      CERTMANAGERVERSION:
        default: "v1.5.3"
        required: false
        type: string
      CERTMANAGEREMAIL:
        required: true
        type: string
    secrets:
      AZURE_CREDENTIALS:
        required: true

jobs:
  K8S:
    runs-on: ubuntu-latest
    env:
      RG: "${{ inputs.RG }}"
      AKSNAME: "${{ inputs.AKSNAME }}"
    steps:
      - uses: actions/checkout@v2
        name: Script file download

      - name: Job parameter inspection
        run: |
          echo "RG is ${{ inputs.RG }}"
          echo "AKS name is ${{ inputs.AKSNAME }}"
          echo "CertManager version is ${{ inputs.CERTMANAGERVERSION }}"

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: false
          environment: azurecloud
          allow-no-subscriptions: false

      - name: AKS Connect
        run: az aks get-credentials -n $AKSNAME -g $RG --overwrite-existing

      - name: Kubelogin
        env:
          kubeloginversion: 'v0.0.10'
        run: |
          wget https://github.com/Azure/kubelogin/releases/download/${{ env.kubeloginversion }}/kubelogin-linux-amd64.zip
          unzip kubelogin-linux-amd64.zip
          sudo mv bin/linux_amd64/kubelogin /usr/bin
          kubelogin convert-kubeconfig -l azurecli

      - name: Install Cert Manager and ClusterIssuer
        if: inputs.CERTMANAGER
        env:
          CERTMANAGERURI: "https://github.com/jetstack/cert-manager/releases/download/${{ inputs.CERTMANAGERVERSION }}/cert-manager.yaml"
          CERTMANAGERISSUERURI: "${{ inputs.HELMCERTMANAGERISSUERURI }}"
          EMAILAD: "${{ inputs.CERTMANAGEREMAIL }}"
        run: sh postdeploy/scripts/certmanager-install.sh

      - name: Verify Cert Manager ClusterIssuer
        if: inputs.CERTMANAGER
        run: kubectl describe clusterissuer

      - name: Create azure-config secret and install externaldns
        env:
          EXTERNALDNSURI: "${{ inputs.HELMEXTERNALDNSURI }}"
          DNSDOMAIN: "${{ inputs.DNSDOMAIN }}"
          DNSRG: "${{ inputs.DNSRG }}"
        run: sh postdeploy/scripts/externaldns-config-install.sh

# Workflow is for testing reusable workflows to expedite the developer inner loop.

name: Test Harness for Reusable workflows

on:
  workflow_dispatch: 
  
  #pull_request:
  #  branches: [main]
  #  paths: 
  #    - ".github/workflows/Test_ReusableWorkflows.yml"

concurrency: ci-${{ github.ref }}

env:
  RG: "Automation-Actions-AksDeployCI"

jobs:
  test-run-cmd:
    runs-on: ubuntu-latest
    env:
      AKSNAME: aks-AksPriv
      AGNAME: agw-AksPriv
      APPNAME: azure-vote-public
    steps:
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: false
          environment: azurecloud
          allow-no-subscriptions: false
          
      - name: Verify Az Version
        run: az version
          
      - name: Getting nodes (Run cmd invoke)
        run: |
          echo "Connecting to $AKSNAME in $RG (output not specified)"
          
          az aks command invoke -g $RG -n $AKSNAME --command "
          kubectl get nodes
          "
          
          echo "Connecting to $AKSNAME in $RG (json output)"
          
          az aks command invoke -g $RG -n $AKSNAME -o json --command "
          kubectl get nodes
          "
          
      - name: Getting nodes json (Run cmd retrieve)
        run: |
          echo "Connecting to $AKSNAME in $RG"

          commandId=$(az aks command invoke -g $RG -n $AKSNAME -o tsv --query id --command "
          kubectl get nodes -ojson
          ")
          
          echo "CmdOut"
          echo $cmdout
          
          #commandId=$(echo $cmdout | jq -r '.id')
          echo $commandId
          
          echo "Retrieving result from id $commandId"
          nodes=$(az aks command result  -g $RG -n $AKSNAME -i $commandId)
          echo $nodes

      - name: Install the Vote app (run cmd)
        env:
          NAMESP: "default"
        run: |
          echo "Connecting to $AKSNAME in $RG"

          cmdout=$(az aks command invoke -g $RG -n $AKSNAME --command "
          kubectl get nodes
          ")
          echo $cmdout

          echo "Retrieving nodes"
          nodes=$(az aks command result  -g $RG -n $AKSNAME)
          echo $nodes


  deploy-azure-vote-app:
    needs: test-run-cmd
    uses: azure/aks-construction/.github/workflows/AppDeploy_AzureVote.yml@gb-denyall
    with:
      RG: Automation-Actions-AksDeployCI #$RG
      AKSNAME: aks-AksPriv
      AGNAME: agw-AksPriv
      APPNAME: azure-vote-public
      #MINIHELMBRANCH: main #main is the default
      INGRESSTYPE: "PublicLoadBalancer"
      UNINSTALLAFTERVERIFY: false
      USERUNCOMMAND: true
    secrets:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}


  # deploy-java-app-certmgr:
  #   uses: azure/aks-construction/.github/workflows/AppDeploy_JavaApp.yml@0.3.1
  #   with:
  #     RG: Automation-Actions-AksDeployCI #$RG
  #     AKSNAME: aks-Byo
  #     DNSDOMAIN: azdemo.co.uk
  #     DNSRG: domainssl
  #     DNSRECORDNAME: openjdk-demo
  #     AKVNAME: kv-Byo
  #     AGNAME: agw-Byo
  #     APPNAME: openjdk-demo
  #     FRONTENDCERTTYPE: certmanager-staging
  #     MINIHELMBRANCH: main
  #     UNINSTALLAFTERVERIFY: false
  #   secrets:
  #     AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

  # deploy-java-app-certmgr2:
  #   needs: [deploy-java-app-certmgr, deploy-java-app-kvssl]
  #   uses: azure/aks-construction/.github/workflows/AppDeploy_JavaApp.yml@0.3.1
  #   with:
  #     RG: Automation-Actions-AksDeployCI #$RG
  #     AKSNAME: aks-Byo
  #     DNSDOMAIN: azdemo.co.uk
  #     DNSRG: domainssl
  #     DNSRECORDNAME: openjdk-demo2
  #     AKVNAME: kv-Byo
  #     AGNAME: agw-Byo
  #     APPNAME: openjdk-demo2
  #     FRONTENDCERTTYPE: certmanager-staging
  #     MINIHELMBRANCH: main
  #     UNINSTALLAFTERVERIFY: false
  #   secrets:
  #     AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

  # deploy-java-app-kvssl:
  #   needs: [deploy-java-app-certmgr]
  #   #uses: azure/aks-construction/.github/workflows/AppDeploy_JavaApp.yml@gb-privatelink-cicd
  #   uses: azure/aks-construction/.github/workflows/AppDeploy_JavaApp.yml@0.3.1
  #   with:
  #     RG: Automation-Actions-AksDeployCI #$RG
  #     AKSNAME: aks-Byo
  #     DNSDOMAIN: azdemo.co.uk
  #     DNSRG: domainssl
  #     DNSRECORDNAME: openjdk-kvssl
  #     AKVNAME: kv-Byo
  #     AGNAME: agw-Byo
  #     APPNAME: openjdk-kvssl
  #     FRONTENDCERTTYPE: appgw-selfsigned
  #     MINIHELMBRANCH: main
  #     UNINSTALLAFTERVERIFY: false

  #   secrets:
  #     AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

# Builds a JSON file from the main.json bicep

name: BicepBuild

on:
  push: #On Push, we update the compiled.json with a GIT commit, to make sure it's always sync with the bicep.
    paths:
      - 'bicep/*'
    branches-ignore: main

  pull_request: #On PR, we're just doing validation that it compiled to support the build policy. No commits.
    branches: main
    paths:
      - 'bicep/*'

jobs:
  Validation:
    runs-on: ubuntu-latest
    outputs:
      isGitDiff: ${{ steps.isGitDiff.outputs.GITDIFF}}
      
    steps:
      - uses: actions/checkout@v2

      - name: ContextCheck
        shell: pwsh
        run: |
          echo 'ghen : ${{ github.event_name }}'
          echo "Sha is ${{ github.sha }}"
          echo "Ref is ${{ github.ref }}"
          echo "Ref name is ${{GITHUB.REF_NAME}}"
          dir

      - name: Install Bicep
        shell: pwsh
        run: |
          az bicep install

      - name: Bicep build
        shell: pwsh
        run: |
          #write-output $pwd
          $compiledir=Join-Path -Path $pwd -ChildPath "bicep/compiled"

          write-output $compiledir
          If(!(test-path $compiledir))
          {
                New-Item -ItemType Directory -Force -Path $compiledir
          }

          /home/runner/.azure/bin/bicep build bicep/main.bicep --outdir $compiledir

      - name: Git diff
        shell: pwsh
        id: isGitDiff
        run: |
          $diff=git diff --shortstat

          if ($null -eq $diff) {
            write-output "No difference in compiled bicep to commit"
            echo "::set-output name=GITDIFF::false" #outputting for condition
          }
          else {
            write-output "There are differences in compiled bicep to commit"
            echo $diff

            echo "::set-output name=GITDIFF::true" #outputting for condition
          }

      - name: Debug
        run: |
          echo "gitdiff is ${{ steps.isGitDiff.outputs.GITDIFF}}"

      - name: GIT Push Json file
        if: steps.isGitDiff.outputs.GITDIFF=='true' && github.event_name == 'push'
        uses: actions-x/commit@a8dd87de97778a220a28bb56bd761aa935582ce0
        with:
          message: Adding auto compiled bicep json

      - uses: actions/checkout@v2
        if: github.event_name == 'pull_request'
        name: Git Checkout target
        with:
          path: old
        
      - name: Check for Parameter changes in main.json
        if: github.event_name == 'pull_request'
        env: 
          oldFilePath: 'old/bicep/compiled/main.json'
          newFilePath : 'bicep/compiled/main.json'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_URL: ${{ github.event.pull_request.html_url }}
        shell: pwsh
        run: |
          $arm1params = get-content $Env:oldFilePath | ConvertFrom-Json -AsHashtable | Select -expandProperty parameters
          $arm2params = get-content $Env:newFilePath | ConvertFrom-Json -AsHashtable | Select -expandProperty parameters
          $arm1paramList = @()
          $arm1params.keys | % {$arm1paramList += New-Object PSObject -Property ([Ordered]@{Parameter=$_; DefaultValue=$arm1params.Get_Item($_).defaultValue | ConvertTo-Json -Compress })}
          $arm2paramList = @()
          $arm2params.keys | % {$arm2paramList+= New-Object PSObject -Property ([Ordered]@{Parameter=$_; DefaultValue=$arm2params.Get_Item($_).defaultValue | ConvertTo-Json -Compress })}
          $comparison = Compare-Object $arm1paramList $arm2paramList -Property Name, DefaultValue -PassThru | select Parameter, DefaultValue, @{N='FileVersion';E={$_.SideIndicator.replace('<=','Old').replace('=>','New')}}
          
          write-output $comparison
          if ($comparison.length -gt 0) {
              cd old #Need to change directory to give the gh cli repo context
              
              #GitHub uses a markdown rendering tool called Glamour. It copes with HTML pretty well, and pwsh loves html not markdown.
              [string]$html = $comparison | sort-object Parameter, @{e='FileVersion';desc=$true} | ConvertTo-Html -Fragment | Out-String
              Write-Output $html
              "<h2>Detected parameter change</h2><p>Parameter changes need to be reviewed carefully</p>" + $html | Out-File "ghpr.html"
              gh pr review ${{ github.event.pull_request.number }} -r -F "ghpr.html"
          } else {
              write-output "no changes to parameters"
          }

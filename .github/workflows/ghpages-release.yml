name: Release GitHub Pages site

on:
  workflow_dispatch:
    inputs:
      templateRelease:
        description: 'What (existing or NEW) release tag to point the Wizard to'
        type: string
        required: true
      createRelease:
        description: 'Create a NEW release with that tag'
        type: boolean
        required: false

env:
  templateRelease: ${{ github.event.inputs.templateRelease }}

jobs:
  BuildWebApp:
    runs-on: ubuntu-latest
    name: Build Web App
    steps:
      - uses: actions/checkout@v2

      - name: Job Parameter Checking
        run: |
          echo "GitHub Ref: ${{ github.ref }}"

      - name: Build node app with bicep release
        run: |
          cd helper
          npm install
          REACT_APP_APPINSIGHTS_KEY=${{ secrets.REACT_APP_APPINSIGHTS_KEY}} REACT_APP_TEMPLATERELEASE="${{env.templateRelease}}"  npm run build

      - name: Create GitHub pages release artifact
        uses: actions/upload-artifact@v2
        with:
          name: WizardApp
          path: helper/build

  CreateRelease:
    runs-on: ubuntu-latest
    name: Create GitHub Release (bicep)
    needs: [CreateBicepArtifacts]
    if: ${{ github.event.inputs.createRelease == 'true' }}
    steps:
      - uses: actions/checkout@v2

      - name: Check that the GitHub release doesn't already exist
        run: |
          GHJSON=$(gh release view ${{env.templateRelease}} --json name) || GHJSON=""

          if [ -z "$GHJSON" ]
          then
                echo "Release not found - great"
          else
                echo "Release already exists - aborting"
                exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Bicep release artifacts
        uses: actions/download-artifact@v3
        with:
          name: CompiledBicep
          path: compilebicep

      - name: Create GitHub release
        run: |
          GHJSON=$(gh release create ${{env.templateRelease}} 'bicep/compiled/main.json' -p --generate-notes )
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  CreateBicepArtifacts:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bicep: ['bicep/main.bicep' , 'samples/peered-vnet/main.bicep']
        
    name: Create bicep artifacts
    if: ${{ github.event.inputs.createRelease == 'true' }}
    steps:
      - uses: actions/checkout@v2

      - name: Infer name of artifact
        id: artifactName
        shell: pwsh
        run : |
          $filepath = ${{ matrix.bicep }}
          switch ( split-path $filepath )
          {
              'bicep' { $ARTIFACTNAME = 'main.json'    }
              'samples\peered-vnet' { $ARTIFACTNAME = 'sample-peeredvnet-main.json'    }
              default {  $ARTIFACTNAME = $filepath.replace("/","-") }
          }
          echo "::set-output name=ARTIFACTNAME::$ARTIFACTNAME"

      - name: Install Bicep
        shell: pwsh
        run: az bicep install

      - name: Bicep build
        shell: pwsh
        run: |
          /home/runner/.azure/bin/bicep build bicep/main.bicep --outfile "./${{ steps.artifactName.outputs.ARTIFACTNAME}}"

      - name: Create Bicep release artifact
        uses: actions/upload-artifact@v2
        with:
          name: CompiledBicep-${{ steps.artifactName.outputs.ARTIFACTNAME}}
          path: "./${{ steps.artifactName.outputs.ARTIFACTNAME}}"

  DeployWebAppToCanary:
    runs-on: ubuntu-latest
    name: Deploy Web App to Canary Pages
    if: ${{ always() }}
    needs: [BuildWebApp , CreateRelease, CreateBicepArtifacts]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: WizardApp
          path: wizardapp

      #Although we don't need this artifact, if it's missing then we can abort this job
      - uses: actions/download-artifact@v3
        if: ${{ github.event.inputs.createRelease == 'true' }}
        with:
          name: CompiledBicep
          path: compilebicep

      - name: Deploy to GitHub Pages Canary
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages-canary
          commit_message: Pages Release. Canary ${{env.templateRelease}}
          build_dir: wizardapp
          keep_history: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  DeployWebAppToProd:
    runs-on: ubuntu-latest
    name: Deploy Web App to Prod Pages
    if: ${{ always() && github.ref == 'refs/heads/main'}}
    environment: UI-Deploy-Manual-Approval
    needs: [BuildWebApp , CreateRelease, DeployWebAppToCanary]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: WizardApp
          path: wizardapp

      #Although we don't need this artifact, if it's missing then we can abort this job
      - uses: actions/download-artifact@v3
        if: ${{ github.event.inputs.createRelease == 'true' }}
        with:
          name: CompiledBicep
          path: compilebicep

      - name: Deploy to GitHub Pages Prod
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          commit_message: Pages Release. Prod ${{env.templateRelease}}
          build_dir: wizardapp
          keep_history: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

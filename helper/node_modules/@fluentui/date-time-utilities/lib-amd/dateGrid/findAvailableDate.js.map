{"version":3,"file":"findAvailableDate.js","sourceRoot":"../src/","sources":["dateGrid/findAvailableDate.ts"],"names":[],"mappings":";;;;IASA;;;OAGG;IACI,IAAM,iBAAiB,GAAG,UAAC,OAA8B;QACtD,IAAA,UAAU,GAAuD,OAAO,WAA9D,EAAE,WAAW,GAA0C,OAAO,YAAjD,EAAE,SAAS,GAA+B,OAAO,UAAtC,EAAK,qBAAqB,kBAAK,OAAO,EAA1E,0CAAgE,CAAF,CAAa;QACjF,IAAI,aAAa,GAAG,UAAU,CAAC;QAC/B,yDAAyD;QACzD,IAAI,CAAC,mCAAgB,CAAC,UAAU,EAAE,qBAAqB,CAAC,EAAE;YACxD,OAAO,UAAU,CAAC;SACnB;QAED,OACE,0BAAe,CAAC,WAAW,EAAE,aAAa,CAAC,KAAK,CAAC;YACjD,mCAAgB,CAAC,aAAa,EAAE,qBAAqB,CAAC;YACtD,CAAC,+BAAc,CAAC,aAAa,EAAE,qBAAqB,CAAC;YACrD,CAAC,iCAAe,CAAC,aAAa,EAAE,qBAAqB,CAAC,EACtD;YACA,aAAa,GAAG,kBAAO,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;SACnD;QAED,IAAI,0BAAe,CAAC,WAAW,EAAE,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,mCAAgB,CAAC,aAAa,EAAE,qBAAqB,CAAC,EAAE;YAChH,OAAO,aAAa,CAAC;SACtB;QAED,OAAO,SAAS,CAAC;IACnB,CAAC,CAAC;IAtBW,QAAA,iBAAiB,qBAsB5B","sourcesContent":["import { IAvailableDateOptions } from './dateGrid.types';\n\nimport { isRestrictedDate } from './isRestrictedDate';\n\nimport { isAfterMaxDate } from './isAfterMaxDate';\n\nimport { isBeforeMinDate } from './isBeforeMinDate';\nimport { compareDatePart, addDays } from '../dateMath/dateMath';\n\n/**\n * Returns closest available date given the restriction `options`, or undefined otherwise\n * @param options - list of search options\n */\nexport const findAvailableDate = (options: IAvailableDateOptions): Date | undefined => {\n  const { targetDate, initialDate, direction, ...restrictedDateOptions } = options;\n  let availableDate = targetDate;\n  // if the target date is available, return it immediately\n  if (!isRestrictedDate(targetDate, restrictedDateOptions)) {\n    return targetDate;\n  }\n\n  while (\n    compareDatePart(initialDate, availableDate) !== 0 &&\n    isRestrictedDate(availableDate, restrictedDateOptions) &&\n    !isAfterMaxDate(availableDate, restrictedDateOptions) &&\n    !isBeforeMinDate(availableDate, restrictedDateOptions)\n  ) {\n    availableDate = addDays(availableDate, direction);\n  }\n\n  if (compareDatePart(initialDate, availableDate) !== 0 && !isRestrictedDate(availableDate, restrictedDateOptions)) {\n    return availableDate;\n  }\n\n  return undefined;\n};\n"]}
{"version":3,"file":"dateGrid.types.js","sourceRoot":"../src/","sources":["dateGrid/dateGrid.types.ts"],"names":[],"mappings":"","sourcesContent":["import { DayOfWeek, DateRangeType, FirstWeekOfYear } from '../dateValues/dateValues';\n\nexport interface IDay {\n  /** `Date.toString()` value of current date */\n  key: string;\n  /** `Date.getDate()` value of current date */\n  date: string;\n  /** `Date` object of current date */\n  originalDate: Date;\n  /** Is current date is in the same month as \"today\" date */\n  isInMonth: boolean;\n  /** Is current date is \"today\" date */\n  isToday: boolean;\n  /** Is current date is selected */\n  isSelected: boolean;\n  /** Is current date within restriction boundaries */\n  isInBounds: boolean;\n  /** Is current date marked */\n  isMarked: boolean;\n}\n\nexport interface IAvailableDateOptions extends IRestrictedDatesOptions {\n  /** Date from which we start the search */\n  initialDate: Date;\n  /** Ideal available date */\n  targetDate: Date;\n  /** Direction of search (`1` - search in future / `-1` search in past) */\n  direction: number;\n}\n\n/**\n * {@docCategory DateTimeUtilities}\n */\nexport interface IRestrictedDatesOptions {\n  /**\n   * If set the Calendar will not allow navigation to or selection of a date earlier than this value.\n   */\n  minDate?: Date;\n\n  /**\n   * If set the Calendar will not allow navigation to or selection of a date later than this value.\n   */\n  maxDate?: Date;\n\n  /**\n   * If set the Calendar will not allow selection of dates in this array.\n   */\n  restrictedDates?: Date[];\n}\n\n/**\n * {@docCategory DateTimeUtilities}\n */\nexport interface IDayGridOptions extends IRestrictedDatesOptions {\n  /**\n   * The first day of the week for your locale.\n   */\n  firstDayOfWeek: DayOfWeek;\n\n  /**\n   * Defines when the first week of the year should start, FirstWeekOfYear.FirstDay,\n   * FirstWeekOfYear.FirstFullWeek or FirstWeekOfYear.FirstFourDayWeek are the possible values\n   */\n  firstWeekOfYear: FirstWeekOfYear;\n\n  /**\n   * The date range type indicating how  many days should be selected as the user\n   * selects days\n   */\n  dateRangeType: DateRangeType;\n\n  /**\n   * The number of days to select while dateRangeType === DateRangeType.Day. Used in order to have multi-day\n   * views.\n   */\n  daysToSelectInDayView?: number;\n\n  /**\n   * Value of today. If unspecified, current time in client machine will be used.\n   */\n  today?: Date;\n\n  /**\n   * Whether the calendar should show the week number (weeks 1 to 53) before each week row\n   */\n  showWeekNumbers?: boolean;\n\n  /**\n   * The days that are selectable when `dateRangeType` is WorkWeek.\n   * If `dateRangeType` is not WorkWeek this property does nothing.\n   */\n  workWeekDays?: DayOfWeek[];\n\n  /**\n   * Which days in the generated grid should be marked.\n   */\n  markedDays?: Date[];\n\n  /**\n   * The currently selected date\n   */\n  selectedDate: Date;\n\n  /**\n   * The currently navigated date\n   */\n  navigatedDate: Date;\n\n  /**\n   * How many weeks to show by default. If not provided, will show enough weeks to display the current\n   * month, between 4 and 6 depending\n   */\n  weeksToShow?: number;\n}\n"]}
{"version":3,"file":"isRestrictedDate.js","sourceRoot":"../src/","sources":["dateGrid/isRestrictedDate.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;AACpD,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAElD;;;;GAIG;AACH,MAAM,CAAC,IAAM,gBAAgB,GAAG,UAAC,IAAU,EAAE,OAAgC;IACnE,IAAA,eAAe,GAAuB,OAAO,gBAA9B,EAAE,OAAO,GAAc,OAAO,QAArB,EAAE,OAAO,GAAK,OAAO,QAAZ,CAAa;IACtD,IAAI,CAAC,eAAe,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,EAAE;QAC5C,OAAO,KAAK,CAAC;KACd;IACD,IAAM,iBAAiB,GAAG,eAAe,IAAI,eAAe,CAAC,IAAI,CAAC,UAAC,EAAQ,IAAK,OAAA,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,EAAtB,CAAsB,CAAC,CAAC;IACxG,OAAO,iBAAiB,IAAI,eAAe,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,cAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAC9F,CAAC,CAAC","sourcesContent":["import { IRestrictedDatesOptions } from './dateGrid.types';\nimport { compareDates } from '../dateMath/dateMath';\nimport { isBeforeMinDate } from './isBeforeMinDate';\nimport { isAfterMaxDate } from './isAfterMaxDate';\n\n/**\n * Checks if `date` falls into the restricted `options`\n * @param date - date to check\n * @param options - restriction options (min date, max date and list of restricted dates)\n */\nexport const isRestrictedDate = (date: Date, options: IRestrictedDatesOptions): boolean => {\n  const { restrictedDates, minDate, maxDate } = options;\n  if (!restrictedDates && !minDate && !maxDate) {\n    return false;\n  }\n  const inRestrictedDates = restrictedDates && restrictedDates.some((rd: Date) => compareDates(rd, date));\n  return inRestrictedDates || isBeforeMinDate(date, options) || isAfterMaxDate(date, options);\n};\n"]}
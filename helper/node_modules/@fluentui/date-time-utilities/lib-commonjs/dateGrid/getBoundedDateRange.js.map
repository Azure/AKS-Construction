{"version":3,"file":"getBoundedDateRange.js","sourceRoot":"../src/","sources":["dateGrid/getBoundedDateRange.ts"],"names":[],"mappings":";;;;AAAA,iDAAuD;AAEvD;;;;;GAKG;AACI,IAAM,mBAAmB,GAAG,UAAC,SAAiB,EAAE,OAAc,EAAE,OAAc;IACnF,IAAI,gBAAgB,6BAAO,SAAS,CAAC,CAAC;IACtC,IAAI,OAAO,EAAE;QACX,gBAAgB,GAAG,gBAAgB,CAAC,MAAM,CAAC,UAAC,IAAU,IAAK,OAAA,0BAAe,CAAC,IAAI,EAAE,OAAe,CAAC,IAAI,CAAC,EAA3C,CAA2C,CAAC,CAAC;KACzG;IACD,IAAI,OAAO,EAAE;QACX,gBAAgB,GAAG,gBAAgB,CAAC,MAAM,CAAC,UAAC,IAAU,IAAK,OAAA,0BAAe,CAAC,IAAI,EAAE,OAAe,CAAC,IAAI,CAAC,EAA3C,CAA2C,CAAC,CAAC;KACzG;IACD,OAAO,gBAAgB,CAAC;AAC1B,CAAC,CAAC;AATW,QAAA,mBAAmB,uBAS9B","sourcesContent":["import { compareDatePart } from '../dateMath/dateMath';\n\n/**\n * Generates a list of dates, bounded by min and max dates\n * @param dateRange - input date range\n * @param minDate - min date to limit the range\n * @param maxDate - max date to limit the range\n */\nexport const getBoundedDateRange = (dateRange: Date[], minDate?: Date, maxDate?: Date): Date[] => {\n  let boundedDateRange = [...dateRange];\n  if (minDate) {\n    boundedDateRange = boundedDateRange.filter((date: Date) => compareDatePart(date, minDate as Date) >= 0);\n  }\n  if (maxDate) {\n    boundedDateRange = boundedDateRange.filter((date: Date) => compareDatePart(date, maxDate as Date) <= 0);\n  }\n  return boundedDateRange;\n};\n"]}
{"version":3,"file":"keyboard.js","sourceRoot":"../src/","sources":["keyboard.ts"],"names":[],"mappings":";;;;;IAEA,IAAM,mBAAmB;QACvB,GAAC,mBAAQ,CAAC,EAAE,IAAG,CAAC;QAChB,GAAC,mBAAQ,CAAC,IAAI,IAAG,CAAC;QAClB,GAAC,mBAAQ,CAAC,IAAI,IAAG,CAAC;QAClB,GAAC,mBAAQ,CAAC,KAAK,IAAG,CAAC;QACnB,GAAC,mBAAQ,CAAC,IAAI,IAAG,CAAC;QAClB,GAAC,mBAAQ,CAAC,GAAG,IAAG,CAAC;QACjB,GAAC,mBAAQ,CAAC,GAAG,IAAG,CAAC;QACjB,GAAC,mBAAQ,CAAC,MAAM,IAAG,CAAC;QACpB,GAAC,mBAAQ,CAAC,QAAQ,IAAG,CAAC;WACvB,CAAC;IAEF;;OAEG;IACH,SAAgB,oBAAoB,CAAC,KAAa;QAChD,OAAO,CAAC,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAFD,oDAEC;IAED;;;;OAIG;IACH,SAAgB,qBAAqB,CAAC,KAAa;QACjD,mBAAmB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAFD,sDAEC;IAED;;;;OAIG;IACH,SAAgB,wBAAwB,CAAC,KAAa;QACpD,OAAO,mBAAmB,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAFD,4DAEC","sourcesContent":["import { KeyCodes } from './KeyCodes';\n\nconst DirectionalKeyCodes: { [key: number]: number } = {\n  [KeyCodes.up]: 1,\n  [KeyCodes.down]: 1,\n  [KeyCodes.left]: 1,\n  [KeyCodes.right]: 1,\n  [KeyCodes.home]: 1,\n  [KeyCodes.end]: 1,\n  [KeyCodes.tab]: 1,\n  [KeyCodes.pageUp]: 1,\n  [KeyCodes.pageDown]: 1,\n};\n\n/**\n * Returns true if the keycode is a directional keyboard key.\n */\nexport function isDirectionalKeyCode(which: number): boolean {\n  return !!DirectionalKeyCodes[which];\n}\n\n/**\n * Adds a keycode to the list of keys that, when pressed, should cause the focus outlines to be visible.\n * This can be used to add global shortcut keys that directionally move from section to section within\n * an app or between focus trap zones.\n */\nexport function addDirectionalKeyCode(which: number): void {\n  DirectionalKeyCodes[which] = 1;\n}\n\n/**\n * Removes a keycode to the list of keys that, when pressed, should cause the focus outlines to be visible.\n * This can be used to remove global shortcut keys that directionally move from section to section within\n * an app or between focus trap zones.\n */\nexport function removeDirectionalKeyCode(which: number): void {\n  delete DirectionalKeyCodes[which];\n}\n"]}
{"version":3,"file":"setFocusVisibility.js","sourceRoot":"../src/","sources":["setFocusVisibility.ts"],"names":[],"mappings":";;;;IAEa,QAAA,uBAAuB,GAAG,2BAA2B,CAAC;IACtD,QAAA,sBAAsB,GAAG,0BAA0B,CAAC;IAEjE,SAAS,eAAe,CAAC,EAAkC,EAAE,OAAgB;QAC3E,IAAI,EAAE,EAAE;YACN,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,+BAAuB,CAAC,CAAC,CAAC,8BAAsB,CAAC,CAAC;YAC7E,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,8BAAsB,CAAC,CAAC,CAAC,+BAAuB,CAAC,CAAC;SACjF;IACH,CAAC;IAED;;;;;;;;;;;;;;OAcG;IACH,SAAgB,kBAAkB,CAChC,OAAgB,EAChB,MAAgB,EAChB,mBAAoD;;QAEpD,IAAI,mBAAmB,EAAE;YACvB,mBAAmB,CAAC,OAAO,CAAC,UAAA,GAAG,IAAI,OAAA,eAAe,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,EAArC,CAAqC,CAAC,CAAC;SAC3E;aAAM;YACL,eAAe,CAAC,MAAA,qBAAS,CAAC,MAAM,CAAC,0CAAE,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;SAC5D;IACH,CAAC;IAVD,gDAUC","sourcesContent":["import * as React from 'react';\nimport { getWindow } from './dom/getWindow';\nexport const IsFocusVisibleClassName = 'ms-Fabric--isFocusVisible';\nexport const IsFocusHiddenClassName = 'ms-Fabric--isFocusHidden';\n\nfunction updateClassList(el: HTMLElement | null | undefined, enabled: boolean) {\n  if (el) {\n    el.classList.add(enabled ? IsFocusVisibleClassName : IsFocusHiddenClassName);\n    el.classList.remove(enabled ? IsFocusHiddenClassName : IsFocusVisibleClassName);\n  }\n}\n\n/**\n * Sets the visibility of focus styling.\n *\n * By default, focus styles (the box surrounding a focused Button, for example) only show up when navigational\n * keypresses occur (through Tab, arrows, PgUp/PgDn, Home and End), and are hidden when mouse interactions occur.\n * This API provides an imperative way to turn them on/off.\n *\n * A use case might be when you have a keypress like ctrl-f6 navigate to a particular region on the page,\n * and want focus to show up.\n *\n * @param enabled - Whether to turn focus visibility on or off.\n * @param target - Optional target from which to get window in case no `providerElem` has been specified.\n * @param registeredProviders - Array of provider refs that are associated with a FocusRectsProvider. If no array\n *                              is passed in, the classnames are attached to the document body that contains `target`.\n */\nexport function setFocusVisibility(\n  enabled: boolean,\n  target?: Element,\n  registeredProviders?: React.RefObject<HTMLElement>[],\n): void {\n  if (registeredProviders) {\n    registeredProviders.forEach(ref => updateClassList(ref.current, enabled));\n  } else {\n    updateClassList(getWindow(target)?.document.body, enabled);\n  }\n}\n"]}
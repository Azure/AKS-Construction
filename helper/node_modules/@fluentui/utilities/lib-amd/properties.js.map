{"version":3,"file":"properties.js","sourceRoot":"../src/","sources":["properties.ts"],"names":[],"mappings":"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","sourcesContent":["const toObjectMap = (...items: (string[] | Record<string, number>)[]) => {\n  const result: Record<string, number> = {};\n\n  for (const item of items) {\n    const keys = Array.isArray(item) ? item : Object.keys(item);\n\n    for (const key of keys) {\n      result[key] = 1;\n    }\n  }\n\n  return result;\n};\n\n/**\n * An array of events that are allowed on every html element type.\n *\n * @public\n */\nexport const baseElementEvents = toObjectMap([\n  'onCopy',\n  'onCut',\n  'onPaste',\n  'onCompositionEnd',\n  'onCompositionStart',\n  'onCompositionUpdate',\n  'onFocus',\n  'onFocusCapture',\n  'onBlur',\n  'onBlurCapture',\n  'onChange',\n  'onInput',\n  'onSubmit',\n  'onLoad',\n  'onError',\n  'onKeyDown',\n  'onKeyDownCapture',\n  'onKeyPress',\n  'onKeyUp',\n  'onAbort',\n  'onCanPlay',\n  'onCanPlayThrough',\n  'onDurationChange',\n  'onEmptied',\n  'onEncrypted',\n  'onEnded',\n  'onLoadedData',\n  'onLoadedMetadata',\n  'onLoadStart',\n  'onPause',\n  'onPlay',\n  'onPlaying',\n  'onProgress',\n  'onRateChange',\n  'onSeeked',\n  'onSeeking',\n  'onStalled',\n  'onSuspend',\n  'onTimeUpdate',\n  'onVolumeChange',\n  'onWaiting',\n  'onClick',\n  'onClickCapture',\n  'onContextMenu',\n  'onDoubleClick',\n  'onDrag',\n  'onDragEnd',\n  'onDragEnter',\n  'onDragExit',\n  'onDragLeave',\n  'onDragOver',\n  'onDragStart',\n  'onDrop',\n  'onMouseDown',\n  'onMouseDownCapture',\n  'onMouseEnter',\n  'onMouseLeave',\n  'onMouseMove',\n  'onMouseOut',\n  'onMouseOver',\n  'onMouseUp',\n  'onMouseUpCapture',\n  'onSelect',\n  'onTouchCancel',\n  'onTouchEnd',\n  'onTouchMove',\n  'onTouchStart',\n  'onScroll',\n  'onWheel',\n  'onPointerCancel',\n  'onPointerDown',\n  'onPointerEnter',\n  'onPointerLeave',\n  'onPointerMove',\n  'onPointerOut',\n  'onPointerOver',\n  'onPointerUp',\n  'onGotPointerCapture',\n  'onLostPointerCapture',\n]);\n\n/**\n * An array of element attributes which are allowed on every html element type.\n *\n * @public\n */\nexport const baseElementProperties = toObjectMap([\n  'accessKey', // global\n  'children', // global\n  'className', // global\n  'contentEditable', // global\n  'dir', // global\n  'draggable', // global\n  'hidden', // global\n  'htmlFor', // global\n  'id', // global\n  'lang', // global\n  'ref', // global\n  'role', // global\n  'style', // global\n  'tabIndex', // global\n  'title', // global\n  'translate', // global\n  'spellCheck', // global\n  'name', // global\n]);\n\n/**\n * An array of HTML element properties and events.\n *\n * @public\n */\nexport const htmlElementProperties = toObjectMap(baseElementProperties, baseElementEvents);\n\n/**\n * An array of LABEL tag properties and events.\n *\n * @public\n */\nexport const labelProperties = toObjectMap(htmlElementProperties, [\n  'form', // button, fieldset, input, label, meter, object, output, select, textarea\n]);\n\n/**\n * An array of AUDIO tag properties and events.\n\n * @public\n */\nexport const audioProperties = toObjectMap(htmlElementProperties, [\n  'height', // canvas, embed, iframe, img, input, object, video\n  'loop', // audio, video\n  'muted', // audio, video\n  'preload', // audio, video\n  'src', // audio, embed, iframe, img, input, script, source, track, video\n  'width', // canvas, embed, iframe, img, input, object, video\n]);\n\n/**\n * An array of VIDEO tag properties and events.\n *\n * @public\n */\nexport const videoProperties = toObjectMap(audioProperties, [\n  'poster', // video\n]);\n\n/**\n * An array of OL tag properties and events.\n *\n * @public\n */\nexport const olProperties = toObjectMap(htmlElementProperties, [\n  'start', // ol\n]);\n\n/**\n * An array of LI tag properties and events.\n *\n * @public\n */\nexport const liProperties = toObjectMap(htmlElementProperties, [\n  'value', // button, input, li, option, meter, progress, param\n]);\n\n/**\n * An array of A tag properties and events.\n *\n * @public\n */\nexport const anchorProperties = toObjectMap(htmlElementProperties, [\n  'download', // a, area\n  'href', // a, area, base, link\n  'hrefLang', // a, area, link\n  'media', // a, area, link, source, style\n  'rel', // a, area, link\n  'target', // a, area, base, form\n  'type', // a, button, input, link, menu, object, script, source, style\n]);\n\n/**\n * An array of BUTTON tag properties and events.\n *\n * @public\n */\nexport const buttonProperties = toObjectMap(htmlElementProperties, [\n  'autoFocus', // button, input, select, textarea\n  'disabled', // button, fieldset, input, optgroup, option, select, textarea\n  'form', // button, fieldset, input, label, meter, object, output, select, textarea\n  'formAction', // input, button\n  'formEncType', // input, button\n  'formMethod', // input, button\n  'formNoValidate', // input, button\n  'formTarget', // input, button\n  'type', // a, button, input, link, menu, object, script, source, style\n  'value', // button, input, li, option, meter, progress, param,\n]);\n\n/**\n * An array of INPUT tag properties and events.\n *\n * @public\n */\nexport const inputProperties = toObjectMap(buttonProperties, [\n  'accept', // input\n  'alt', // area, img, input\n  'autoCapitalize', // input, textarea\n  'autoComplete', // form, input\n  'checked', // input\n  'dirname', // input, textarea\n  'form', // button, fieldset, input, label, meter, object, output, select, textarea\n  'height', // canvas, embed, iframe, img, input, object, video\n  'inputMode', // input\n  'list', // input\n  'max', // input, meter\n  'maxLength', // input, textarea\n  'min', // input, meter\n  'minLength', // input, textarea\n  'multiple', // input, select\n  'pattern', // input\n  'placeholder', // input, textarea\n  'readOnly', // input, textarea\n  'required', // input, select, textarea\n  'src', // audio, embed, iframe, img, input, script, source, track, video\n  'step', // input\n  'size', // input\n  'type', // a, button, input, link, menu, object, script, source, style\n  'value', // button, input, li, option, meter, progress, param\n  'width', // canvas, embed, iframe, img, input, object, video\n]);\n\n/**\n * An array of TEXTAREA tag properties and events.\n *\n * @public\n */\nexport const textAreaProperties = toObjectMap(buttonProperties, [\n  'autoCapitalize', // input, textarea\n  'cols', // textarea\n  'dirname', // input, textarea\n  'form', // button, fieldset, input, label, meter, object, output, select, textarea\n  'maxLength', // input, textarea\n  'minLength', // input, textarea\n  'placeholder', // input, textarea\n  'readOnly', // input, textarea\n  'required', // input, select, textarea\n  'rows', // textarea\n  'wrap', // textarea\n]);\n\n/**\n * An array of SELECT tag properties and events.\n *\n * @public\n */\nexport const selectProperties = toObjectMap(buttonProperties, [\n  'form', // button, fieldset, input, label, meter, object, output, select, textarea\n  'multiple', // input, select\n  'required', // input, select, textarea\n]);\n\nexport const optionProperties = toObjectMap(htmlElementProperties, [\n  'selected', // option\n  'value', // button, input, li, option, meter, progress, param\n]);\n\n/**\n * An array of TABLE tag properties and events.\n *\n * @public\n */\nexport const tableProperties = toObjectMap(htmlElementProperties, [\n  'cellPadding', // table\n  'cellSpacing', // table\n]);\n\n/**\n * An array of TR tag properties and events.\n *\n * @public\n */\nexport const trProperties = htmlElementProperties;\n\n/**\n * An array of TH tag properties and events.\n *\n * @public\n */\nexport const thProperties = toObjectMap(htmlElementProperties, [\n  'rowSpan', // td, th\n  'scope', // th\n]);\n\n/**\n * An array of TD tag properties and events.\n *\n * @public\n */\nexport const tdProperties = toObjectMap(htmlElementProperties, [\n  'colSpan', // td\n  'headers', // td\n  'rowSpan', // td, th\n  'scope', // th\n]);\n\nexport const colGroupProperties = toObjectMap(htmlElementProperties, [\n  'span', // col, colgroup\n]);\n\nexport const colProperties = toObjectMap(htmlElementProperties, [\n  'span', // col, colgroup\n]);\n\n/**\n * An array of FORM tag properties and events.\n *\n * @public\n */\nexport const formProperties = toObjectMap(htmlElementProperties, [\n  'acceptCharset', // form\n  'action', // form\n  'encType', // form\n  'encType', // form\n  'method', // form\n  'noValidate', // form\n  'target', // form\n]);\n\n/**\n * An array of IFRAME tag properties and events.\n *\n * @public\n */\nexport const iframeProperties = toObjectMap(htmlElementProperties, [\n  'allow', // iframe\n  'allowFullScreen', // iframe\n  'allowPaymentRequest', // iframe\n  'allowTransparency', // iframe\n  'csp', // iframe\n  'height', // canvas, embed, iframe, img, input, object, video\n  'importance', // iframe\n  'referrerPolicy', // iframe\n  'sandbox', // iframe\n  'src', // audio, embed, iframe, img, input, script, source, track, video\n  'srcDoc', // iframe\n  'width', // canvas, embed, iframe, img, input, object, video,\n]);\n\n/**\n * An array of IMAGE tag properties and events.\n *\n * @public\n */\nexport const imgProperties = toObjectMap(htmlElementProperties, [\n  'alt', // area, img, input\n  'crossOrigin', // img\n  'height', // canvas, embed, iframe, img, input, object, video\n  'src', // audio, embed, iframe, img, input, script, source, track, video\n  'srcSet', // img, source\n  'useMap', // img, object,\n  'width', // canvas, embed, iframe, img, input, object, video\n]);\n\n/**\n * @deprecated Use imgProperties for img elements.\n */\nexport const imageProperties = imgProperties;\n\n/**\n * An array of DIV tag properties and events.\n *\n * @public\n */\nexport const divProperties = htmlElementProperties;\n\n/**\n * Gets native supported props for an html element provided the allowance set. Use one of the property\n * sets defined (divProperties, buttonPropertes, etc) to filter out supported properties from a given\n * props set. Note that all data- and aria- prefixed attributes will be allowed.\n * NOTE: getNativeProps should always be applied first when adding props to a react component. The\n * non-native props should be applied second. This will prevent getNativeProps from overriding your custom props.\n * For example, if props passed to getNativeProps has an onClick function and getNativeProps is added to\n * the component after an onClick function is added, then the getNativeProps onClick will override it.\n *\n * @public\n * @param props - The unfiltered input props\n * @param allowedPropsNames - The array or record of allowed prop names.\n * @returns The filtered props\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getNativeProps<T extends Record<string, any>>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props: Record<string, any>,\n  allowedPropNames: string[] | Record<string, number>,\n  excludedPropNames?: string[],\n): T {\n  // It'd be great to properly type this while allowing 'aria-` and 'data-' attributes like TypeScript does for\n  // JSX attributes, but that ability is hardcoded into the TS compiler with no analog in TypeScript typings.\n  // Then we'd be able to enforce props extends native props (including aria- and data- attributes), and then\n  // return native props.\n  // We should be able to do this once this PR is merged: https://github.com/microsoft/TypeScript/pull/26797\n\n  const isArray = Array.isArray(allowedPropNames);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const result: Record<string, any> = {};\n  const keys = Object.keys(props);\n\n  for (const key of keys) {\n    const isNativeProp =\n      (!isArray && (allowedPropNames as Record<string, number>)[key]) ||\n      (isArray && (allowedPropNames as string[]).indexOf(key) >= 0) ||\n      key.indexOf('data-') === 0 ||\n      key.indexOf('aria-') === 0;\n\n    if (isNativeProp && (!excludedPropNames || excludedPropNames?.indexOf(key) === -1)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      result[key] = props![key] as any;\n    }\n  }\n\n  return result as T;\n}\n"]}
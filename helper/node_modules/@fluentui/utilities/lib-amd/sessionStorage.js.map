{"version":3,"file":"sessionStorage.js","sourceRoot":"../src/","sources":["sessionStorage.ts"],"names":[],"mappings":";;;;IAEA;;;OAGG;IACH,SAAgB,OAAO,CAAC,GAAW;QACjC,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI;YACF,IAAM,GAAG,GAAG,qBAAS,EAAE,CAAC;YACxB,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;SACvD;QAAC,OAAO,CAAC,EAAE;YACV,uBAAuB;SACxB;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IATD,0BASC;IAED;;;;OAIG;IACH,SAAgB,OAAO,CAAC,GAAW,EAAE,IAAY;;QAC/C,IAAI;YACF,MAAA,qBAAS,EAAE,0CAAE,cAAc,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;SAChD;QAAC,OAAO,CAAC,EAAE;YACV,uBAAuB;SACxB;IACH,CAAC;IAND,0BAMC","sourcesContent":["import { getWindow } from './dom/getWindow';\n\n/**\n * Fetches an item from session storage without throwing an exception\n * @param key The key of the item to fetch from session storage\n */\nexport function getItem(key: string): string | null {\n  let result = null;\n  try {\n    const win = getWindow();\n    result = win ? win.sessionStorage.getItem(key) : null;\n  } catch (e) {\n    /* Eat the exception */\n  }\n  return result;\n}\n\n/**\n * Inserts an item into session storage without throwing an exception\n * @param key The key of the item to add to session storage\n * @param data The data to put into session storage\n */\nexport function setItem(key: string, data: string): void {\n  try {\n    getWindow()?.sessionStorage.setItem(key, data);\n  } catch (e) {\n    /* Eat the exception */\n  }\n}\n"]}
{"version":3,"file":"getRect.js","sourceRoot":"../src/","sources":["dom/getRect.ts"],"names":[],"mappings":";;;;IAEA;;;;OAIG;IACH,SAAgB,OAAO,CAAC,OAAoC;QAC1D,IAAI,IAA4B,CAAC;QACjC,IAAI,OAAO,EAAE;YACX,IAAI,OAAO,KAAK,MAAM,EAAE;gBACtB,IAAI,GAAG;oBACL,IAAI,EAAE,CAAC;oBACP,GAAG,EAAE,CAAC;oBACN,KAAK,EAAE,MAAM,CAAC,UAAU;oBACxB,MAAM,EAAE,MAAM,CAAC,WAAW;oBAC1B,KAAK,EAAE,MAAM,CAAC,UAAU;oBACxB,MAAM,EAAE,MAAM,CAAC,WAAW;iBAC3B,CAAC;aACH;iBAAM,IAAK,OAA+C,CAAC,qBAAqB,EAAE;gBACjF,IAAI,GAAI,OAAuB,CAAC,qBAAqB,EAAE,CAAC;aACzD;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAjBD,0BAiBC","sourcesContent":["import type { IRectangle } from '../IRectangle';\n\n/**\n * Helper to get bounding client rect. Passing in window will get the window size.\n *\n * @public\n */\nexport function getRect(element: HTMLElement | Window | null): IRectangle | undefined {\n  let rect: IRectangle | undefined;\n  if (element) {\n    if (element === window) {\n      rect = {\n        left: 0,\n        top: 0,\n        width: window.innerWidth,\n        height: window.innerHeight,\n        right: window.innerWidth,\n        bottom: window.innerHeight,\n      };\n    } else if ((element as { getBoundingClientRect?: unknown }).getBoundingClientRect) {\n      rect = (element as HTMLElement).getBoundingClientRect();\n    }\n  }\n  return rect;\n}\n"]}
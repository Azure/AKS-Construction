{"version":3,"file":"rtl.js","sourceRoot":"../src/","sources":["rtl.ts"],"names":[],"mappings":";;;;IAKA,IAAM,qBAAqB,GAAG,OAAO,CAAC;IAEtC,4DAA4D;IAC5D,IAAI,MAA2B,CAAC;IAEhC;;OAEG;IACH,SAAgB,MAAM,CAAC,KAA6B;QAA7B,sBAAA,EAAA,UAA6B;QAClD,IAAI,KAAK,CAAC,GAAG,KAAK,SAAS,EAAE;YAC3B,OAAO,KAAK,CAAC,GAAG,CAAC;SAClB;QACD,IAAI,MAAM,KAAK,SAAS,EAAE;YACxB,wFAAwF;YACxF,IAAI,QAAQ,GAAG,wBAAO,CAAC,qBAAqB,CAAC,CAAC;YAC9C,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACrB,MAAM,GAAG,QAAQ,KAAK,GAAG,CAAC;gBAC1B,MAAM,CAAC,MAAM,CAAC,CAAC;aAChB;YAED,IAAI,GAAG,GAAG,yBAAW,EAAE,CAAC;YACxB,IAAI,MAAM,KAAK,SAAS,IAAI,GAAG,EAAE;gBAC/B,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,KAAK,KAAK,CAAC;gBAC3G,qBAAiB,CAAC,MAAM,CAAC,CAAC;aAC3B;SACF;QAED,OAAO,CAAC,CAAC,MAAM,CAAC;IAClB,CAAC;IApBD,wBAoBC;IAED;;OAEG;IACH,SAAgB,MAAM,CAAC,KAAc,EAAE,cAA+B;QAA/B,+BAAA,EAAA,sBAA+B;QACpE,IAAI,GAAG,GAAG,yBAAW,EAAE,CAAC;QACxB,IAAI,GAAG,EAAE;YACP,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SAChE;QAED,IAAI,cAAc,EAAE;YAClB,wBAAO,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SACnD;QAED,MAAM,GAAG,KAAK,CAAC;QACf,qBAAiB,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;IAZD,wBAYC;IAED;;OAEG;IACH,SAAgB,iBAAiB,CAAC,GAAW,EAAE,KAA6B;QAA7B,sBAAA,EAAA,UAA6B;QAC1E,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE;YACjB,IAAI,GAAG,KAAK,mBAAQ,CAAC,IAAI,EAAE;gBACzB,GAAG,GAAG,mBAAQ,CAAC,KAAK,CAAC;aACtB;iBAAM,IAAI,GAAG,KAAK,mBAAQ,CAAC,KAAK,EAAE;gBACjC,GAAG,GAAG,mBAAQ,CAAC,IAAI,CAAC;aACrB;SACF;QAED,OAAO,GAAG,CAAC;IACb,CAAC;IAVD,8CAUC","sourcesContent":["import { KeyCodes } from './KeyCodes';\nimport { getDocument } from './dom/getDocument';\nimport { getItem, setItem } from './sessionStorage';\nimport { setRTL as mergeStylesSetRTL } from '@fluentui/merge-styles';\n\nconst RTL_LOCAL_STORAGE_KEY = 'isRTL';\n\n// Default to undefined so that we initialize on first read.\nlet _isRTL: boolean | undefined;\n\n/**\n * Gets the rtl state of the page (returns true if in rtl.)\n */\nexport function getRTL(theme: { rtl?: boolean } = {}): boolean {\n  if (theme.rtl !== undefined) {\n    return theme.rtl;\n  }\n  if (_isRTL === undefined) {\n    // Fabric supports persisting the RTL setting between page refreshes via session storage\n    let savedRTL = getItem(RTL_LOCAL_STORAGE_KEY);\n    if (savedRTL !== null) {\n      _isRTL = savedRTL === '1';\n      setRTL(_isRTL);\n    }\n\n    let doc = getDocument();\n    if (_isRTL === undefined && doc) {\n      _isRTL = ((doc.body && doc.body.getAttribute('dir')) || doc.documentElement.getAttribute('dir')) === 'rtl';\n      mergeStylesSetRTL(_isRTL);\n    }\n  }\n\n  return !!_isRTL;\n}\n\n/**\n * Sets the rtl state of the page (by adjusting the dir attribute of the html element.)\n */\nexport function setRTL(isRTL: boolean, persistSetting: boolean = false): void {\n  let doc = getDocument();\n  if (doc) {\n    doc.documentElement.setAttribute('dir', isRTL ? 'rtl' : 'ltr');\n  }\n\n  if (persistSetting) {\n    setItem(RTL_LOCAL_STORAGE_KEY, isRTL ? '1' : '0');\n  }\n\n  _isRTL = isRTL;\n  mergeStylesSetRTL(_isRTL);\n}\n\n/**\n * Returns the given key, but flips right/left arrows if necessary.\n */\nexport function getRTLSafeKeyCode(key: number, theme: { rtl?: boolean } = {}): number {\n  if (getRTL(theme)) {\n    if (key === KeyCodes.left) {\n      key = KeyCodes.right;\n    } else if (key === KeyCodes.right) {\n      key = KeyCodes.left;\n    }\n  }\n\n  return key;\n}\n"]}
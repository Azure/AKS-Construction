{"version":3,"file":"overflow.js","sourceRoot":"../src/","sources":["overflow.ts"],"names":[],"mappings":";;;;IAAA;;;;;;OAMG;IACH,SAAgB,qBAAqB,CAAC,OAAoB;QACxD,OAAO,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;IACnD,CAAC;IAFD,sDAEC;IAED;;;;;;OAMG;IACH,SAAgB,mBAAmB,CAAC,OAAoB;QACtD,OAAO,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;IACrD,CAAC;IAFD,kDAEC;IAED;;;;;;OAMG;IACH,SAAgB,WAAW,CAAC,OAAoB;QAC9C,OAAO,qBAAqB,CAAC,OAAO,CAAC,IAAI,mBAAmB,CAAC,OAAO,CAAC,CAAC;IACxE,CAAC;IAFD,kCAEC","sourcesContent":["/**\n * Detects whether an element's content has horizontal overflow\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasHorizontalOverflow(element: HTMLElement): boolean {\n  return element.clientWidth < element.scrollWidth;\n}\n\n/**\n * Detects whether an element's content has vertical overflow\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasVerticalOverflow(element: HTMLElement): boolean {\n  return element.clientHeight < element.scrollHeight;\n}\n\n/**\n * Detects whether an element's content has overflow in any direction\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasOverflow(element: HTMLElement): boolean {\n  return hasHorizontalOverflow(element) || hasVerticalOverflow(element);\n}\n"]}
{"version":3,"file":"customizable.js","sourceRoot":"../src/","sources":["customizations/customizable.tsx"],"names":[],"mappings":";;;;IAOA,SAAgB,YAAY,CAC1B,KAAa,EACb,MAAgB,EAChB,YAAsB;QAGtB,8DAA8D;QAC9D,OAAO,SAAS,mBAAmB,CAAI,iBAAyC;;YAC9E,IAAM,WAAW;oBAA4C,sDAAsB;oBAMjF,oCAAY,KAAQ;wBAApB,YACE,kBAAM,KAAK,CAAC,SAGb;wBAPD,8DAA8D;wBACtD,iBAAW,GAAqD,EAAE,CAAC;wBAKzE,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;oBAC7D,CAAC;oBAEM,sDAAiB,GAAxB;wBACE,+BAAc,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;oBACjD,CAAC;oBAEM,yDAAoB,GAA3B;wBACE,+BAAc,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;oBACnD,CAAC;oBAEM,2CAAM,GAAb;wBAAA,iBAiCC;wBAhCC,OAAO,CACL,oBAAC,qCAAiB,CAAC,QAAQ,QACxB,UAAC,OAA2B;4BAC3B,IAAM,YAAY,GAAG,+BAAc,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,cAAc,CAAC,CAAC;4BAEvF,8DAA8D;4BAC9D,IAAM,cAAc,GAAG,KAAI,CAAC,KAAY,CAAC;4BAEzC,mFAAmF;4BACnF,IAAI,YAAY,CAAC,MAAM,IAAI,OAAO,YAAY,CAAC,MAAM,KAAK,UAAU,EAAE;gCACpE,YAAY,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,uCAAM,YAAY,GAAK,cAAc,EAAG,CAAC;6BACnF;4BAED,mFAAmF;4BACnF,IAAI,YAAY,IAAI,YAAY,CAAC,MAAM,EAAE;gCACvC,IACE,KAAI,CAAC,WAAW,CAAC,OAAO,KAAK,YAAY,CAAC,MAAM;oCAChD,KAAI,CAAC,WAAW,CAAC,SAAS,KAAK,cAAc,CAAC,MAAM,EACpD;oCACA,IAAM,YAAY,GAAG,8BAAe,CAAC,YAAY,CAAC,MAAM,EAAE,cAAc,CAAC,MAAM,CAAC,CAAC;oCACjF,KAAI,CAAC,WAAW,CAAC,OAAO,GAAG,YAAY,CAAC,MAAM,CAAC;oCAC/C,KAAI,CAAC,WAAW,CAAC,SAAS,GAAG,cAAc,CAAC,MAAM,CAAC;oCACnD,KAAI,CAAC,WAAW,CAAC,MAAM,GAAG,YAAY,CAAC;iCACxC;gCAED,OAAO,oBAAC,iBAAiB,uBAAK,YAAY,EAAM,cAAc,IAAE,MAAM,EAAE,KAAI,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC;6BACrG;4BAED,OAAO,oBAAC,iBAAiB,uBAAK,YAAY,EAAM,cAAc,EAAI,CAAC;wBACrE,CAAC,CAC0B,CAC9B,CAAC;oBACJ,CAAC;oBAEO,sDAAiB,GAAzB;wBACE,IAAI,CAAC,WAAW,EAAE,CAAC;oBACrB,CAAC;oBACH,iCAAC;gBAAD,CAAC,AA1DmB,CAAyC,KAAK,CAAC,SAAS;gBAC5D,cAAW,GAAW,YAAY,GAAG,KAAM;mBAyD1D,CAAC;YAEF,OAAO,2BAAY,CAAC,iBAAiB,EAAE,WAAW,CAAC,CAAC;QACtD,CAAC,CAAC;IACJ,CAAC;IAtED,oCAsEC","sourcesContent":["import * as React from 'react';\nimport { Customizations } from './Customizations';\nimport { hoistStatics } from '../hoistStatics';\nimport { CustomizerContext } from './CustomizerContext';\nimport { concatStyleSets } from '@fluentui/merge-styles';\nimport type { ICustomizerContext } from './CustomizerContext';\n\nexport function customizable(\n  scope: string,\n  fields: string[],\n  concatStyles?: boolean,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): <P>(ComposedComponent: React.ComponentType<P>) => any {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function customizableFactory<P>(ComposedComponent: React.ComponentType<P>): any {\n    const resultClass = class ComponentWithInjectedProps extends React.Component<P, {}> {\n      public static displayName: string = 'Customized' + scope;\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      private _styleCache: { default?: any; component?: any; merged?: any } = {};\n\n      constructor(props: P) {\n        super(props);\n\n        this._onSettingChanged = this._onSettingChanged.bind(this);\n      }\n\n      public componentDidMount(): void {\n        Customizations.observe(this._onSettingChanged);\n      }\n\n      public componentWillUnmount(): void {\n        Customizations.unobserve(this._onSettingChanged);\n      }\n\n      public render(): JSX.Element {\n        return (\n          <CustomizerContext.Consumer>\n            {(context: ICustomizerContext) => {\n              const defaultProps = Customizations.getSettings(fields, scope, context.customizations);\n\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const componentProps = this.props as any;\n\n              // If defaultProps.styles is a function, evaluate it before calling concatStyleSets\n              if (defaultProps.styles && typeof defaultProps.styles === 'function') {\n                defaultProps.styles = defaultProps.styles({ ...defaultProps, ...componentProps });\n              }\n\n              // If concatStyles is true and custom styles have been defined compute those styles\n              if (concatStyles && defaultProps.styles) {\n                if (\n                  this._styleCache.default !== defaultProps.styles ||\n                  this._styleCache.component !== componentProps.styles\n                ) {\n                  const mergedStyles = concatStyleSets(defaultProps.styles, componentProps.styles);\n                  this._styleCache.default = defaultProps.styles;\n                  this._styleCache.component = componentProps.styles;\n                  this._styleCache.merged = mergedStyles;\n                }\n\n                return <ComposedComponent {...defaultProps} {...componentProps} styles={this._styleCache.merged} />;\n              }\n\n              return <ComposedComponent {...defaultProps} {...componentProps} />;\n            }}\n          </CustomizerContext.Consumer>\n        );\n      }\n\n      private _onSettingChanged(): void {\n        this.forceUpdate();\n      }\n    };\n\n    return hoistStatics(ComposedComponent, resultClass);\n  };\n}\n"]}
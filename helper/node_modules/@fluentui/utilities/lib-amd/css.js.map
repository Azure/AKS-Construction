{"version":3,"file":"css.js","sourceRoot":"../src/","sources":["css.ts"],"names":[],"mappings":";;;;IAyBA;;;;OAIG;IACH,SAAgB,GAAG;QAAC,cAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,yBAAoB;;QACtC,IAAI,OAAO,GAAG,EAAE,CAAC;QAEjB,KAAgB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;YAAjB,IAAI,GAAG,aAAA;YACV,IAAI,GAAG,EAAE;gBACP,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;oBAC3B,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACnB;qBAAM,IAAI,GAAG,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,OAAO,GAAG,CAAC,QAAQ,KAAK,UAAU,EAAE;oBAC/E,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;iBAC9B;qBAAM;oBACL,8DAA8D;oBAC9D,KAAK,IAAI,GAAG,IAAI,GAAU,EAAE;wBAC1B,8DAA8D;wBAC9D,IAAK,GAAW,CAAC,GAAG,CAAC,EAAE;4BACrB,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;yBACnB;qBACF;iBACF;aACF;SACF;QAED,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;IAtBD,kBAsBC","sourcesContent":["/**\n * Dictionary of booleans.\n *\n * @internal\n */\nexport interface IDictionary {\n  [className: string]: boolean;\n}\n\n/**\n * Serializable object.\n *\n * @internal\n */\nexport interface ISerializableObject {\n  toString?: () => string;\n}\n\n/**\n * css input type.\n *\n * @internal\n */\nexport type ICssInput = string | ISerializableObject | IDictionary | null | undefined | boolean;\n\n/**\n * Concatination helper, which can merge class names together. Skips over falsey values.\n *\n * @public\n */\nexport function css(...args: ICssInput[]): string {\n  let classes = [];\n\n  for (let arg of args) {\n    if (arg) {\n      if (typeof arg === 'string') {\n        classes.push(arg);\n      } else if (arg.hasOwnProperty('toString') && typeof arg.toString === 'function') {\n        classes.push(arg.toString());\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        for (let key in arg as any) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          if ((arg as any)[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n  }\n\n  return classes.join(' ');\n}\n"]}
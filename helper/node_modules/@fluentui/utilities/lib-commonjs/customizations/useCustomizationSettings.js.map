{"version":3,"file":"useCustomizationSettings.js","sourceRoot":"../src/","sources":["customizations/useCustomizationSettings.ts"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,mDAAkD;AAClD,yDAAwD;AAGxD;;;GAGG;AACH,SAAgB,wBAAwB,CAAC,UAAoB,EAAE,SAAkB;IAC/E,IAAM,WAAW,GAAG,cAAc,EAAE,CAAC;IAC7B,IAAA,cAAc,GAAK,KAAK,CAAC,UAAU,CAAC,qCAAiB,CAAC,eAAxC,CAAyC;IACvD,IAAA,mBAAmB,GAAK,cAAc,oBAAnB,CAAoB;IAC/C,KAAK,CAAC,SAAS,CAAC;QACd,IAAI,CAAC,mBAAmB,EAAE;YACxB,+BAAc,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;SACrC;QACD,OAAO;YACL,IAAI,CAAC,mBAAmB,EAAE;gBACxB,+BAAc,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;aACvC;QACH,CAAC,CAAC;QACF,8EAA8E;IAChF,CAAC,EAAE,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAE1B,OAAO,+BAAc,CAAC,WAAW,CAAC,UAAU,EAAE,SAAS,EAAE,cAAc,CAAC,CAAC;AAC3E,CAAC;AAjBD,4DAiBC;AAED,SAAS,cAAc;IACf,IAAA,KAAe,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAA7B,QAAQ,QAAqB,CAAC;IACvC,OAAO,cAAM,OAAA,QAAQ,CAAC,UAAA,KAAK,IAAI,OAAA,EAAE,KAAK,EAAP,CAAO,CAAC,EAA1B,CAA0B,CAAC;AAC1C,CAAC","sourcesContent":["import * as React from 'react';\nimport { Customizations } from './Customizations';\nimport { CustomizerContext } from './CustomizerContext';\nimport type { ISettings } from './Customizations';\n\n/**\n * Hook to get Customizations settings from Customizations singleton or CustomizerContext.\n * It will trigger component state update on settings change observed.\n */\nexport function useCustomizationSettings(properties: string[], scopeName?: string): ISettings {\n  const forceUpdate = useForceUpdate();\n  const { customizations } = React.useContext(CustomizerContext);\n  const { inCustomizerContext } = customizations;\n  React.useEffect(() => {\n    if (!inCustomizerContext) {\n      Customizations.observe(forceUpdate);\n    }\n    return () => {\n      if (!inCustomizerContext) {\n        Customizations.unobserve(forceUpdate);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- exclude forceUpdate\n  }, [inCustomizerContext]);\n\n  return Customizations.getSettings(properties, scopeName, customizations);\n}\n\nfunction useForceUpdate() {\n  const [, setValue] = React.useState(0);\n  return () => setValue(value => ++value);\n}\n"]}
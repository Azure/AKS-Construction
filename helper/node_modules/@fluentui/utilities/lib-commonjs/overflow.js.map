{"version":3,"file":"overflow.js","sourceRoot":"../src/","sources":["overflow.ts"],"names":[],"mappings":";;;AAAA;;;;;;GAMG;AACH,SAAgB,qBAAqB,CAAC,OAAoB;IACxD,OAAO,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;AACnD,CAAC;AAFD,sDAEC;AAED;;;;;;GAMG;AACH,SAAgB,mBAAmB,CAAC,OAAoB;IACtD,OAAO,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;AACrD,CAAC;AAFD,kDAEC;AAED;;;;;;GAMG;AACH,SAAgB,WAAW,CAAC,OAAoB;IAC9C,OAAO,qBAAqB,CAAC,OAAO,CAAC,IAAI,mBAAmB,CAAC,OAAO,CAAC,CAAC;AACxE,CAAC;AAFD,kCAEC","sourcesContent":["/**\n * Detects whether an element's content has horizontal overflow\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasHorizontalOverflow(element: HTMLElement): boolean {\n  return element.clientWidth < element.scrollWidth;\n}\n\n/**\n * Detects whether an element's content has vertical overflow\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasVerticalOverflow(element: HTMLElement): boolean {\n  return element.clientHeight < element.scrollHeight;\n}\n\n/**\n * Detects whether an element's content has overflow in any direction\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasOverflow(element: HTMLElement): boolean {\n  return hasHorizontalOverflow(element) || hasVerticalOverflow(element);\n}\n"]}
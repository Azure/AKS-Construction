{"version":3,"file":"getFirstVisibleElementFromSelector.js","sourceRoot":"../src/","sources":["dom/getFirstVisibleElementFromSelector.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,4BAA4B,EAAE,MAAM,UAAU,CAAC;AACxD,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAE5C;;;;;;GAMG;AACH,MAAM,UAAU,kCAAkC,CAAC,QAAgB;IACjE,IAAM,QAAQ,GAAG,WAAW,EAAG,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IAE3D,sGAAsG;IACtG,OAAO,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,OAAoB,IAAK,OAAA,4BAA4B,CAAC,OAAO,CAAC,EAArC,CAAqC,CAAC,CAAC;AACpG,CAAC","sourcesContent":["import { isElementVisibleAndNotHidden } from '../focus';\nimport { getDocument } from './getDocument';\n\n/**\n * Gets the first visible element that matches the given selector\n * @param selector - The selector to use to find potential visible elements\n * @returns The first visible element that matches the selector, otherwise undefined\n *\n * @public\n */\nexport function getFirstVisibleElementFromSelector(selector: string): Element | undefined {\n  const elements = getDocument()!.querySelectorAll(selector);\n\n  // Iterate across the elements that match the selector and return the first visible/non-hidden element\n  return Array.from(elements).find((element: HTMLElement) => isElementVisibleAndNotHidden(element));\n}\n"]}
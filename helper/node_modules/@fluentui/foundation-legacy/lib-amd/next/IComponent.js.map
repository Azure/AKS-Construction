{"version":3,"file":"IComponent.js","sourceRoot":"../src/","sources":["next/IComponent.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport { IStyleSet } from '@fluentui/style-utilities';\nimport { IComponentOptions as IOldComponentOptions } from '../IComponent';\nimport { ISlots, ISlotDefinition, ISlottableProps } from '../ISlots';\n\n/**\n * Defines the contract for view components.\n */\nexport type IViewComponent<TViewProps, TComponentSlots = {}> = (\n  props: React.PropsWithChildren<TViewProps>,\n  slots: ISlots<Required<TComponentSlots>>,\n) => ReturnType<React.FunctionComponent>;\n\n/**\n * Defines the contract for slot components.\n */\nexport type ISlotComponent<TComponentProps extends ISlottableProps<TComponentSlots>, TComponentSlots> =\n  | ISlotDefinition<Required<TComponentSlots>>\n  | ((props: TComponentProps) => ISlotDefinition<Required<TComponentSlots>>);\n\n/**\n * Defines the contract for partial slot components used in recomposition.\n */\nexport type IPartialSlotComponent<TComponentProps extends ISlottableProps<TComponentSlots>, TComponentSlots> =\n  | ISlotDefinition<TComponentSlots>\n  | ((props: TComponentProps) => ISlotDefinition<TComponentSlots>);\n\n/**\n * Component options used by foundation to tie elements together.\n *\n * * TComponentProps: A styleable props interface for the created component.\n * * TTokens: The type for tokens props.\n * * TStyleSet: The type for styles properties.\n * * TViewProps: The props specific to the view, including processed properties outputted by optional state component.\n * If state component is not provided, TComponentProps is the same as TViewProps.\n * * TComponentSlots: The slottable components used to build the HOC.\n * * TStatics: Static type for statics applied to created component object.\n */\nexport interface IComponentOptions<\n  TComponentProps extends ISlottableProps<TComponentSlots>,\n  TTokens,\n  TStyleSet extends IStyleSet<TStyleSet>,\n  TViewProps = TComponentProps,\n  TComponentSlots = {},\n  TStatics = {}\n> extends IOldComponentOptions<TComponentProps, TTokens, TStyleSet, TViewProps, TStatics> {\n  /**\n   * Slot definition object defining the slot component for each slot.\n   */\n  slots?: ISlotComponent<TComponentProps, TComponentSlots>;\n  /**\n   * Stateless pure function that receives props to render the output of the component.\n   */\n  view?: IViewComponent<TViewProps, TComponentSlots>;\n}\n\nexport interface IRecompositionComponentOptions<\n  TComponentProps extends ISlottableProps<TComponentSlots>,\n  TTokens,\n  TStyleSet extends IStyleSet<TStyleSet>,\n  TViewProps = TComponentProps,\n  TComponentSlots = {},\n  TStatics = {}\n> extends IOldComponentOptions<TComponentProps, TTokens, TStyleSet, TViewProps, TStatics> {\n  /**\n   * Slot definition object defining the slot component for each slot.\n   */\n  slots?: IPartialSlotComponent<TComponentProps, TComponentSlots>;\n  /**\n   * Stateless pure function that receives props to render the output of the component.\n   */\n  view?: IViewComponent<TViewProps, TComponentSlots>;\n}\n\n/**\n * Component helper that defines options as required for ease of use by component consumers.\n */\nexport type IComponent<\n  TComponentProps extends ISlottableProps<TComponentSlots>,\n  TTokens,\n  TStyleSet extends IStyleSet<TStyleSet>,\n  TViewProps = TComponentProps,\n  TComponentSlots = {},\n  TStatics = {}\n> = Required<IComponentOptions<TComponentProps, TTokens, TStyleSet, TViewProps, TComponentSlots, TStatics>>;\n"]}
{"version":3,"sources":["PortalCompatContext.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,KAAA,gBAAA,OAAA,CAAA,OAAA,CAAA;;AAGA,IAAM,mBAAmB,gBAAG,KAAK,CAAC,aAAN,CAC1B,SAD0B,CAA5B;;AAIA,IAAM,+BAA+B,GAAG,YAAA;EAAM,OAAA,YAAA;IAAM,OAAA,SAAA;EAAN,CAAA;AAAe,CAA7D;;AAEa,OAAA,CAAA,2BAAA,GAA8B,mBAAmB,CAAC,QAAlD;;AAEb,SAAgB,eAAhB,GAA+B;;;EAC7B,OAAO,CAAA,EAAA,GAAA,KAAK,CAAC,UAAN,CAAiB,mBAAjB,CAAA,MAAqC,IAArC,IAAqC,EAAA,KAAA,KAAA,CAArC,GAAqC,EAArC,GAAyC,+BAAhD;AACD;;AAFD,OAAA,CAAA,eAAA,GAAA,eAAA","sourcesContent":["import * as React from 'react';\nimport type { RegisterPortalFn } from './types';\n\nconst PortalCompatContext = React.createContext<RegisterPortalFn | undefined>(\n  undefined,\n) as React.Context<RegisterPortalFn>;\n\nconst portalCompatContextDefaultValue = () => () => undefined;\n\nexport const PortalCompatContextProvider = PortalCompatContext.Provider;\n\nexport function usePortalCompat() {\n  return React.useContext(PortalCompatContext) ?? portalCompatContextDefaultValue;\n}\n"],"sourceRoot":"../src/"}
{"version":3,"file":"elementContains.js","sourceRoot":"../src/","sources":["elementContains.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACxC;;;;;;GAMG;AACH,MAAM,UAAU,eAAe,CAC7B,MAA0B,EAC1B,KAAyB,EACzB,mBAAmC;IAAnC,oCAAA,EAAA,0BAAmC;IAEnC,IAAI,WAAW,GAAG,KAAK,CAAC;IAExB,IAAI,MAAM,IAAI,KAAK,EAAE;QACnB,IAAI,mBAAmB,EAAE;YACvB,IAAI,MAAM,KAAK,KAAK,EAAE;gBACpB,WAAW,GAAG,IAAI,CAAC;aACpB;iBAAM;gBACL,WAAW,GAAG,KAAK,CAAC;gBAEpB,OAAO,KAAK,EAAE;oBACZ,IAAM,UAAU,GAAuB,SAAS,CAAC,KAAK,CAAC,CAAC;oBAExD,IAAI,UAAU,KAAK,MAAM,EAAE;wBACzB,WAAW,GAAG,IAAI,CAAC;wBACnB,MAAM;qBACP;oBAED,KAAK,GAAG,UAAU,CAAC;iBACpB;aACF;SACF;aAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;YAC1B,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACtC;KACF;IAED,OAAO,WAAW,CAAC;AACrB,CAAC","sourcesContent":["import { getParent } from './getParent';\n/**\n * Determines whether or not a parent element contains a given child element.\n * If `allowVirtualParents` is true, this method may return `true` if the child\n * has the parent in its virtual element hierarchy.\n *\n * @public\n */\nexport function elementContains(\n  parent: HTMLElement | null,\n  child: HTMLElement | null,\n  allowVirtualParents: boolean = true,\n): boolean {\n  let isContained = false;\n\n  if (parent && child) {\n    if (allowVirtualParents) {\n      if (parent === child) {\n        isContained = true;\n      } else {\n        isContained = false;\n\n        while (child) {\n          const nextParent: HTMLElement | null = getParent(child);\n\n          if (nextParent === parent) {\n            isContained = true;\n            break;\n          }\n\n          child = nextParent;\n        }\n      }\n    } else if (parent.contains) {\n      isContained = parent.contains(child);\n    }\n  }\n\n  return isContained;\n}\n"]}
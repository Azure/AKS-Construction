{"version":3,"file":"useMountSync.js","sourceRoot":"../src/","sources":["useMountSync.ts"],"names":[],"mappings":";;;;IAEA;;;;;;;;;;OAUG;IACI,IAAM,YAAY,GAAG,UAAC,QAAoB;QAC/C,IAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACxC,QAAQ,CAAC,OAAO,GAAG,QAAQ,CAAC;QAC5B,oDAAoD;QACpD,KAAK,CAAC,eAAe,CAAC;;YACpB,MAAA,QAAQ,CAAC,OAAO,+CAAhB,QAAQ,CAAY,CAAC;QACvB,CAAC,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC;IAPW,QAAA,YAAY,gBAOvB","sourcesContent":["import * as React from 'react';\n\n/**\n * Hook which synchronously executes a callback once the component has been mounted.\n *\n * `WARNING` This should only be used if you need to perform an action after the component has been mounted and\n * before the browser paints. useMountSync will trigger debug warnings in server-rendered scenarios and should be used\n * sparingly.\n *\n * @deprecated Consider to use React.useEffect() or React.useLayoutEffect() directly based on a use case\n *\n * @param callback - Function to call once the component has been mounted.\n */\nexport const useMountSync = (callback: () => void) => {\n  const mountRef = React.useRef(callback);\n  mountRef.current = callback;\n  // eslint-disable-next-line no-restricted-properties\n  React.useLayoutEffect(() => {\n    mountRef.current?.();\n  }, []);\n};\n"]}
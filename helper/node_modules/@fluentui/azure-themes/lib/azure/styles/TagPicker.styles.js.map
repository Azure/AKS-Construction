{"version":3,"file":"TagPicker.styles.js","sourceRoot":"../src/","sources":["azure/styles/TagPicker.styles.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,cAAc,MAAM,cAAc,CAAC;AAG/C,MAAM,CAAC,IAAM,eAAe,GAAG,UAAC,KAA4B;IAClD,IAAA,KAAK,GAAK,KAAK,MAAV,CAAW;IACxB,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,EAAE,CAAC;KACX;IACO,IAAA,cAAc,GAAK,KAAK,eAAV,CAAW;IACjC,IAAM,sBAAsB,GAAG,cAAyC,CAAC;IACzE,OAAO;QACL,IAAI,EAAE;YACJ,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ;YACrC,MAAM,EAAK,cAAc,CAAC,WAAW,eAAU,cAAc,CAAC,WAAa;YAC3E,eAAe,EAAE,cAAc,CAAC,WAAW;YAC3C,SAAS,EAAE;gBACT,YAAY,EAAE;oBACZ,eAAe,EAAE,cAAc,CAAC,wBAAwB;oBACxD,KAAK,EAAE,cAAc,CAAC,kBAAkB;iBACzC;aACF;SACF;QACD,KAAK,EAAE;YACL,KAAK,EAAE,sBAAsB,CAAC,SAAS;YACvC,eAAe,EAAE,cAAc,CAAC,WAAW;YAC3C,MAAM,EAAE,MAAM;SACf;QACD,YAAY,EAAE;YACZ,KAAK,EAAE,cAAc,CAAC,QAAQ;YAC9B,MAAM,EAAE,MAAM;YACd,eAAe,EAAE,cAAc,CAAC,WAAW;SAC5C;QACD,IAAI,EAAE;YACJ,MAAM,EAAK,cAAc,CAAC,WAAW,eAAU,sBAAsB,CAAC,cAAgB;SACvF;KACF,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { IBasePickerStyles, IBasePickerStyleProps } from '@fluentui/react/lib/Pickers';\nimport * as StyleConstants from '../Constants';\nimport { IExtendedSemanticColors } from '../IExtendedSemanticColors';\n\nexport const TagPickerStyles = (props: IBasePickerStyleProps): Partial<IBasePickerStyles> => {\n  const { theme } = props;\n  if (!theme) {\n    return {};\n  }\n  const { semanticColors } = theme;\n  const extendedSemanticColors = semanticColors as IExtendedSemanticColors;\n  return {\n    root: {\n      fontSize: theme.fonts.medium.fontSize,\n      border: `${StyleConstants.borderWidth} solid ${StyleConstants.transparent}`,\n      backgroundColor: StyleConstants.transparent,\n      selectors: {\n        '[disabled]': {\n          backgroundColor: semanticColors.buttonBackgroundDisabled,\n          color: semanticColors.buttonTextDisabled,\n        },\n      },\n    },\n    input: {\n      color: extendedSemanticColors.inputText,\n      backgroundColor: StyleConstants.transparent,\n      border: 'none',\n    },\n    itemsWrapper: {\n      color: semanticColors.bodyText,\n      border: 'none',\n      backgroundColor: StyleConstants.transparent,\n    },\n    text: {\n      border: `${StyleConstants.borderWidth} solid ${extendedSemanticColors.controlOutline}`,\n    },\n  };\n};\n"]}
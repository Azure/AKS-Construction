import { BaseColors } from '../AzureColors';
import * as StyleConstants from '../Constants';
export var CheckboxStyles = function (props) {
    var _a;
    var disabled = props.disabled, checked = props.checked, theme = props.theme, indeterminate = props.indeterminate;
    var semanticColors = theme.semanticColors;
    var extendedSemanticColors = semanticColors;
    return {
        text: [
            {
                fontSize: theme.fonts.medium.fontSize,
                color: semanticColors.bodyText,
                lineHeight: StyleConstants.inputHeight,
            },
            disabled && {
                color: semanticColors.disabledBodyText,
            },
        ],
        checkbox: [
            {
                backgroundColor: semanticColors.bodyBackground,
                borderColor: extendedSemanticColors.checkBoxBorder,
                selectors: {
                    '::after': {
                        backgroundColor: BaseColors.BLUE_0078D4,
                    },
                },
                width: StyleConstants.inputHeight,
                height: StyleConstants.inputHeight,
            },
            indeterminate && {
                selectors: {
                    '::after': {
                        top: 3,
                        left: 3,
                    },
                },
            },
            checked && {
                backgroundColor: BaseColors.WHITE,
                borderColor: extendedSemanticColors.checkboxBorderChecked,
            },
            disabled && {
                borderColor: extendedSemanticColors.checkBoxDisabled,
            },
            disabled &&
                indeterminate && {
                selectors: {
                    '::after': {
                        backgroundColor: extendedSemanticColors.checkBoxDisabled,
                    },
                },
            },
            disabled &&
                checked && {
                borderColor: extendedSemanticColors.checkBoxDisabled,
                backgroundColor: extendedSemanticColors.checkBoxCheckedDisabledBackground,
            },
        ],
        checkmark: [
            {
                color: extendedSemanticColors.checkBoxCheck,
                selectors: {
                    '&:hover': {},
                },
            },
            disabled && {
                color: extendedSemanticColors.checkBoxCheck,
            },
        ],
        root: [
            !disabled && [
                !checked && {
                    selectors: {
                        ':hover .ms-Checkbox-label .ms-Checkbox-checkbox': {
                            borderColor: extendedSemanticColors.buttonText,
                        },
                        ':hover .ms-Checkbox-label .ms-Checkbox-checkmark': {
                            color: extendedSemanticColors.checkBoxCheckHover,
                            opacity: '1',
                        },
                        ':hover .ms-Checkbox-text': {
                            color: extendedSemanticColors.checkBoxCheckHoverTest,
                        },
                    },
                },
                checked && {
                    selectors: {
                        '.ms-Checkbox-label .ms-Checkbox-checkbox': {
                            background: extendedSemanticColors.checkboxBackgroundChecked,
                            borderColor: extendedSemanticColors.checkboxBorderChecked,
                        },
                        ':hover .ms-Checkbox-label .ms-Checkbox-checkbox': {
                            borderColor: extendedSemanticColors.checkboxBorderCheckedHovered,
                            backgroundColor: extendedSemanticColors.checkboxBackgroundHovered,
                        },
                        ':hover .ms-Checkbox-text': {
                            color: extendedSemanticColors.checkBoxCheckHoverTest,
                        },
                        ':focus .ms-Checkbox-label .ms-Checkbox-checkbox': {
                            borderColor: extendedSemanticColors.focusBorder,
                        },
                    },
                },
                indeterminate &&
                    checked && {
                    selectors: {
                        '.ms-Checkbox-label .ms-Checkbox-checkbox': {
                            background: extendedSemanticColors.checkBoxIndeterminateBackground,
                            borderColor: extendedSemanticColors.checkBoxBorder,
                        },
                        ':hover .ms-Checkbox-label .ms-Checkbox-checkbox': {
                            borderColor: extendedSemanticColors.buttonText,
                            backgroundColor: 'transparent',
                        },
                    },
                },
            ],
        ],
        input: (_a = {},
            _a[".ms-Fabric--isFocusVisible &:focus + label::before"] = {
                outline: "1px solid " + extendedSemanticColors.checkBoxCheckedFocus,
            },
            _a),
    };
};
//# sourceMappingURL=Checkbox.styles.js.map
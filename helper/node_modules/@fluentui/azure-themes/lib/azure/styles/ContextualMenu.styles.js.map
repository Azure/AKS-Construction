{"version":3,"file":"ContextualMenu.styles.js","sourceRoot":"../src/","sources":["azure/styles/ContextualMenu.styles.ts"],"names":[],"mappings":"AAMA,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AACxC,OAAO,KAAK,cAAc,MAAM,cAAc,CAAC;AAG/C,MAAM,CAAC,IAAM,oBAAoB,GAAG,UAAC,KAAgC;IAC3D,IAAA,KAAK,GAAK,KAAK,MAAV,CAAW;IAChB,IAAA,cAAc,GAAK,KAAK,eAAV,CAAW;IACjC,IAAM,sBAAsB,GAAG,cAAyC,CAAC;IAEzE,OAAO;QACL,kBAAkB,EAAE;YAClB,OAAO,EAAE;gBACP,IAAI,EAAE;oBACJ,eAAe,EAAE,cAAc,CAAC,eAAe;oBAC/C,WAAW,EAAE,cAAc,CAAC,WAAW;oBACvC,WAAW,EAAE,cAAc,CAAC,WAAW;oBACvC,WAAW,EAAE,cAAc,CAAC,WAAW;oBACvC,SAAS,EAAE,MAAM,CAAC,MAAM;oBACxB,SAAS,EAAE;wBACT,kBAAkB,EAAE;4BAClB,eAAe,EAAE,cAAc,CAAC,eAAe;yBAChD;qBACF;iBACF;aACF;YACD,QAAQ,EAAE,UAAC,cAA6C;gBACtD,OAAO;oBACL,IAAI,EAAE;wBACJ;4BACE,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ;4BACrC,SAAS,EAAE;gCACT,SAAS,EAAE;oCACT,eAAe,EAAE,cAAc,CAAC,uBAAuB;oCACvD,KAAK,EAAE,cAAc,CAAC,iBAAiB;oCACvC,SAAS,EAAE;wCACT,yBAAyB,EAAE;4CACzB,KAAK,EAAE,sBAAsB,CAAC,qBAAqB;yCACpD;qCACF;iCACF;gCACD,yBAAyB,EAAE;oCACzB,KAAK,EAAE,sBAAsB,CAAC,cAAc;iCAC7C;6BACF;yBACF;qBACF;oBACD,YAAY,EAAE;wBACZ,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ;qBACtC;oBACD,OAAO,EAAE;wBACP,eAAe,EAAE,cAAc,CAAC,WAAW;qBAC5C;oBACD,SAAS,EAAE;wBACT,KAAK,EAAE,cAAc,CAAC,WAAW;qBAClC;oBACD,IAAI,EAAE;wBACJ,SAAS,EAAE;4BACT,cAAc,EAAE;gCACd,eAAe,EAAE,cAAc,CAAC,yBAAyB;gCACzD,KAAK,EAAE,cAAc,CAAC,SAAS;6BAChC;yBACF;qBACF;iBACF,CAAC;YACJ,CAAC;SACF;KACF,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import {\n  IContextualMenuStyleProps,\n  IContextualMenuStyles,\n  IContextualMenuItemStyleProps,\n  IContextualMenuItemStyles,\n} from '@fluentui/react/lib/ContextualMenu';\nimport { Depths } from '../AzureDepths';\nimport * as StyleConstants from '../Constants';\nimport { IExtendedSemanticColors } from '../IExtendedSemanticColors';\n\nexport const ContextualMenuStyles = (props: IContextualMenuStyleProps): Partial<IContextualMenuStyles> => {\n  const { theme } = props;\n  const { semanticColors } = theme;\n  const extendedSemanticColors = semanticColors as IExtendedSemanticColors;\n\n  return {\n    subComponentStyles: {\n      callout: {\n        root: {\n          backgroundColor: semanticColors.inputBackground,\n          borderColor: semanticColors.inputBorder,\n          borderStyle: StyleConstants.borderSolid,\n          borderWidth: StyleConstants.borderWidth,\n          boxShadow: Depths.depth8,\n          selectors: {\n            '.ms-Callout-beak': {\n              backgroundColor: semanticColors.inputBackground,\n            },\n          },\n        },\n      },\n      menuItem: (itemStyleProps: IContextualMenuItemStyleProps): Partial<IContextualMenuItemStyles> => {\n        return {\n          root: [\n            {\n              fontSize: theme.fonts.medium.fontSize,\n              selectors: {\n                '&:hover': {\n                  backgroundColor: semanticColors.buttonBackgroundHovered,\n                  color: semanticColors.buttonTextHovered,\n                  selectors: {\n                    '.ms-ContextualMenu-icon': {\n                      color: extendedSemanticColors.iconButtonFillHovered,\n                    },\n                  },\n                },\n                '.ms-ContextualMenu-icon': {\n                  color: extendedSemanticColors.iconButtonFill,\n                },\n              },\n            },\n          ],\n          splitPrimary: {\n            fontSize: theme.fonts.medium.fontSize,\n          },\n          divider: {\n            backgroundColor: semanticColors.inputBorder,\n          },\n          iconColor: {\n            color: semanticColors.focusBorder,\n          },\n          item: {\n            selectors: {\n              '.is-expanded': {\n                backgroundColor: semanticColors.menuItemBackgroundHovered,\n                color: semanticColors.inputText,\n              },\n            },\n          },\n        };\n      },\n    },\n  };\n};\n"]}
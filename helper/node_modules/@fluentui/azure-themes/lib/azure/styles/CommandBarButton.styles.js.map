{"version":3,"file":"CommandBarButton.styles.js","sourceRoot":"../src/","sources":["azure/styles/CommandBarButton.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { ITheme } from '@fluentui/react';\nimport { getFocusStyle } from '@fluentui/react/lib/Styling';\nimport { IButtonStyles } from '@fluentui/react/lib/Button';\nimport { IExtendedSemanticColors } from '../IExtendedSemanticColors';\n\nexport const CommandBarButtonStyles = (theme: ITheme): Partial<IButtonStyles> => {\n  const { semanticColors } = theme;\n  const extendedSemanticColors = semanticColors as IExtendedSemanticColors;\n\n  return {\n    icon: {\n      color: extendedSemanticColors.iconButtonFill,\n    },\n    menuIcon: {\n      color: semanticColors.bodyText,\n    },\n    root: {\n      ...getFocusStyle(theme, { inset: 2 }),\n      fontSize: theme.fonts.medium.fontSize,\n      backgroundColor: semanticColors.bodyBackground,\n      color: extendedSemanticColors.commandBarButtonText,\n      paddingLeft: 4,\n      paddingRight: 4,\n    },\n    rootExpanded: {\n      backgroundColor: extendedSemanticColors.commandBarButtonBackgroundHover,\n      color: extendedSemanticColors.commandBarButtonTextHover,\n      selectors: {\n        '.ms-Button-icon': {\n          color: extendedSemanticColors.commandBarButtonIconHover,\n        },\n        '.ms-Button-menuIcon': {\n          color: extendedSemanticColors.commandBarButtonTextHover,\n        },\n      },\n    },\n    rootExpandedHovered: {\n      backgroundColor: extendedSemanticColors.commandBarButtonBackgroundSelectedHover,\n      color: extendedSemanticColors.commandBarButtonTextHover,\n      selectors: {\n        '.ms-Button-icon': {\n          color: extendedSemanticColors.commandBarButtonIconSelected,\n        },\n        '.ms-Button-menuIcon': {\n          color: extendedSemanticColors.commandBarButtonTextHover,\n        },\n      },\n    },\n    rootHovered: {\n      backgroundColor: extendedSemanticColors.commandBarButtonBackgroundHover,\n      color: extendedSemanticColors.commandBarButtonTextHover,\n      selectors: {\n        '.ms-Button-icon': {\n          color: extendedSemanticColors.commandBarButtonIconHover,\n        },\n        '.ms-Button-menuIcon': {\n          color: extendedSemanticColors.commandBarButtonTextHover,\n        },\n      },\n    },\n    rootPressed: {\n      backgroundColor: extendedSemanticColors.commandBarButtonBackgroundSelected,\n      color: extendedSemanticColors.commandBarButtonTextHover,\n      selectors: {\n        '.ms-Button-icon': {\n          color: extendedSemanticColors.commandBarButtonIconSelected,\n        },\n        '.ms-Button-menuIcon': {\n          color: extendedSemanticColors.commandBarButtonTextHover,\n        },\n      },\n    },\n    rootChecked: {\n      backgroundColor: extendedSemanticColors.commandBarButtonBackgroundSelected,\n      color: extendedSemanticColors.commandBarButtonTextHover,\n      selectors: {\n        '.ms-Button-icon': {\n          color: extendedSemanticColors.commandBarButtonIconSelected,\n        },\n        '.ms-Button-menuIcon': {\n          color: extendedSemanticColors.commandBarButtonTextHover,\n        },\n      },\n    },\n    rootDisabled: {\n      backgroundColor: semanticColors.bodyBackground,\n      color: extendedSemanticColors.commandBarButtonTextDisabled,\n      selectors: {\n        '.ms-Button-icon': {\n          color: extendedSemanticColors.commandBarButtonTextDisabled,\n        },\n        '.ms-Button-menuIcon': {\n          color: extendedSemanticColors.commandBarButtonTextDisabled,\n        },\n      },\n    },\n    rootFocused: {\n      backgroundColor: semanticColors.menuItemBackgroundHovered,\n      color: semanticColors.buttonTextHovered,\n      selectors: {\n        '.ms-Button-icon': {\n          color: extendedSemanticColors.iconButtonFillHovered,\n        },\n        '.ms-Button-menuIcon': {\n          color: semanticColors.buttonTextHovered,\n        },\n        '::after': {\n          outlineColor: `${extendedSemanticColors.commandBarButtonAfterColor} !important`,\n        },\n      },\n    },\n    splitButtonMenuButton: {\n      backgroundColor: semanticColors.bodyBackground,\n      selectors: {\n        ':hover': {\n          backgroundColor: semanticColors.menuItemBackgroundHovered,\n        },\n      },\n    },\n    splitButtonMenuButtonChecked: {\n      backgroundColor: semanticColors.bodyBackground,\n      selectors: {\n        ':hover': {\n          backgroundColor: semanticColors.menuItemBackgroundHovered,\n        },\n      },\n    },\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: semanticColors.bodyBackground,\n    },\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: semanticColors.bodyBackground,\n      selectors: {\n        ':hover': {\n          backgroundColor: semanticColors.menuItemBackgroundHovered,\n        },\n      },\n    },\n    splitButtonMenuIcon: {\n      color: semanticColors.bodyText,\n    },\n  };\n};\n"]}
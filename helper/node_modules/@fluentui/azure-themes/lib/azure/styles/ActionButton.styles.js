import { __assign } from "tslib";
import * as StyleConstants from '../Constants';
export var ActionButtonStyles = function (theme) {
    var semanticColors = theme.semanticColors;
    var extendedSemanticColors = semanticColors;
    var iconColor = function (color) {
        return {
            selectors: {
                '.ms-Button-icon': { color: color },
            },
        };
    };
    return {
        root: __assign({ fontSize: theme.fonts.medium.fontSize, backgroundColor: semanticColors.buttonBackground, border: StyleConstants.borderWidth + " solid " + semanticColors.inputBorder, color: semanticColors.buttonText }, iconColor(extendedSemanticColors.iconButtonFill)),
        rootDisabled: __assign({ border: StyleConstants.borderWidth + " solid " + extendedSemanticColors.primaryButtonBorderDisabled + " !important", backgroundColor: semanticColors.primaryButtonBackgroundDisabled, color: semanticColors.primaryButtonTextDisabled }, iconColor(semanticColors.primaryButtonTextDisabled)),
        rootHovered: {
            border: StyleConstants.borderWidth + " solid " + semanticColors.inputBorderHovered,
            backgroundColor: semanticColors.buttonBackgroundHovered,
            color: semanticColors.buttonTextHovered,
            selectors: {
                ':hover': __assign({}, iconColor(extendedSemanticColors.iconButtonFillHovered)),
            },
        },
        rootPressed: {
            border: StyleConstants.borderWidth + " solid " + extendedSemanticColors.inputBorderPressed,
            backgroundColor: semanticColors.buttonBackgroundPressed,
            color: semanticColors.buttonTextPressed,
            selectors: {
                ':active': __assign({}, iconColor(extendedSemanticColors.iconButtonFillHovered)),
            },
        },
        rootChecked: __assign({ border: StyleConstants.borderWidth + " solid " + semanticColors.buttonTextPressed, backgroundColor: semanticColors.buttonBackgroundPressed, color: semanticColors.buttonTextPressed }, iconColor(extendedSemanticColors.iconButtonFillHovered)),
        rootCheckedHovered: {
            border: StyleConstants.borderWidth + " solid " + semanticColors.buttonTextHovered,
            backgroundColor: semanticColors.buttonBackgroundHovered,
            color: semanticColors.buttonTextHovered,
            selectors: {
                ':hover': __assign({}, iconColor(extendedSemanticColors.iconButtonFillHovered)),
            },
        },
        rootCheckedPressed: {
            border: StyleConstants.borderWidth + " solid " + semanticColors.buttonTextPressed,
            backgroundColor: semanticColors.buttonBackgroundPressed,
            color: semanticColors.buttonTextPressed,
            selectors: {
                ':active': __assign({}, iconColor(extendedSemanticColors.iconButtonFillHovered)),
            },
        },
    };
};
//# sourceMappingURL=ActionButton.styles.js.map
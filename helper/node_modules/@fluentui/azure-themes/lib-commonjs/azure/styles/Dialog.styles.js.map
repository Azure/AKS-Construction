{"version":3,"file":"Dialog.styles.js","sourceRoot":"../src/","sources":["azure/styles/Dialog.styles.ts"],"names":[],"mappings":";;;AAOA,0CAAyC;AACzC,8CAA4C;AAErC,IAAM,mBAAmB,GAAG,UAAC,KAA+B;IACzD,IAAA,KAAK,GAAoB,KAAK,MAAzB,EAAE,aAAa,GAAK,KAAK,cAAV,CAAW;IACvC,IAAM,cAAc,GAAG,KAAK,CAAC,cAAyC,CAAC;IAEvE,OAAO;QACL,OAAO,EAAE;YACP,KAAK,EAAE,cAAc,CAAC,QAAQ;YAC9B,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ;SACtC;QACD,KAAK,EAAE;YACL;gBACE,QAAQ,EAAE,qBAAS,CAAC,MAAM;aAC3B;YACD,aAAa,IAAI;gBACf,KAAK,EAAE,cAAc,CAAC,iBAAiB;aACxC;YACD,CAAC,aAAa,IAAI;gBAChB,KAAK,EAAE,cAAc,CAAC,QAAQ;aAC/B;SACF;QACD,SAAS,EAAE;YACT,SAAS,EAAE;gBACT,mBAAmB,EAAE;oBACnB,KAAK,EAAE,cAAc,CAAC,QAAQ;iBAC/B;gBACD,yBAAyB,EAAE;oBACzB,eAAe,EAAE,wBAAU,CAAC,UAAU;oBACtC,KAAK,EAAE,wBAAU,CAAC,KAAK;iBACxB;gBACD,0BAA0B,EAAE;oBAC1B,eAAe,EAAE,wBAAU,CAAC,UAAU;oBACtC,KAAK,EAAE,wBAAU,CAAC,KAAK;iBACxB;aACF;SACF;QACD,YAAY,EAAE;YACZ,KAAK,EAAE,cAAc,CAAC,QAAQ;YAC9B,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ;SACtC;QACD,OAAO,EAAE;YACP,KAAK,EAAE,cAAc,CAAC,QAAQ;YAC9B,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ;SACtC;KACF,CAAC;AACJ,CAAC,CAAC;AA5CW,QAAA,mBAAmB,uBA4C9B;AAEK,IAAM,kBAAkB,GAAG,UAAC,KAA8B;IAC/D,OAAO;QACL,OAAO,EAAE;YACP,MAAM,EAAE,UAAU;SACnB;KACF,CAAC;AACJ,CAAC,CAAC;AANW,QAAA,kBAAkB,sBAM7B","sourcesContent":["import {\n  IDialogContentStyleProps,\n  IDialogContentStyles,\n  IDialogFooterStyleProps,\n  IDialogFooterStyles,\n} from '@fluentui/react/lib/Dialog';\nimport { IExtendedSemanticColors } from '../IExtendedSemanticColors';\nimport { FontSizes } from '../AzureType';\nimport { BaseColors } from '../AzureColors';\n\nexport const DialogContentStyles = (props: IDialogContentStyleProps): Partial<IDialogContentStyles> => {\n  const { theme, isLargeHeader } = props;\n  const semanticColors = theme.semanticColors as IExtendedSemanticColors;\n\n  return {\n    content: {\n      color: semanticColors.bodyText,\n      fontSize: theme.fonts.medium.fontSize,\n    },\n    title: [\n      {\n        fontSize: FontSizes.size18,\n      },\n      isLargeHeader && {\n        color: semanticColors.primaryButtonText,\n      },\n      !isLargeHeader && {\n        color: semanticColors.bodyText,\n      },\n    ],\n    topButton: {\n      selectors: {\n        '.ms-Dialog-button': {\n          color: semanticColors.bodyText,\n        },\n        '.ms-Dialog-button:hover': {\n          backgroundColor: BaseColors.RED_E00B1C, // always this color regardless of theme.\n          color: BaseColors.WHITE,\n        },\n        '.ms-Dialog-button:active': {\n          backgroundColor: BaseColors.RED_E00B1C, // always this color regardless of theme.\n          color: BaseColors.WHITE,\n        },\n      },\n    },\n    innerContent: {\n      color: semanticColors.bodyText,\n      fontSize: theme.fonts.medium.fontSize,\n    },\n    subText: {\n      color: semanticColors.bodyText,\n      fontSize: theme.fonts.medium.fontSize,\n    },\n  };\n};\n\nexport const DialogFooterStyles = (props: IDialogFooterStyleProps): Partial<IDialogFooterStyles> => {\n  return {\n    actions: {\n      margin: '16px 0 0',\n    },\n  };\n};\n"]}
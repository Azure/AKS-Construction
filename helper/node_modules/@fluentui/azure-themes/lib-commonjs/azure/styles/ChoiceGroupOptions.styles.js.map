{"version":3,"file":"ChoiceGroupOptions.styles.js","sourceRoot":"../src/","sources":["azure/styles/ChoiceGroupOptions.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles } from '@fluentui/react/lib/ChoiceGroup';\nimport { IExtendedSemanticColors } from '../IExtendedSemanticColors';\nimport * as StyleConstants from '../Constants';\n\nexport const ChoiceGroupOptionStyles = (props: IChoiceGroupOptionStyleProps): Partial<IChoiceGroupOptionStyles> => {\n  const { checked, disabled, theme, hasIcon, hasImage } = props;\n  const { semanticColors } = theme;\n  const extendedSemanticColors = semanticColors as IExtendedSemanticColors;\n  return {\n    root: {\n      fontSize: theme.fonts.medium.fontSize,\n      color: semanticColors.bodyText,\n      backgroundColor: semanticColors.bodyBackground,\n      selectors: {\n        '.ms-ChoiceField-wrapper': {\n          padding: '4px',\n        },\n        '.ms-ChoiceFieldLabel': {\n          fontSize: theme.fonts.medium.fontSize,\n          verticalAlign: 'middle',\n        },\n        '.is-inFocus': {\n          selectors: {\n            ':after': {\n              border: `1px solid ${extendedSemanticColors.choiceGroupFocusBorder} !important`,\n            },\n          },\n          border: `${extendedSemanticColors.choiceGroupContainerBorder}\n          ${extendedSemanticColors.choiceGroupContainerBorderStyle}\n          ${extendedSemanticColors.checkboxBorderChecked}`,\n        },\n      },\n    },\n    field: [\n      {\n        selectors: {\n          // The circle\n          ':before': [\n            {\n              width: StyleConstants.choiceGroupDimensions,\n              height: StyleConstants.choiceGroupDimensions,\n              borderColor: semanticColors.bodyText,\n            },\n            checked && {\n              backgroundColor: 'transparent',\n              borderColor: extendedSemanticColors.checkboxBorderChecked,\n            },\n            disabled && {\n              backgroundColor: semanticColors.bodyBackground,\n              borderColor: extendedSemanticColors.controlOutlineDisabled,\n            },\n            (hasIcon || hasImage) &&\n              disabled &&\n              checked && {\n                opacity: 1,\n              },\n          ],\n          // The dot\n          ':after': [\n            {\n              borderColor: extendedSemanticColors.checkboxBorderChecked,\n              top: 4,\n              left: 4,\n            },\n            checked &&\n              disabled && {\n                borderColor: extendedSemanticColors.controlOutlineDisabled,\n              },\n          ],\n          ':hover': [\n            (hasIcon || hasImage) && {\n              borderColor: extendedSemanticColors.controlOutlineHovered,\n            },\n            !disabled && {\n              selectors: {\n                '.ms-ChoiceFieldLabel': {\n                  color: extendedSemanticColors.bodyTextHovered,\n                },\n                ':before': {\n                  borderColor: extendedSemanticColors.controlOutlineHovered,\n                },\n                ':after': {\n                  borderColor: extendedSemanticColors.checkboxBorderChecked,\n                  backgroundColor: extendedSemanticColors.choiceGroupUncheckedDotHover,\n                  top: 4,\n                  left: 4,\n                },\n              },\n            },\n            !disabled &&\n              checked && {\n                selectors: {\n                  ':before': {\n                    borderColor: extendedSemanticColors.checkboxBorderCheckedHovered,\n                  },\n                  ':after': {\n                    borderColor: extendedSemanticColors.checkboxBorderCheckedHovered,\n                    backgroundColor: extendedSemanticColors.choiceGroupUncheckedDotHover,\n                  },\n                },\n              },\n          ],\n          '.ms-ChoiceFieldLabel': {\n            color: disabled ? semanticColors.disabledBodyText : semanticColors.bodyText,\n          },\n        },\n      },\n      (hasIcon || hasImage) &&\n        !disabled && {\n          selectors: {\n            i: {\n              // discrepency: does icon highlight change color when selected?\n              color: checked ? extendedSemanticColors.controlAccent : semanticColors.bodyText,\n            },\n          },\n        },\n      (hasIcon || hasImage) && {\n        borderWidth: StyleConstants.borderWidth,\n        borderColor: checked ? extendedSemanticColors.controlOutline : semanticColors.bodyBackground,\n      },\n      checked &&\n        disabled && {\n          borderColor: semanticColors.disabledBodyText,\n        },\n    ],\n  };\n};\n"]}
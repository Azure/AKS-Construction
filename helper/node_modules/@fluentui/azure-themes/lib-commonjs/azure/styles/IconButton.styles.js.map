{"version":3,"file":"IconButton.styles.js","sourceRoot":"../src/","sources":["azure/styles/IconButton.styles.ts"],"names":[],"mappings":";;;AAEA,6CAA+C;AAGxC,IAAM,gBAAgB,GAAG,UAAC,KAAa;IACpC,IAAA,cAAc,GAAK,KAAK,eAAV,CAAW;IACjC,IAAM,sBAAsB,GAAG,cAAyC,CAAC;IAEzE,OAAO;QACL,IAAI,EAAE;YACJ,eAAe,EAAE,cAAc,CAAC,WAAW;YAC3C,KAAK,EAAE,sBAAsB,CAAC,cAAc;YAC5C,SAAS,EAAE;gBACT,kBAAkB;gBAClB,eAAe,EAAE;oBACf,eAAe,EAAE,sBAAsB,CAAC,uBAAuB;oBAC/D,KAAK,EAAE,sBAAsB,CAAC,qBAAqB;iBACpD;aACF;SACF;QACD,YAAY,EAAE;YACZ,eAAe,EAAE,cAAc,CAAC,WAAW;YAC3C,KAAK,EAAE,cAAc,CAAC,kBAAkB;SACzC;QACD,WAAW,EAAE;YACX,eAAe,EAAE,sBAAsB,CAAC,uBAAuB;YAC/D,KAAK,EAAE,sBAAsB,CAAC,qBAAqB;SACpD;QACD,WAAW,EAAE;YACX,eAAe,EAAE,sBAAsB,CAAC,uBAAuB;YAC/D,KAAK,EAAE,sBAAsB,CAAC,qBAAqB;SACpD;QACD,WAAW,EAAE;YACX,eAAe,EAAE,sBAAsB,CAAC,uBAAuB;YAC/D,KAAK,EAAE,sBAAsB,CAAC,qBAAqB;SACpD;QACD,kBAAkB,EAAE;YAClB,eAAe,EAAE,sBAAsB,CAAC,uBAAuB;YAC/D,KAAK,EAAE,sBAAsB,CAAC,qBAAqB;SACpD;KACF,CAAC;AACJ,CAAC,CAAC;AArCW,QAAA,gBAAgB,oBAqC3B","sourcesContent":["import { IButtonStyles } from '@fluentui/react/lib/Button';\nimport { ITheme } from '@fluentui/react/lib/Styling';\nimport * as StyleConstants from '../Constants';\nimport { IExtendedSemanticColors } from '../IExtendedSemanticColors';\n\nexport const IconButtonStyles = (theme: ITheme): Partial<IButtonStyles> => {\n  const { semanticColors } = theme;\n  const extendedSemanticColors = semanticColors as IExtendedSemanticColors;\n\n  return {\n    root: {\n      backgroundColor: StyleConstants.transparent,\n      color: extendedSemanticColors.iconButtonFill,\n      selectors: {\n        // standard button\n        '&.is-expanded': {\n          backgroundColor: extendedSemanticColors.buttonBackgroundHovered,\n          color: extendedSemanticColors.iconButtonFillHovered,\n        },\n      },\n    },\n    rootDisabled: {\n      backgroundColor: StyleConstants.transparent,\n      color: semanticColors.buttonTextDisabled,\n    },\n    rootHovered: {\n      backgroundColor: extendedSemanticColors.buttonBackgroundHovered,\n      color: extendedSemanticColors.iconButtonFillHovered,\n    },\n    rootPressed: {\n      backgroundColor: extendedSemanticColors.buttonBackgroundPressed,\n      color: extendedSemanticColors.iconButtonFillHovered,\n    },\n    rootChecked: {\n      backgroundColor: extendedSemanticColors.buttonBackgroundPressed,\n      color: extendedSemanticColors.iconButtonFillHovered,\n    },\n    rootCheckedHovered: {\n      backgroundColor: extendedSemanticColors.buttonBackgroundPressed,\n      color: extendedSemanticColors.iconButtonFillHovered,\n    },\n  };\n};\n"]}
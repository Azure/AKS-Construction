{"version":3,"file":"DetailsList.styles.js","sourceRoot":"../src/","sources":["azure/styles/DetailsList.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { ICheckStyleProps, ICheckStyles } from '@fluentui/react/lib/Check';\nimport {\n  IDetailsRowStyleProps,\n  IDetailsRowStyles,\n  IDetailsListStyleProps,\n  IDetailsListStyles,\n} from '@fluentui/react/lib/DetailsList';\nimport { IExtendedSemanticColors } from '../IExtendedSemanticColors';\nimport { FontSizes } from '../AzureType';\nimport * as StyleConstants from '../Constants';\n\nexport const CheckStyles = (props: ICheckStyleProps): Partial<ICheckStyles> => {\n  const { theme, checked } = props;\n  const semanticColors = theme.semanticColors as IExtendedSemanticColors;\n\n  return {\n    circle: [\n      {\n        fontSize: 0,\n        paddingTop: 1,\n        paddingLeft: 1,\n        borderRadius: 2,\n        color: semanticColors.listBackground,\n        backgroundColor: semanticColors.listBackground,\n        borderColor: semanticColors.ButtonBorderFocus,\n        borderWidth: StyleConstants.borderWidth,\n        borderStyle: StyleConstants.borderSolid,\n      },\n    ],\n    check: [\n      {\n        left: 2.5,\n        top: 1.5,\n      },\n      checked && {\n        color: semanticColors.inputText,\n      },\n      !checked && {\n        color: semanticColors.listBackground,\n      },\n    ],\n  };\n};\n\nexport const DetailsListStyles = (props: IDetailsListStyleProps): Partial<IDetailsListStyles> => {\n  const { theme } = props;\n  const { semanticColors } = theme;\n  const extendedSemanticColors = semanticColors as IExtendedSemanticColors;\n\n  return {\n    root: {\n      borderTop: StyleConstants.borderNone,\n      selectors: {\n        '.ms-DetailsRow-check': {\n          opacity: 1,\n        },\n      },\n    },\n    headerWrapper: {\n      selectors: {\n        '.ms-DetailsHeader': {\n          borderColor: extendedSemanticColors.rowBorder,\n          borderTop: StyleConstants.borderNone,\n          selectors: {\n            '.ms-DetailsHeader-cellTitle': {\n              backgroundColor: semanticColors.listBackground,\n              borderRightWidth: StyleConstants.borderWidth,\n              borderRightStyle: StyleConstants.borderSolid,\n              borderRightColor: semanticColors.listBackground,\n              fontSize: FontSizes.size10,\n              fontWeight: 700,\n            },\n            ':hover .ms-DetailsHeader-cellTitle': {\n              borderRightWidth: StyleConstants.borderWidth,\n              borderRightStyle: StyleConstants.borderSolid,\n              borderRightColor: semanticColors.variantBorder,\n            },\n            '.is-checked': {\n              '.ms-Check-circle': {\n                backgroundColor: extendedSemanticColors.checkboxBackgroundChecked,\n                borderColor: extendedSemanticColors.checkBoxCheck,\n              },\n              '.ms-Check-check': {\n                color: extendedSemanticColors.checkBoxCheck,\n              },\n            },\n            '.ms-DetailsHeader-check:hover': {\n              '.ms-Check-check': {\n                color: extendedSemanticColors.checkBoxCheckHover,\n              },\n              '.is-checked': {\n                '.ms-Check-circle': {\n                  backgroundColor: extendedSemanticColors.checkboxBackgroundHovered,\n                },\n                '.ms-Check-check': {\n                  color: extendedSemanticColors.checkBoxCheck,\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n};\n\nexport const DetailsRowStyles = (props: IDetailsRowStyleProps): Partial<IDetailsRowStyles> => {\n  const { theme, isSelected } = props;\n  const { semanticColors } = theme;\n  const extendedSemanticColors = semanticColors as IExtendedSemanticColors;\n\n  return {\n    root: [\n      {\n        borderColor: extendedSemanticColors.rowBorder,\n        color: semanticColors.listText,\n        fontSize: theme.fonts.medium.fontSize,\n        borderBottom: `1px solid ${extendedSemanticColors.listItemBackgroundSelected} !important`,\n        selectors: {\n          '.ms-DetailsRow-check': {\n            opacity: 1,\n          },\n        },\n      },\n      !isSelected && [\n        {\n          background: semanticColors.listBackground,\n          selectors: {\n            ':hover': {\n              backgroundColor: semanticColors.listItemBackgroundHovered,\n              selectors: {\n                '.ms-Check-check': {\n                  color: extendedSemanticColors.checkBoxCheckHover,\n                },\n                '.ms-Link': {\n                  color: extendedSemanticColors.listLinkRowHovered,\n                },\n                '.ms-Link:hover': {\n                  color: extendedSemanticColors.listLinkHovered,\n                },\n              },\n            },\n            ':after': {\n              border: `1px solid ${extendedSemanticColors.listItemBackgroundSelected} !important`,\n            },\n            ':focus': {\n              backgroundColor: extendedSemanticColors.rowFocus,\n            },\n          },\n        },\n      ],\n      isSelected && [\n        {\n          backgroundColor: extendedSemanticColors.listItemBackgroundSelected,\n          textDecoration: extendedSemanticColors.listUnderline,\n          fontWeight: StyleConstants.fontWeightRegular,\n          selectors: {\n            '.ms-DetailsRow-cell': {\n              fontWeight: StyleConstants.fontWeightRegular,\n            },\n            '.ms-Check-circle': {\n              backgroundColor: extendedSemanticColors.checkboxBackgroundChecked,\n              borderColor: extendedSemanticColors.checkBoxCheck,\n            },\n            '.ms-Check-check': {\n              color: extendedSemanticColors.checkBoxCheck,\n            },\n            '.ms-Link': {\n              color: extendedSemanticColors.listLinkRowSelected,\n            },\n            ':hover': {\n              background: extendedSemanticColors.listItemBackgroundSelectedHovered,\n              selectors: {\n                '.ms-Link': {\n                  color: extendedSemanticColors.listLinkRowSelectedHovered,\n                },\n                '.ms-Check-circle': {\n                  backgroundColor: extendedSemanticColors.checkboxBackgroundHovered,\n                },\n              },\n            },\n          },\n        },\n      ],\n    ],\n  };\n};\n"]}
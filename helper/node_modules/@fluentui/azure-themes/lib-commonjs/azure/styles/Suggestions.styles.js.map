{"version":3,"file":"Suggestions.styles.js","sourceRoot":"../src/","sources":["azure/styles/Suggestions.styles.ts"],"names":[],"mappings":";;;AAGO,IAAM,iBAAiB,GAAG,UAAC,KAA6B;IACrD,IAAA,KAAK,GAAK,KAAK,MAAV,CAAW;IACxB,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,EAAE,CAAC;KACX;IACO,IAAA,cAAc,GAAK,KAAK,eAAV,CAAW;IACjC,IAAM,sBAAsB,GAAG,cAAyC,CAAC;IACzE,OAAO;QACL,IAAI,EAAE;YACJ,MAAM,EAAE,MAAM;SACf;QACD,oBAAoB,EAAE;YACpB,KAAK,EAAE,cAAc,CAAC,QAAQ;SAC/B;QACD,KAAK,EAAE;YACL,KAAK,EAAE,sBAAsB,CAAC,SAAS;SACxC;KACF,CAAC;AACJ,CAAC,CAAC;AAlBW,QAAA,iBAAiB,qBAkB5B","sourcesContent":["import { ISuggestionsStyleProps, ISuggestionsStyles } from '@fluentui/react/lib/Pickers';\nimport { IExtendedSemanticColors } from '../IExtendedSemanticColors';\n\nexport const SuggestionsStyles = (props: ISuggestionsStyleProps): Partial<ISuggestionsStyles> => {\n  const { theme } = props;\n  if (!theme) {\n    return {};\n  }\n  const { semanticColors } = theme;\n  const extendedSemanticColors = semanticColors as IExtendedSemanticColors;\n  return {\n    root: {\n      border: 'none',\n    },\n    suggestionsContainer: {\n      color: semanticColors.bodyText,\n    },\n    title: {\n      color: extendedSemanticColors.labelText,\n    },\n  };\n};\n"]}
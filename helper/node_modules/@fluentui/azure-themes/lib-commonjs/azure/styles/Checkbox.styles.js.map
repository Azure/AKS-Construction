{"version":3,"file":"Checkbox.styles.js","sourceRoot":"../src/","sources":["azure/styles/Checkbox.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { ICheckboxStyleProps, ICheckboxStyles } from '@fluentui/react/lib/Checkbox';\nimport { IExtendedSemanticColors } from '../IExtendedSemanticColors';\nimport { BaseColors } from '../AzureColors';\nimport * as StyleConstants from '../Constants';\n\nexport const CheckboxStyles = (props: ICheckboxStyleProps): Partial<ICheckboxStyles> => {\n  const { disabled, checked, theme, indeterminate } = props;\n  const { semanticColors } = theme;\n  const extendedSemanticColors = semanticColors as IExtendedSemanticColors;\n\n  return {\n    text: [\n      {\n        fontSize: theme.fonts.medium.fontSize,\n        color: semanticColors.bodyText,\n        lineHeight: StyleConstants.inputHeight,\n      },\n      disabled && {\n        color: semanticColors.disabledBodyText,\n      },\n    ],\n    checkbox: [\n      {\n        backgroundColor: semanticColors.bodyBackground,\n        borderColor: extendedSemanticColors.checkBoxBorder,\n        selectors: {\n          '::after': {\n            backgroundColor: BaseColors.BLUE_0078D4,\n          },\n        },\n        width: StyleConstants.inputHeight,\n        height: StyleConstants.inputHeight,\n      },\n      indeterminate && {\n        selectors: {\n          '::after': {\n            top: 3,\n            left: 3,\n          },\n        },\n      },\n      checked && {\n        backgroundColor: BaseColors.WHITE,\n        borderColor: extendedSemanticColors.checkboxBorderChecked,\n      },\n      disabled && {\n        borderColor: extendedSemanticColors.checkBoxDisabled,\n      },\n      disabled &&\n        indeterminate && {\n          selectors: {\n            '::after': {\n              backgroundColor: extendedSemanticColors.checkBoxDisabled,\n            },\n          },\n        },\n      disabled &&\n        checked && {\n          borderColor: extendedSemanticColors.checkBoxDisabled,\n          backgroundColor: extendedSemanticColors.checkBoxCheckedDisabledBackground,\n        },\n    ],\n    checkmark: [\n      {\n        color: extendedSemanticColors.checkBoxCheck,\n        selectors: {\n          '&:hover': {},\n        },\n      },\n      disabled && {\n        color: extendedSemanticColors.checkBoxCheck,\n      },\n    ],\n    root: [\n      !disabled && [\n        !checked && {\n          selectors: {\n            ':hover .ms-Checkbox-label .ms-Checkbox-checkbox': {\n              borderColor: extendedSemanticColors.buttonText,\n            },\n            ':hover .ms-Checkbox-label .ms-Checkbox-checkmark': {\n              color: extendedSemanticColors.checkBoxCheckHover,\n              opacity: '1',\n            },\n            ':hover .ms-Checkbox-text': {\n              color: extendedSemanticColors.checkBoxCheckHoverTest,\n            },\n          },\n        },\n        checked && {\n          selectors: {\n            '.ms-Checkbox-label .ms-Checkbox-checkbox': {\n              background: extendedSemanticColors.checkboxBackgroundChecked,\n              borderColor: extendedSemanticColors.checkboxBorderChecked,\n            },\n            ':hover .ms-Checkbox-label .ms-Checkbox-checkbox': {\n              borderColor: extendedSemanticColors.checkboxBorderCheckedHovered,\n              backgroundColor: extendedSemanticColors.checkboxBackgroundHovered,\n            },\n            ':hover .ms-Checkbox-text': {\n              color: extendedSemanticColors.checkBoxCheckHoverTest,\n            },\n\n            ':focus .ms-Checkbox-label .ms-Checkbox-checkbox': {\n              borderColor: extendedSemanticColors.focusBorder,\n            },\n          },\n        },\n        indeterminate &&\n          checked && {\n            selectors: {\n              '.ms-Checkbox-label .ms-Checkbox-checkbox': {\n                background: extendedSemanticColors.checkBoxIndeterminateBackground,\n                borderColor: extendedSemanticColors.checkBoxBorder,\n              },\n              ':hover .ms-Checkbox-label .ms-Checkbox-checkbox': {\n                borderColor: extendedSemanticColors.buttonText,\n                backgroundColor: 'transparent',\n              },\n            },\n          },\n      ],\n    ],\n    input: {\n      [`.ms-Fabric--isFocusVisible &:focus + label::before`]: {\n        outline: `1px solid ${extendedSemanticColors.checkBoxCheckedFocus}`,\n      },\n    },\n  };\n};\n"]}
{"version":3,"file":"TagPicker.styles.js","sourceRoot":"../src/","sources":["azure/styles/TagPicker.styles.ts"],"names":[],"mappings":";;;;IAIO,IAAM,eAAe,GAAG,UAAC,KAA4B;QAClD,IAAA,KAAK,GAAK,KAAK,MAAV,CAAW;QACxB,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,EAAE,CAAC;SACX;QACO,IAAA,cAAc,GAAK,KAAK,eAAV,CAAW;QACjC,IAAM,sBAAsB,GAAG,cAAyC,CAAC;QACzE,OAAO;YACL,IAAI,EAAE;gBACJ,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ;gBACrC,MAAM,EAAK,cAAc,CAAC,WAAW,eAAU,cAAc,CAAC,WAAa;gBAC3E,eAAe,EAAE,cAAc,CAAC,WAAW;gBAC3C,SAAS,EAAE;oBACT,YAAY,EAAE;wBACZ,eAAe,EAAE,cAAc,CAAC,wBAAwB;wBACxD,KAAK,EAAE,cAAc,CAAC,kBAAkB;qBACzC;iBACF;aACF;YACD,KAAK,EAAE;gBACL,KAAK,EAAE,sBAAsB,CAAC,SAAS;gBACvC,eAAe,EAAE,cAAc,CAAC,WAAW;gBAC3C,MAAM,EAAE,MAAM;aACf;YACD,YAAY,EAAE;gBACZ,KAAK,EAAE,cAAc,CAAC,QAAQ;gBAC9B,MAAM,EAAE,MAAM;gBACd,eAAe,EAAE,cAAc,CAAC,WAAW;aAC5C;YACD,IAAI,EAAE;gBACJ,MAAM,EAAK,cAAc,CAAC,WAAW,eAAU,sBAAsB,CAAC,cAAgB;aACvF;SACF,CAAC;IACJ,CAAC,CAAC;IAjCW,QAAA,eAAe,mBAiC1B","sourcesContent":["import { IBasePickerStyles, IBasePickerStyleProps } from '@fluentui/react/lib/Pickers';\nimport * as StyleConstants from '../Constants';\nimport { IExtendedSemanticColors } from '../IExtendedSemanticColors';\n\nexport const TagPickerStyles = (props: IBasePickerStyleProps): Partial<IBasePickerStyles> => {\n  const { theme } = props;\n  if (!theme) {\n    return {};\n  }\n  const { semanticColors } = theme;\n  const extendedSemanticColors = semanticColors as IExtendedSemanticColors;\n  return {\n    root: {\n      fontSize: theme.fonts.medium.fontSize,\n      border: `${StyleConstants.borderWidth} solid ${StyleConstants.transparent}`,\n      backgroundColor: StyleConstants.transparent,\n      selectors: {\n        '[disabled]': {\n          backgroundColor: semanticColors.buttonBackgroundDisabled,\n          color: semanticColors.buttonTextDisabled,\n        },\n      },\n    },\n    input: {\n      color: extendedSemanticColors.inputText,\n      backgroundColor: StyleConstants.transparent,\n      border: 'none',\n    },\n    itemsWrapper: {\n      color: semanticColors.bodyText,\n      border: 'none',\n      backgroundColor: StyleConstants.transparent,\n    },\n    text: {\n      border: `${StyleConstants.borderWidth} solid ${extendedSemanticColors.controlOutline}`,\n    },\n  };\n};\n"]}
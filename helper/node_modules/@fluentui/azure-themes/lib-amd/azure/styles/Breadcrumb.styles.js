define(["require", "exports", "@fluentui/react/lib/Styling"], function (require, exports, Styling_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BreadcrumbStyles = void 0;
    var BreadcrumbStyles = function (props) {
        var theme = props.theme;
        var semanticColors = theme.semanticColors;
        return {
            chevron: {
                color: semanticColors.bodyText,
            },
            overflowButton: {
                selectors: {
                    '&:hover': {
                        backgroundColor: semanticColors.menuItemBackgroundHovered,
                        color: semanticColors.buttonTextHovered,
                    },
                    ':focus': {
                        backgroundColor: semanticColors.menuItemBackgroundHovered,
                        color: semanticColors.buttonTextPressed,
                    },
                    ':hover:focus': {
                        backgroundColor: semanticColors.menuItemBackgroundHovered,
                        color: semanticColors.buttonTextPressed,
                    },
                },
            },
            itemLink: {
                fontSize: theme.fonts.medium.fontSize,
                outline: 'none',
                fontWeight: Styling_1.FontWeights.regular,
                color: semanticColors.link,
                selectors: {
                    ':hover': {
                        backgroundColor: semanticColors.menuItemBackgroundHovered,
                        color: semanticColors.linkHovered,
                        textDecoration: 'underline',
                    },
                    ':focus': {
                        backgroundColor: semanticColors.menuItemBackgroundHovered,
                        color: semanticColors.linkHovered,
                        textDecoration: 'underline',
                    },
                    ':hover:focus': {
                        backgroundColor: semanticColors.menuItemBackgroundHovered,
                        color: semanticColors.linkHovered,
                        textDecoration: 'underline',
                    },
                },
            },
        };
    };
    exports.BreadcrumbStyles = BreadcrumbStyles;
});
//# sourceMappingURL=Breadcrumb.styles.js.map
{"version":3,"file":"ColorPicker.styles.js","sourceRoot":"../src/","sources":["azure/styles/ColorPicker.styles.ts"],"names":[],"mappings":";;;;IAWO,IAAM,iBAAiB,GAAG,UAAC,KAA6B;QAC7D,OAAO;YACL,KAAK,EAAE;gBACL,SAAS,EAAE;oBACT,gBAAgB,EAAE;wBAChB,YAAY,EAAE,CAAC;qBAChB;oBACD,qBAAqB,EAAE;wBACrB,QAAQ,EAAE,MAAM;wBAChB,OAAO,EAAE,CAAC;wBACV,YAAY,EAAE,MAAM;qBACrB;iBACF;aACF;YACD,KAAK,EAAE;gBACL,SAAS,EAAE;oBACT,6CAA6C,EAAE;wBAC7C,YAAY,EAAE,CAAC;qBAChB;iBACF;aACF;YACD,WAAW,EAAE;gBACX,SAAS,EAAE;oBACT,EAAE,EAAE;wBACF,aAAa,EAAE,CAAC;qBACjB;iBACF;aACF;SACF,CAAC;IACJ,CAAC,CAAC;IA7BW,QAAA,iBAAiB,qBA6B5B;IAEK,IAAM,oBAAoB,GAAG,UAAC,KAAgC;QAC3D,IAAA,KAAK,GAAK,KAAK,MAAV,CAAW;QACxB,IAAM,cAAc,GAAG,KAAK,CAAC,cAAyC,CAAC;QAEvE,OAAO;YACL,IAAI,EAAE;gBACJ,MAAM,EAAE,eAAa,cAAc,CAAC,cAAgB;aACrD;YACD,KAAK,EAAE;gBACL,WAAW,EAAE,cAAc,CAAC,cAAc;gBAC1C,SAAS,EAAE,oBAAM,CAAC,MAAM;aACzB;SACF,CAAC;IACJ,CAAC,CAAC;IAbW,QAAA,oBAAoB,wBAa/B;IAEK,IAAM,iBAAiB,GAAG,UAAC,KAA6B;QACrD,IAAA,KAAK,GAAK,KAAK,MAAV,CAAW;QACxB,IAAM,cAAc,GAAG,KAAK,CAAC,cAAyC,CAAC;QAEvE,OAAO;YACL,WAAW,EAAE;gBACX,WAAW,EAAE,cAAc,CAAC,cAAc;gBAC1C,SAAS,EAAE,oBAAM,CAAC,MAAM;aACzB;SACF,CAAC;IACJ,CAAC,CAAC;IAVW,QAAA,iBAAiB,qBAU5B","sourcesContent":["import {\n  IColorPickerStyleProps,\n  IColorPickerStyles,\n  IColorRectangleStyleProps,\n  IColorRectangleStyles,\n  IColorSliderStyleProps,\n  IColorSliderStyles,\n} from '@fluentui/react/lib/ColorPicker';\nimport { Depths } from '../AzureDepths';\nimport { IExtendedSemanticColors } from '../IExtendedSemanticColors';\n\nexport const ColorPickerStyles = (props: IColorPickerStyleProps): Partial<IColorPickerStyles> => {\n  return {\n    input: {\n      selectors: {\n        '&.ms-TextField': {\n          paddingRight: 4,\n        },\n        '.ms-TextField-field': {\n          minWidth: 'auto',\n          padding: 5,\n          textOverflow: 'clip',\n        },\n      },\n    },\n    table: {\n      selectors: {\n        'tbody td:last-of-type .ms-ColorPicker-input': {\n          paddingRight: 0,\n        },\n      },\n    },\n    tableHeader: {\n      selectors: {\n        td: {\n          paddingBottom: 4,\n        },\n      },\n    },\n  };\n};\n\nexport const ColorRectangleStyles = (props: IColorRectangleStyleProps): Partial<IColorRectangleStyles> => {\n  const { theme } = props;\n  const semanticColors = theme.semanticColors as IExtendedSemanticColors;\n\n  return {\n    root: {\n      border: `1px solid ${semanticColors.controlOutline}`,\n    },\n    thumb: {\n      borderColor: semanticColors.controlOutline,\n      boxShadow: Depths.depth8,\n    },\n  };\n};\n\nexport const ColorSliderStyles = (props: IColorSliderStyleProps): Partial<IColorSliderStyles> => {\n  const { theme } = props;\n  const semanticColors = theme.semanticColors as IExtendedSemanticColors;\n\n  return {\n    sliderThumb: {\n      borderColor: semanticColors.controlOutline,\n      boxShadow: Depths.depth8,\n    },\n  };\n};\n"]}
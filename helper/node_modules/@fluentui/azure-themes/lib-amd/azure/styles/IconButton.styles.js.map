{"version":3,"file":"IconButton.styles.js","sourceRoot":"../src/","sources":["azure/styles/IconButton.styles.ts"],"names":[],"mappings":";;;;IAKO,IAAM,gBAAgB,GAAG,UAAC,KAAa;QACpC,IAAA,cAAc,GAAK,KAAK,eAAV,CAAW;QACjC,IAAM,sBAAsB,GAAG,cAAyC,CAAC;QAEzE,OAAO;YACL,IAAI,EAAE;gBACJ,eAAe,EAAE,cAAc,CAAC,WAAW;gBAC3C,KAAK,EAAE,sBAAsB,CAAC,cAAc;gBAC5C,SAAS,EAAE;oBACT,kBAAkB;oBAClB,eAAe,EAAE;wBACf,eAAe,EAAE,sBAAsB,CAAC,uBAAuB;wBAC/D,KAAK,EAAE,sBAAsB,CAAC,qBAAqB;qBACpD;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,eAAe,EAAE,cAAc,CAAC,WAAW;gBAC3C,KAAK,EAAE,cAAc,CAAC,kBAAkB;aACzC;YACD,WAAW,EAAE;gBACX,eAAe,EAAE,sBAAsB,CAAC,uBAAuB;gBAC/D,KAAK,EAAE,sBAAsB,CAAC,qBAAqB;aACpD;YACD,WAAW,EAAE;gBACX,eAAe,EAAE,sBAAsB,CAAC,uBAAuB;gBAC/D,KAAK,EAAE,sBAAsB,CAAC,qBAAqB;aACpD;YACD,WAAW,EAAE;gBACX,eAAe,EAAE,sBAAsB,CAAC,uBAAuB;gBAC/D,KAAK,EAAE,sBAAsB,CAAC,qBAAqB;aACpD;YACD,kBAAkB,EAAE;gBAClB,eAAe,EAAE,sBAAsB,CAAC,uBAAuB;gBAC/D,KAAK,EAAE,sBAAsB,CAAC,qBAAqB;aACpD;SACF,CAAC;IACJ,CAAC,CAAC;IArCW,QAAA,gBAAgB,oBAqC3B","sourcesContent":["import { IButtonStyles } from '@fluentui/react/lib/Button';\nimport { ITheme } from '@fluentui/react/lib/Styling';\nimport * as StyleConstants from '../Constants';\nimport { IExtendedSemanticColors } from '../IExtendedSemanticColors';\n\nexport const IconButtonStyles = (theme: ITheme): Partial<IButtonStyles> => {\n  const { semanticColors } = theme;\n  const extendedSemanticColors = semanticColors as IExtendedSemanticColors;\n\n  return {\n    root: {\n      backgroundColor: StyleConstants.transparent,\n      color: extendedSemanticColors.iconButtonFill,\n      selectors: {\n        // standard button\n        '&.is-expanded': {\n          backgroundColor: extendedSemanticColors.buttonBackgroundHovered,\n          color: extendedSemanticColors.iconButtonFillHovered,\n        },\n      },\n    },\n    rootDisabled: {\n      backgroundColor: StyleConstants.transparent,\n      color: semanticColors.buttonTextDisabled,\n    },\n    rootHovered: {\n      backgroundColor: extendedSemanticColors.buttonBackgroundHovered,\n      color: extendedSemanticColors.iconButtonFillHovered,\n    },\n    rootPressed: {\n      backgroundColor: extendedSemanticColors.buttonBackgroundPressed,\n      color: extendedSemanticColors.iconButtonFillHovered,\n    },\n    rootChecked: {\n      backgroundColor: extendedSemanticColors.buttonBackgroundPressed,\n      color: extendedSemanticColors.iconButtonFillHovered,\n    },\n    rootCheckedHovered: {\n      backgroundColor: extendedSemanticColors.buttonBackgroundPressed,\n      color: extendedSemanticColors.iconButtonFillHovered,\n    },\n  };\n};\n"]}
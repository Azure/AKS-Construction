{"version":3,"file":"DetailsList.styles.js","sourceRoot":"../src/","sources":["azure/styles/DetailsList.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { ICheckStyleProps, ICheckStyles } from '@fluentui/react/lib/Check';\nimport {\n  IDetailsRowStyleProps,\n  IDetailsRowStyles,\n  IDetailsListStyleProps,\n  IDetailsListStyles,\n} from '@fluentui/react/lib/DetailsList';\nimport { IExtendedSemanticColors } from '../IExtendedSemanticColors';\nimport { FontSizes } from '../AzureType';\nimport * as StyleConstants from '../Constants';\n\nexport const CheckStyles = (props: ICheckStyleProps): Partial<ICheckStyles> => {\n  const { theme, checked } = props;\n  const semanticColors = theme.semanticColors as IExtendedSemanticColors;\n\n  return {\n    circle: [\n      {\n        fontSize: 0,\n        paddingTop: 1,\n        paddingLeft: 1,\n        borderRadius: 2,\n        color: semanticColors.listBackground,\n        backgroundColor: semanticColors.listBackground,\n        borderColor: semanticColors.ButtonBorderFocus,\n        borderWidth: StyleConstants.borderWidth,\n        borderStyle: StyleConstants.borderSolid,\n      },\n    ],\n    check: [\n      {\n        left: 2.5,\n        top: 1.5,\n      },\n      checked && {\n        color: semanticColors.inputText,\n      },\n      !checked && {\n        color: semanticColors.listBackground,\n      },\n    ],\n  };\n};\n\nexport const DetailsListStyles = (props: IDetailsListStyleProps): Partial<IDetailsListStyles> => {\n  const { theme } = props;\n  const { semanticColors } = theme;\n  const extendedSemanticColors = semanticColors as IExtendedSemanticColors;\n\n  return {\n    root: {\n      borderTop: StyleConstants.borderNone,\n      selectors: {\n        '.ms-DetailsRow-check': {\n          opacity: 1,\n        },\n      },\n    },\n    headerWrapper: {\n      selectors: {\n        '.ms-DetailsHeader': {\n          borderColor: extendedSemanticColors.rowBorder,\n          borderTop: StyleConstants.borderNone,\n          selectors: {\n            '.ms-DetailsHeader-cellTitle': {\n              backgroundColor: semanticColors.listBackground,\n              borderRightWidth: StyleConstants.borderWidth,\n              borderRightStyle: StyleConstants.borderSolid,\n              borderRightColor: semanticColors.listBackground,\n              fontSize: FontSizes.size10,\n              fontWeight: 700,\n            },\n            ':hover .ms-DetailsHeader-cellTitle': {\n              borderRightWidth: StyleConstants.borderWidth,\n              borderRightStyle: StyleConstants.borderSolid,\n              borderRightColor: semanticColors.variantBorder,\n            },\n            '.is-checked': {\n              '.ms-Check-circle': {\n                backgroundColor: extendedSemanticColors.checkboxBackgroundChecked,\n                borderColor: extendedSemanticColors.checkBoxCheck,\n              },\n              '.ms-Check-check': {\n                color: extendedSemanticColors.checkBoxCheck,\n              },\n            },\n            '.ms-DetailsHeader-check:hover': {\n              '.ms-Check-check': {\n                color: extendedSemanticColors.checkBoxCheckHover,\n              },\n              '.is-checked': {\n                '.ms-Check-circle': {\n                  backgroundColor: extendedSemanticColors.checkboxBackgroundHovered,\n                },\n                '.ms-Check-check': {\n                  color: extendedSemanticColors.checkBoxCheck,\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n};\n\nexport const DetailsRowStyles = (props: IDetailsRowStyleProps): Partial<IDetailsRowStyles> => {\n  const { theme, isSelected } = props;\n  const { semanticColors } = theme;\n  const extendedSemanticColors = semanticColors as IExtendedSemanticColors;\n\n  return {\n    root: [\n      {\n        borderColor: extendedSemanticColors.rowBorder,\n        color: semanticColors.listText,\n        fontSize: theme.fonts.medium.fontSize,\n        borderBottom: `1px solid ${extendedSemanticColors.listItemBackgroundSelected} !important`,\n        selectors: {\n          '.ms-DetailsRow-check': {\n            opacity: 1,\n          },\n        },\n      },\n      !isSelected && [\n        {\n          background: semanticColors.listBackground,\n          selectors: {\n            ':hover': {\n              backgroundColor: semanticColors.listItemBackgroundHovered,\n              selectors: {\n                '.ms-Check-check': {\n                  color: extendedSemanticColors.checkBoxCheckHover,\n                },\n                '.ms-Link': {\n                  color: extendedSemanticColors.listLinkRowHovered,\n                },\n                '.ms-Link:hover': {\n                  color: extendedSemanticColors.listLinkHovered,\n                },\n              },\n            },\n            ':after': {\n              border: `1px solid ${extendedSemanticColors.listItemBackgroundSelected} !important`,\n            },\n            ':focus': {\n              backgroundColor: extendedSemanticColors.rowFocus,\n            },\n          },\n        },\n      ],\n      isSelected && [\n        {\n          backgroundColor: extendedSemanticColors.listItemBackgroundSelected,\n          textDecoration: extendedSemanticColors.listUnderline,\n          fontWeight: StyleConstants.fontWeightRegular,\n          selectors: {\n            '.ms-DetailsRow-cell': {\n              fontWeight: StyleConstants.fontWeightRegular,\n            },\n            '.ms-Check-circle': {\n              backgroundColor: extendedSemanticColors.checkboxBackgroundChecked,\n              borderColor: extendedSemanticColors.checkBoxCheck,\n            },\n            '.ms-Check-check': {\n              color: extendedSemanticColors.checkBoxCheck,\n            },\n            '.ms-Link': {\n              color: extendedSemanticColors.listLinkRowSelected,\n            },\n            ':hover': {\n              background: extendedSemanticColors.listItemBackgroundSelectedHovered,\n              selectors: {\n                '.ms-Link': {\n                  color: extendedSemanticColors.listLinkRowSelectedHovered,\n                },\n                '.ms-Check-circle': {\n                  backgroundColor: extendedSemanticColors.checkboxBackgroundHovered,\n                },\n              },\n            },\n          },\n        },\n      ],\n    ],\n  };\n};\n"]}
{"version":3,"file":"Checkbox.styles.js","sourceRoot":"../src/","sources":["azure/styles/Checkbox.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { ICheckboxStyleProps, ICheckboxStyles } from '@fluentui/react/lib/Checkbox';\nimport { IExtendedSemanticColors } from '../IExtendedSemanticColors';\nimport { BaseColors } from '../AzureColors';\nimport * as StyleConstants from '../Constants';\n\nexport const CheckboxStyles = (props: ICheckboxStyleProps): Partial<ICheckboxStyles> => {\n  const { disabled, checked, theme, indeterminate } = props;\n  const { semanticColors } = theme;\n  const extendedSemanticColors = semanticColors as IExtendedSemanticColors;\n\n  return {\n    text: [\n      {\n        fontSize: theme.fonts.medium.fontSize,\n        color: semanticColors.bodyText,\n        lineHeight: StyleConstants.inputHeight,\n      },\n      disabled && {\n        color: semanticColors.disabledBodyText,\n      },\n    ],\n    checkbox: [\n      {\n        backgroundColor: semanticColors.bodyBackground,\n        borderColor: extendedSemanticColors.checkBoxBorder,\n        selectors: {\n          '::after': {\n            backgroundColor: BaseColors.BLUE_0078D4,\n          },\n        },\n        width: StyleConstants.inputHeight,\n        height: StyleConstants.inputHeight,\n      },\n      indeterminate && {\n        selectors: {\n          '::after': {\n            top: 3,\n            left: 3,\n          },\n        },\n      },\n      checked && {\n        backgroundColor: BaseColors.WHITE,\n        borderColor: extendedSemanticColors.checkboxBorderChecked,\n      },\n      disabled && {\n        borderColor: extendedSemanticColors.checkBoxDisabled,\n      },\n      disabled &&\n        indeterminate && {\n          selectors: {\n            '::after': {\n              backgroundColor: extendedSemanticColors.checkBoxDisabled,\n            },\n          },\n        },\n      disabled &&\n        checked && {\n          borderColor: extendedSemanticColors.checkBoxDisabled,\n          backgroundColor: extendedSemanticColors.checkBoxCheckedDisabledBackground,\n        },\n    ],\n    checkmark: [\n      {\n        color: extendedSemanticColors.checkBoxCheck,\n        selectors: {\n          '&:hover': {},\n        },\n      },\n      disabled && {\n        color: extendedSemanticColors.checkBoxCheck,\n      },\n    ],\n    root: [\n      !disabled && [\n        !checked && {\n          selectors: {\n            ':hover .ms-Checkbox-label .ms-Checkbox-checkbox': {\n              borderColor: extendedSemanticColors.buttonText,\n            },\n            ':hover .ms-Checkbox-label .ms-Checkbox-checkmark': {\n              color: extendedSemanticColors.checkBoxCheckHover,\n              opacity: '1',\n            },\n            ':hover .ms-Checkbox-text': {\n              color: extendedSemanticColors.checkBoxCheckHoverTest,\n            },\n          },\n        },\n        checked && {\n          selectors: {\n            '.ms-Checkbox-label .ms-Checkbox-checkbox': {\n              background: extendedSemanticColors.checkboxBackgroundChecked,\n              borderColor: extendedSemanticColors.checkboxBorderChecked,\n            },\n            ':hover .ms-Checkbox-label .ms-Checkbox-checkbox': {\n              borderColor: extendedSemanticColors.checkboxBorderCheckedHovered,\n              backgroundColor: extendedSemanticColors.checkboxBackgroundHovered,\n            },\n            ':hover .ms-Checkbox-text': {\n              color: extendedSemanticColors.checkBoxCheckHoverTest,\n            },\n\n            ':focus .ms-Checkbox-label .ms-Checkbox-checkbox': {\n              borderColor: extendedSemanticColors.focusBorder,\n            },\n          },\n        },\n        indeterminate &&\n          checked && {\n            selectors: {\n              '.ms-Checkbox-label .ms-Checkbox-checkbox': {\n                background: extendedSemanticColors.checkBoxIndeterminateBackground,\n                borderColor: extendedSemanticColors.checkBoxBorder,\n              },\n              ':hover .ms-Checkbox-label .ms-Checkbox-checkbox': {\n                borderColor: extendedSemanticColors.buttonText,\n                backgroundColor: 'transparent',\n              },\n            },\n          },\n      ],\n    ],\n    input: {\n      [`.ms-Fabric--isFocusVisible &:focus + label::before`]: {\n        outline: `1px solid ${extendedSemanticColors.checkBoxCheckedFocus}`,\n      },\n    },\n  };\n};\n"]}
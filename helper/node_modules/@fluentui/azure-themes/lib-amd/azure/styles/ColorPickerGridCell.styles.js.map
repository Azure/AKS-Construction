{"version":3,"file":"ColorPickerGridCell.styles.js","sourceRoot":"../src/","sources":["azure/styles/ColorPickerGridCell.styles.ts"],"names":[],"mappings":";;;;IAGO,IAAM,yBAAyB,GAAG,UACvC,KAAqC;QAE7B,IAAA,KAAK,GAAuB,KAAK,MAA5B,EAAE,QAAQ,GAAa,KAAK,SAAlB,EAAE,MAAM,GAAK,KAAK,OAAV,CAAW;QAC1C,IAAM,cAAc,GAAG,KAAK,CAAC,cAAyC,CAAC;QAEvE,OAAO;YACL,SAAS,EAAE;gBACT,CAAC,QAAQ,IAAI;oBACX,SAAS,EAAE;wBACT,QAAQ,EAAE;4BACR,WAAW,EAAE,cAAc,CAAC,cAAc;4BAC1C,eAAe,EAAE,cAAc,CAAC,yBAAyB;yBAC1D;wBACD,QAAQ,EAAE;4BACR,WAAW,EAAE,cAAc,CAAC,cAAc;4BAC1C,eAAe,EAAE,cAAc,CAAC,yBAAyB;yBAC1D;wBACD,eAAe,EAAE;4BACf,WAAW,EAAE,cAAc,CAAC,cAAc;4BAC1C,eAAe,EAAE,cAAc,CAAC,yBAAyB;yBAC1D;qBACF;iBACF;gBACD,QAAQ,IAAI;oBACV,WAAW,EAAE,cAAc,CAAC,cAAc;oBAC1C,SAAS,EAAE;wBACT,QAAQ,EAAE;4BACR,CAAC,MAAM,IAAI;gCACT,YAAY,EAAE,cAAc,CAAC,cAAc;6BAC5C;4BACD,MAAM,IAAI;gCACR,WAAW,EAAE,cAAc,CAAC,cAAc;6BAC3C;yBACF;qBACF;iBACF;aACF;SACF,CAAC;IACJ,CAAC,CAAC;IAvCW,QAAA,yBAAyB,6BAuCpC","sourcesContent":["import { IColorPickerGridCellStyleProps, IColorPickerGridCellStyles } from '@fluentui/react/lib/SwatchColorPicker';\nimport { IExtendedSemanticColors } from '../IExtendedSemanticColors';\n\nexport const ColorPickerGridCellStyles = (\n  props: IColorPickerGridCellStyleProps,\n): Partial<IColorPickerGridCellStyles> => {\n  const { theme, selected, circle } = props;\n  const semanticColors = theme.semanticColors as IExtendedSemanticColors;\n\n  return {\n    colorCell: [\n      !selected && {\n        selectors: {\n          ':focus': {\n            borderColor: semanticColors.controlOutline,\n            backgroundColor: semanticColors.listItemBackgroundHovered,\n          },\n          ':hover': {\n            borderColor: semanticColors.controlOutline,\n            backgroundColor: semanticColors.listItemBackgroundHovered,\n          },\n          ':active:hover': {\n            borderColor: semanticColors.controlOutline,\n            backgroundColor: semanticColors.listItemBackgroundHovered,\n          },\n        },\n      },\n      selected && {\n        borderColor: semanticColors.controlOutline,\n        selectors: {\n          ':hover': [\n            !circle && {\n              outlineColor: semanticColors.controlOutline,\n            },\n            circle && {\n              borderColor: semanticColors.controlOutline,\n            },\n          ],\n        },\n      },\n    ],\n  };\n};\n"]}
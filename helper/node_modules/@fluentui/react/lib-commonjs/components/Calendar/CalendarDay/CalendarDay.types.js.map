{"version":3,"file":"CalendarDay.types.js","sourceRoot":"../src/","sources":["components/Calendar/CalendarDay/CalendarDay.types.ts"],"names":[],"mappings":"","sourcesContent":["import type { IBaseProps, IRefObject, IStyleFunctionOrObject } from '@fluentui/utilities';\nimport type { ICalendarNavigationIcons } from '../Calendar.types';\nimport type { IStyle, ITheme } from '@fluentui/style-utilities';\nimport type {\n  ICalendarDayGridProps,\n  ICalendarDayGridStyleProps,\n  ICalendarDayGridStyles,\n} from '../../CalendarDayGrid/CalendarDayGrid.types';\nimport type { ICalendarStrings, IDateFormatting } from '@fluentui/date-time-utilities';\n\n/**\n * {@docCategory Calendar}\n */\nexport interface ICalendarDay {\n  focus(): void;\n}\n\n/**\n * {@docCategory Calendar}\n */\nexport interface ICalendarDayProps extends IBaseProps<ICalendarDay>, ICalendarDayGridProps {\n  /**\n   * Optional callback to access the ICalendarDay interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<ICalendarDay>;\n\n  /**\n   * Customized styles for the calendar day component\n   */\n  styles?: IStyleFunctionOrObject<ICalendarDayStyleProps, ICalendarDayStyles>;\n\n  /**\n   * Theme (provided through customization).\n   */\n  theme?: ITheme;\n\n  /**\n   * Additional CSS class(es) to apply to the CalendarDay.\n   */\n  className?: string;\n\n  /**\n   * Localized strings to use in the Calendar\n   */\n  strings: ICalendarStrings;\n\n  /**\n   * The currently navigated date\n   */\n  navigatedDate: Date;\n\n  /**\n   * Callback issued when a date in the calendar is navigated\n   * @param date - The date that is navigated to\n   * @param focusOnNavigatedDay - Whether to set the focus to the navigated date.\n   */\n  onNavigateDate: (date: Date, focusOnNavigatedDay: boolean) => void;\n\n  /**\n   * Callback issued when calendar day is closed\n   */\n  onDismiss?: () => void;\n\n  /**\n   * Custom navigation icons.\n   */\n  navigationIcons: ICalendarNavigationIcons;\n\n  /**\n   * Callback function when the header is selected\n   */\n  onHeaderSelect?: () => void;\n\n  /**\n   * Whether the calendar should show the week number (weeks 1 to 53) before each week row\n   * @defaultvalue false\n   */\n  showWeekNumbers?: boolean;\n\n  /**\n   * Apply additional formatting to dates, for example localized date formatting.\n   */\n  dateTimeFormatter: IDateFormatting;\n\n  /**\n   * Whether the calendar should show 6 weeks by default.\n   * @defaultvalue false\n   */\n  showSixWeeksByDefault?: boolean;\n\n  /**\n   * If set the Calendar will not allow navigation to or selection of a date earlier than this value.\n   */\n  minDate?: Date;\n\n  /**\n   * If set the Calendar will not allow navigation to or selection of a date later than this value.\n   */\n  maxDate?: Date;\n\n  /**\n   * If set the Calendar will not allow selection of dates in this array.\n   */\n  restrictedDates?: Date[];\n\n  /**\n   * Whether the close button should be shown or not\n   * @defaultvalue false\n   */\n  showCloseButton?: boolean;\n\n  /**\n   * Allows all dates and buttons to be focused, including disabled ones\n   * @defaultvalue false\n   */\n  allFocusable?: boolean;\n}\n\n/**\n * {@docCategory Calendar}\n */\nexport interface ICalendarDayStyleProps extends ICalendarDayGridStyleProps {\n  /**\n   * Theme provided by High-Order Component.\n   */\n  theme: ITheme;\n\n  /**\n   * Accept custom classNames\n   */\n  className?: string;\n\n  // Insert CalendarDay style props below\n\n  /**\n   * Whether the header is clickable\n   */\n  headerIsClickable?: boolean;\n\n  /**\n   * Whether week numbers are being shown\n   */\n  showWeekNumbers?: boolean;\n}\n\n/**\n * {@docCategory Calendar}\n */\nexport interface ICalendarDayStyles extends Partial<ICalendarDayGridStyles> {\n  /**\n   * Style for the root element.\n   */\n  root: IStyle;\n\n  /**\n   * The style for the header button and forward/back navigation button container\n   */\n  header: IStyle;\n\n  /**\n   * The style for the title text inside the header\n   */\n  monthAndYear: IStyle;\n\n  /**\n   * The style for the wrapper around forward/back/close buttons\n   */\n  monthComponents: IStyle;\n\n  /**\n   * The style for the forward/back/close buttons\n   */\n  headerIconButton: IStyle;\n\n  /**\n   * The style to apply for disabled elements\n   */\n  disabledStyle: IStyle;\n}\n"]}
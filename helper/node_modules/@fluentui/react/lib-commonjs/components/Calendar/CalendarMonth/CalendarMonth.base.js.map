{"version":3,"file":"CalendarMonth.base.js","sourceRoot":"../src/","sources":["components/Calendar/CalendarMonth/CalendarMonth.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { FocusZone } from '../../../FocusZone';\nimport {\n  addYears,\n  setMonth,\n  getYearStart,\n  getYearEnd,\n  getMonthStart,\n  getMonthEnd,\n  compareDatePart,\n  DEFAULT_DATE_FORMATTING,\n} from '@fluentui/date-time-utilities';\nimport { Icon } from '../../../Icon';\nimport { getStyles } from './CalendarMonth.styles';\nimport { css, getRTL, classNamesFunction, KeyCodes, format, getPropsWithDefaults } from '@fluentui/utilities';\nimport { CalendarYear } from '../CalendarYear/CalendarYear';\nimport { usePrevious } from '@fluentui/react-hooks';\nimport { defaultCalendarNavigationIcons } from '../defaults';\nimport type { ICalendarMonthProps, ICalendarMonthStyles, ICalendarMonthStyleProps } from './CalendarMonth.types';\nimport type { ICalendarYear, ICalendarYearRange } from '../CalendarYear/CalendarYear.types';\n\nconst MONTHS_PER_ROW = 4;\n\nconst getClassNames = classNamesFunction<ICalendarMonthStyleProps, ICalendarMonthStyles>();\n\nconst DEFAULT_PROPS: Readonly<Partial<ICalendarMonthProps>> = {\n  styles: getStyles,\n  strings: undefined,\n  navigationIcons: defaultCalendarNavigationIcons,\n  dateTimeFormatter: DEFAULT_DATE_FORMATTING,\n  yearPickerHidden: false,\n};\n\nfunction useAnimateBackwards({ navigatedDate }: ICalendarMonthProps) {\n  const currentYear = navigatedDate.getFullYear();\n  const previousYear = usePrevious(currentYear);\n\n  if (previousYear === undefined || previousYear === currentYear) {\n    return undefined;\n  } else {\n    return previousYear > currentYear;\n  }\n}\n\nfunction useFocusLogic({ componentRef }: ICalendarMonthProps) {\n  const navigatedMonthRef = React.useRef<HTMLButtonElement>(null);\n  const calendarYearRef = React.useRef<ICalendarYear>(null);\n  const focusOnUpdate = React.useRef(false);\n\n  const focus = React.useCallback(() => {\n    if (calendarYearRef.current) {\n      calendarYearRef.current.focus();\n    } else if (navigatedMonthRef.current) {\n      navigatedMonthRef.current.focus();\n    }\n  }, []);\n\n  React.useImperativeHandle(componentRef, () => ({ focus }), [focus]);\n\n  React.useEffect(() => {\n    if (focusOnUpdate.current) {\n      focus();\n      focusOnUpdate.current = false;\n    }\n  });\n\n  const focusOnNextUpdate = () => {\n    focusOnUpdate.current = true;\n  };\n\n  return [navigatedMonthRef, calendarYearRef, focusOnNextUpdate] as const;\n}\n\nexport const CalendarMonthBase: React.FunctionComponent<ICalendarMonthProps> = propsWithoutDefaults => {\n  const props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n  const [navigatedMonthRef, calendarYearRef, focusOnNextUpdate] = useFocusLogic(props);\n  const [isYearPickerVisible, setIsYearPickerVisible] = React.useState(false);\n\n  const animateBackwards = useAnimateBackwards(props);\n\n  const {\n    navigatedDate,\n    selectedDate,\n    strings,\n    today = new Date(),\n    navigationIcons,\n    dateTimeFormatter,\n    minDate,\n    maxDate,\n    theme,\n    styles,\n    className,\n    allFocusable,\n    highlightCurrentMonth,\n    highlightSelectedMonth,\n    animationDirection,\n    yearPickerHidden,\n    onNavigateDate,\n  } = props;\n\n  const selectMonthCallback = (newMonth: number): (() => void) => {\n    return () => onSelectMonth(newMonth);\n  };\n\n  const onSelectNextYear = (): void => {\n    onNavigateDate(addYears(navigatedDate, 1), false);\n  };\n\n  const onSelectPrevYear = (): void => {\n    onNavigateDate(addYears(navigatedDate, -1), false);\n  };\n\n  const onSelectMonth = (newMonth: number): void => {\n    // If header is clickable the calendars are overlayed, switch back to day picker when month is clicked\n    props.onHeaderSelect?.();\n    onNavigateDate(setMonth(navigatedDate, newMonth), true);\n  };\n\n  const onHeaderSelect = (): void => {\n    if (!yearPickerHidden) {\n      focusOnNextUpdate();\n      setIsYearPickerVisible(true);\n    } else {\n      props.onHeaderSelect?.();\n    }\n  };\n\n  const onSelectYear = (selectedYear: number) => {\n    focusOnNextUpdate();\n    const navYear = navigatedDate.getFullYear();\n    if (navYear !== selectedYear) {\n      let newNavigationDate = new Date(navigatedDate.getTime());\n      newNavigationDate.setFullYear(selectedYear);\n      // for min and max dates, adjust the new navigation date - perhaps this should be\n      // checked on the master navigation date handler (i.e. in Calendar)\n      if (maxDate && newNavigationDate > maxDate) {\n        newNavigationDate = setMonth(newNavigationDate, maxDate.getMonth());\n      } else if (minDate && newNavigationDate < minDate) {\n        newNavigationDate = setMonth(newNavigationDate, minDate.getMonth());\n      }\n      onNavigateDate(newNavigationDate, true);\n    }\n    setIsYearPickerVisible(false);\n  };\n\n  const onYearPickerHeaderSelect = (focus: boolean): void => {\n    focusOnNextUpdate();\n    setIsYearPickerVisible(false);\n  };\n\n  // navigationIcons has a default value in defaultProps, but typescript doesn't recognize this\n  const leftNavigationIcon = navigationIcons!.leftNavigation;\n  const rightNavigationIcon = navigationIcons!.rightNavigation;\n  const dateFormatter = dateTimeFormatter!;\n\n  // determine if previous/next years are in bounds\n  const isPrevYearInBounds = minDate ? compareDatePart(minDate, getYearStart(navigatedDate)) < 0 : true;\n  const isNextYearInBounds = maxDate ? compareDatePart(getYearEnd(navigatedDate), maxDate) < 0 : true;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className: className,\n    hasHeaderClickCallback: !!props.onHeaderSelect || !yearPickerHidden,\n    highlightCurrent: highlightCurrentMonth,\n    highlightSelected: highlightSelectedMonth,\n    animateBackwards: animateBackwards,\n    animationDirection: animationDirection,\n  });\n\n  if (isYearPickerVisible) {\n    const [onRenderYear, yearStrings] = getYearStrings(props);\n    // use navigated date for the year picker\n    return (\n      <CalendarYear\n        key={'calendarYear'}\n        minYear={minDate ? minDate.getFullYear() : undefined}\n        maxYear={maxDate ? maxDate.getFullYear() : undefined}\n        // eslint-disable-next-line react/jsx-no-bind\n        onSelectYear={onSelectYear}\n        navigationIcons={navigationIcons}\n        // eslint-disable-next-line react/jsx-no-bind\n        onHeaderSelect={onYearPickerHeaderSelect}\n        selectedYear={\n          selectedDate ? selectedDate.getFullYear() : navigatedDate ? navigatedDate.getFullYear() : undefined\n        }\n        onRenderYear={onRenderYear}\n        strings={yearStrings}\n        componentRef={calendarYearRef}\n        styles={styles}\n        highlightCurrentYear={highlightCurrentMonth}\n        highlightSelectedYear={highlightSelectedMonth}\n        animationDirection={animationDirection}\n      />\n    );\n  }\n\n  const rowIndexes = [];\n  for (let i = 0; i < strings.shortMonths.length / MONTHS_PER_ROW; i++) {\n    rowIndexes.push(i);\n  }\n\n  const yearString = dateFormatter.formatYear(navigatedDate);\n  const headerAriaLabel = strings.monthPickerHeaderAriaLabel\n    ? format(strings.monthPickerHeaderAriaLabel, yearString)\n    : yearString;\n\n  return (\n    <div className={classNames.root}>\n      <div className={classNames.headerContainer}>\n        <button\n          className={classNames.currentItemButton}\n          onClick={onHeaderSelect}\n          onKeyDown={onButtonKeyDown(onHeaderSelect)}\n          aria-label={headerAriaLabel}\n          data-is-focusable={!!props.onHeaderSelect || !yearPickerHidden}\n          tabIndex={!!props.onHeaderSelect || !yearPickerHidden ? 0 : -1}\n          type=\"button\"\n        >\n          <span aria-live=\"polite\" aria-atomic=\"true\">\n            {yearString}\n          </span>\n        </button>\n        <div className={classNames.navigationButtonsContainer}>\n          <button\n            className={css(classNames.navigationButton, {\n              [classNames.disabled]: !isPrevYearInBounds,\n            })}\n            aria-disabled={!isPrevYearInBounds}\n            tabIndex={isPrevYearInBounds ? undefined : allFocusable ? 0 : -1}\n            onClick={isPrevYearInBounds ? onSelectPrevYear : undefined}\n            onKeyDown={isPrevYearInBounds ? onButtonKeyDown(onSelectPrevYear) : undefined}\n            title={\n              strings.prevYearAriaLabel\n                ? strings.prevYearAriaLabel + ' ' + dateFormatter.formatYear(addYears(navigatedDate, -1))\n                : undefined\n            }\n            type=\"button\"\n          >\n            <Icon iconName={getRTL() ? rightNavigationIcon : leftNavigationIcon} />\n          </button>\n          <button\n            className={css(classNames.navigationButton, {\n              [classNames.disabled]: !isNextYearInBounds,\n            })}\n            aria-disabled={!isNextYearInBounds}\n            tabIndex={isNextYearInBounds ? undefined : allFocusable ? 0 : -1}\n            onClick={isNextYearInBounds ? onSelectNextYear : undefined}\n            onKeyDown={isNextYearInBounds ? onButtonKeyDown(onSelectNextYear) : undefined}\n            title={\n              strings.nextYearAriaLabel\n                ? strings.nextYearAriaLabel + ' ' + dateFormatter.formatYear(addYears(navigatedDate, 1))\n                : undefined\n            }\n            type=\"button\"\n          >\n            <Icon iconName={getRTL() ? leftNavigationIcon : rightNavigationIcon} />\n          </button>\n        </div>\n      </div>\n      <FocusZone>\n        <div className={classNames.gridContainer} role=\"grid\" aria-label={yearString}>\n          {rowIndexes.map((rowNum: number) => {\n            const monthsForRow = strings.shortMonths.slice(rowNum * MONTHS_PER_ROW, (rowNum + 1) * MONTHS_PER_ROW);\n            return (\n              <div key={'monthRow_' + rowNum + navigatedDate.getFullYear()} role=\"row\" className={classNames.buttonRow}>\n                {monthsForRow.map((month: string, index: number) => {\n                  const monthIndex = rowNum * MONTHS_PER_ROW + index;\n                  const indexedMonth = setMonth(navigatedDate, monthIndex);\n                  const isNavigatedMonth = navigatedDate.getMonth() === monthIndex;\n                  const isSelectedMonth = selectedDate.getMonth() === monthIndex;\n                  const isSelectedYear = selectedDate.getFullYear() === navigatedDate.getFullYear();\n                  const isInBounds =\n                    (minDate ? compareDatePart(minDate, getMonthEnd(indexedMonth)) < 1 : true) &&\n                    (maxDate ? compareDatePart(getMonthStart(indexedMonth), maxDate) < 1 : true);\n\n                  return (\n                    <button\n                      ref={isNavigatedMonth ? navigatedMonthRef : undefined}\n                      role={'gridcell'}\n                      className={css(classNames.itemButton, {\n                        [classNames.current]:\n                          highlightCurrentMonth && isCurrentMonth(monthIndex, navigatedDate.getFullYear(), today),\n                        [classNames.selected]: highlightSelectedMonth && isSelectedMonth && isSelectedYear,\n                        [classNames.disabled]: !isInBounds,\n                      })}\n                      disabled={!allFocusable && !isInBounds}\n                      key={monthIndex}\n                      onClick={isInBounds ? selectMonthCallback(monthIndex) : undefined}\n                      onKeyDown={isInBounds ? onButtonKeyDown(selectMonthCallback(monthIndex)) : undefined}\n                      aria-label={dateFormatter.formatMonth(indexedMonth, strings)}\n                      aria-selected={isNavigatedMonth}\n                      data-is-focusable={isInBounds ? true : undefined}\n                      type=\"button\"\n                    >\n                      {month}\n                    </button>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n      </FocusZone>\n    </div>\n  );\n};\nCalendarMonthBase.displayName = 'CalendarMonthBase';\n\nfunction getYearStrings({ strings, navigatedDate, dateTimeFormatter }: ICalendarMonthProps) {\n  const yearToString = (year: number) => {\n    if (dateTimeFormatter) {\n      // create a date based on the current nav date\n      const yearFormattingDate = new Date(navigatedDate.getTime());\n      yearFormattingDate.setFullYear(year);\n      return dateTimeFormatter.formatYear(yearFormattingDate);\n    }\n    return String(year);\n  };\n\n  const yearRangeToString = (yearRange: ICalendarYearRange) => {\n    return `${yearToString(yearRange.fromYear)} - ${yearToString(yearRange.toYear)}`;\n  };\n\n  const yearRangeToNextDecadeLabel = (yearRange: ICalendarYearRange) => {\n    return strings.nextYearRangeAriaLabel ? `${strings.nextYearRangeAriaLabel} ${yearRangeToString(yearRange)}` : '';\n  };\n\n  const yearRangeToPrevDecadeLabel = (yearRange: ICalendarYearRange) => {\n    return strings.prevYearRangeAriaLabel ? `${strings.prevYearRangeAriaLabel} ${yearRangeToString(yearRange)}` : '';\n  };\n\n  return [\n    yearToString,\n    {\n      rangeAriaLabel: yearRangeToString,\n      prevRangeAriaLabel: yearRangeToPrevDecadeLabel,\n      nextRangeAriaLabel: yearRangeToNextDecadeLabel,\n      headerAriaLabelFormatString: strings.yearPickerHeaderAriaLabel,\n    } as const,\n  ] as const;\n}\n\nfunction isCurrentMonth(month: number, year: number, today: Date): boolean {\n  return today.getFullYear() === year && today.getMonth() === month;\n}\n\nfunction onButtonKeyDown(callback: () => void): (ev: React.KeyboardEvent<HTMLButtonElement>) => void {\n  return (ev: React.KeyboardEvent<HTMLButtonElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    switch (ev.which) {\n      case KeyCodes.enter:\n        callback();\n        break;\n    }\n  };\n}\n"]}
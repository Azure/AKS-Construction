{"version":3,"file":"DetailsRowFields.js","sourceRoot":"../src/","sources":["components/DetailsList/DetailsRowFields.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { composeRenderFunction, css } from '../../Utilities';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles';\nimport type { IColumn } from './DetailsList.types';\nimport type { IDetailsRowFieldsProps } from './DetailsRowFields.types';\nimport type { IDetailsColumnFieldProps } from './DetailsColumn.types';\n\nconst getCellText = (item: any, column: IColumn): string => {\n  let value = item && column && column.fieldName ? item[column.fieldName] : '';\n\n  if (value === null || value === undefined) {\n    value = '';\n  }\n\n  if (typeof value === 'boolean') {\n    return value.toString();\n  }\n\n  return value;\n};\n\n/**\n * Component for rendering a row's cells in a `DetailsList`.\n *\n * {@docCategory DetailsList}\n */\nexport const DetailsRowFields: React.FunctionComponent<IDetailsRowFieldsProps> = props => {\n  const {\n    columns,\n    rowClassNames,\n    cellStyleProps = DEFAULT_CELL_STYLE_PROPS,\n    item,\n    itemIndex,\n    isSelected,\n    onRenderItemColumn,\n    getCellValueKey,\n    onRenderField: propsOnRenderField,\n    cellsByColumn,\n    enableUpdateAnimations,\n    rowHeaderId,\n  } = props;\n\n  const cellValueKeysRef = React.useRef<{\n    [columnKey: string]: string | undefined;\n  }>();\n\n  const cellValueKeys = cellValueKeysRef.current || (cellValueKeysRef.current = {});\n\n  const defaultOnRenderField = React.useCallback(\n    (fieldProps: IDetailsColumnFieldProps): JSX.Element | null => {\n      const { column, cellValueKey, className, onRender, item: fieldItem, itemIndex: fieldItemIndex } = fieldProps;\n\n      const width: string | number =\n        typeof column.calculatedWidth === 'undefined'\n          ? 'auto'\n          : column.calculatedWidth +\n            cellStyleProps.cellLeftPadding +\n            cellStyleProps.cellRightPadding +\n            (column.isPadded ? cellStyleProps.cellExtraRightPadding : 0);\n\n      const key = `${column.key}${cellValueKey !== undefined ? `-${cellValueKey}` : ''}`;\n\n      return (\n        <div\n          key={key}\n          id={column.isRowHeader ? rowHeaderId : undefined}\n          role={column.isRowHeader ? 'rowheader' : 'gridcell'}\n          className={css(\n            column.className,\n            column.isMultiline && rowClassNames.isMultiline,\n            column.isRowHeader && rowClassNames.isRowHeader,\n            rowClassNames.cell,\n            column.isPadded ? rowClassNames.cellPadded : rowClassNames.cellUnpadded,\n            className,\n          )}\n          style={{ width }}\n          data-automationid=\"DetailsRowCell\"\n          data-automation-key={column.key}\n        >\n          {onRender(fieldItem, fieldItemIndex, column)}\n        </div>\n      );\n    },\n    [rowClassNames, cellStyleProps, rowHeaderId],\n  );\n\n  return (\n    <div className={rowClassNames.fields} data-automationid=\"DetailsRowFields\" role=\"presentation\">\n      {columns.map(column => {\n        const { getValueKey = getCellValueKey } = column;\n\n        const onRender =\n          (cellsByColumn && column.key in cellsByColumn && (() => cellsByColumn[column.key])) ||\n          column.onRender ||\n          onRenderItemColumn ||\n          defaultOnRender;\n\n        let onRenderField = defaultOnRenderField;\n\n        if (column.onRenderField) {\n          onRenderField = composeRenderFunction(column.onRenderField, onRenderField);\n        }\n\n        if (propsOnRenderField) {\n          onRenderField = composeRenderFunction(propsOnRenderField, onRenderField);\n        }\n\n        const previousValueKey = cellValueKeys[column.key];\n\n        const cellValueKey = enableUpdateAnimations && getValueKey ? getValueKey(item, itemIndex, column) : undefined;\n\n        let showAnimation = false;\n\n        if (cellValueKey !== undefined && previousValueKey !== undefined && cellValueKey !== previousValueKey) {\n          showAnimation = true;\n        }\n\n        cellValueKeys[column.key] = cellValueKey;\n\n        return onRenderField({\n          item,\n          itemIndex,\n          isSelected,\n          column,\n          cellValueKey,\n          className: showAnimation ? rowClassNames.cellAnimation : undefined,\n          onRender,\n        });\n      })}\n    </div>\n  );\n};\n\nfunction defaultOnRender(item?: any, index?: number, column?: IColumn): React.ReactNode {\n  if (!item || !column) {\n    return null;\n  }\n\n  return getCellText(item, column);\n}\n"]}
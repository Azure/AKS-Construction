{"version":3,"file":"DetailsColumn.styles.js","sourceRoot":"../src/","sources":["components/DetailsList/DetailsColumn.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { getFocusStyle, getGlobalClassNames, hiddenContentStyle, FontWeights } from '../../Styling';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles';\nimport { getCellStyles } from './DetailsHeader.styles';\nimport type { IDetailsColumnStyleProps, IDetailsColumnStyles } from './DetailsColumn.types';\nimport type { IStyle } from '../../Styling';\n\nconst GlobalClassNames = {\n  isActionable: 'is-actionable',\n  cellIsCheck: 'ms-DetailsHeader-cellIsCheck',\n  collapseButton: 'ms-DetailsHeader-collapseButton',\n  isCollapsed: 'is-collapsed',\n  isAllSelected: 'is-allSelected',\n  isSelectAllHidden: 'is-selectAllHidden',\n  isResizingColumn: 'is-resizingColumn',\n  isEmpty: 'is-empty',\n  isIconVisible: 'is-icon-visible',\n  cellSizer: 'ms-DetailsHeader-cellSizer',\n  isResizing: 'is-resizing',\n  dropHintCircleStyle: 'ms-DetailsHeader-dropHintCircleStyle',\n  dropHintLineStyle: 'ms-DetailsHeader-dropHintLineStyle',\n  cellTitle: 'ms-DetailsHeader-cellTitle',\n  cellName: 'ms-DetailsHeader-cellName',\n  filterChevron: 'ms-DetailsHeader-filterChevron',\n  gripperBarVerticalStyle: 'ms-DetailsColumn-gripperBar',\n  nearIcon: 'ms-DetailsColumn-nearIcon',\n};\n\nexport const getDetailsColumnStyles = (props: IDetailsColumnStyleProps): IDetailsColumnStyles => {\n  const {\n    theme,\n    headerClassName,\n    iconClassName,\n    isActionable,\n    isEmpty,\n    isIconVisible,\n    isPadded,\n    isIconOnly,\n    cellStyleProps = DEFAULT_CELL_STYLE_PROPS,\n    transitionDurationDrag,\n    transitionDurationDrop,\n  } = props;\n\n  const { semanticColors, palette, fonts } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const colors = {\n    iconForegroundColor: semanticColors.bodySubtext,\n    headerForegroundColor: semanticColors.bodyText,\n    headerBackgroundColor: semanticColors.bodyBackground,\n    dropdownChevronForegroundColor: palette.neutralSecondary,\n    resizerColor: palette.neutralTertiaryAlt,\n  };\n\n  const nearIconStyle: IStyle = {\n    color: colors.iconForegroundColor,\n    opacity: 1,\n    paddingLeft: 8,\n  };\n\n  const borderWhileDragging: IStyle = {\n    outline: `1px solid ${palette.themePrimary}`,\n  };\n\n  const borderAfterDragOrDrop: IStyle = {\n    outlineColor: 'transparent',\n  };\n\n  return {\n    root: [\n      getCellStyles(props),\n      fonts.small,\n      isActionable && [\n        classNames.isActionable,\n        {\n          selectors: {\n            ':hover': {\n              color: semanticColors.bodyText,\n              background: semanticColors.listHeaderBackgroundHovered,\n            },\n            ':active': {\n              background: semanticColors.listHeaderBackgroundPressed,\n            },\n          },\n        },\n      ],\n      isEmpty && [\n        classNames.isEmpty,\n        {\n          textOverflow: 'clip',\n        },\n      ],\n      isIconVisible && classNames.isIconVisible,\n      isPadded && {\n        paddingRight: cellStyleProps.cellExtraRightPadding + cellStyleProps.cellRightPadding,\n      },\n      {\n        selectors: {\n          ':hover i[data-icon-name=\"GripperBarVertical\"]': {\n            display: 'block',\n          },\n        },\n      },\n      headerClassName,\n    ],\n\n    gripperBarVerticalStyle: {\n      display: 'none',\n      position: 'absolute',\n      textAlign: 'left',\n      color: palette.neutralTertiary,\n      left: 1,\n    },\n\n    nearIcon: [classNames.nearIcon, nearIconStyle],\n\n    sortIcon: [\n      nearIconStyle,\n      {\n        paddingLeft: 4,\n        position: 'relative',\n        top: 1,\n      },\n    ],\n\n    iconClassName: [\n      {\n        color: colors.iconForegroundColor,\n        opacity: 1,\n      },\n      iconClassName,\n    ],\n\n    filterChevron: [\n      classNames.filterChevron,\n      {\n        color: colors.dropdownChevronForegroundColor,\n        paddingLeft: 6,\n        verticalAlign: 'middle',\n        fontSize: fonts.small.fontSize,\n      },\n    ],\n\n    cellTitle: [\n      classNames.cellTitle,\n      getFocusStyle(theme),\n      {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        alignItems: 'stretch',\n        boxSizing: 'border-box',\n        overflow: 'hidden',\n        padding: `0 ${cellStyleProps.cellRightPadding}px 0 ${cellStyleProps.cellLeftPadding}px`,\n        ...(isIconOnly\n          ? {\n              alignContent: 'flex-end',\n              maxHeight: '100%',\n              flexWrap: 'wrap-reverse',\n            }\n          : {}),\n      },\n    ],\n\n    cellName: [\n      classNames.cellName,\n      {\n        flex: '0 1 auto',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        fontWeight: FontWeights.semibold,\n        fontSize: fonts.medium.fontSize,\n      },\n      isIconOnly && {\n        selectors: {\n          [`.${classNames.nearIcon}`]: {\n            paddingLeft: 0,\n          },\n        },\n      },\n    ],\n\n    cellTooltip: {\n      display: 'block',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n    },\n\n    accessibleLabel: hiddenContentStyle,\n\n    borderWhileDragging: borderWhileDragging,\n\n    noBorderWhileDragging: [borderAfterDragOrDrop, { transition: `outline ${transitionDurationDrag}ms ease` }],\n\n    borderAfterDropping: borderWhileDragging,\n\n    noBorderAfterDropping: [borderAfterDragOrDrop, { transition: `outline  ${transitionDurationDrop}ms ease` }],\n  };\n};\n"]}
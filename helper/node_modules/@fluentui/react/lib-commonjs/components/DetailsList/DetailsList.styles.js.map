{"version":3,"file":"DetailsList.styles.js","sourceRoot":"../src/","sources":["components/DetailsList/DetailsList.styles.ts"],"names":[],"mappings":";;;AAAA,yCAAoD;AAGpD,IAAM,gBAAgB,GAAG;IACvB,IAAI,EAAE,gBAAgB;IACtB,OAAO,EAAE,yBAAyB;IAClC,cAAc,EAAE,+BAA+B;IAC/C,aAAa,EAAE,8BAA8B;IAC7C,OAAO,EAAE,UAAU;IACnB,uBAAuB,EAAE,0BAA0B;IACnD,QAAQ,EAAE,cAAc;CACzB,CAAC;AAEK,IAAM,oBAAoB,GAAG,UAAC,KAA6B;;IACxD,IAAA,KAAK,GAA2D,KAAK,MAAhE,EAAE,SAAS,GAAgD,KAAK,UAArD,EAAE,uBAAuB,GAAuB,KAAK,wBAA5B,EAAE,OAAO,GAAc,KAAK,QAAnB,EAAE,OAAO,GAAK,KAAK,QAAV,CAAW;IACtE,IAAA,cAAc,GAAK,KAAK,eAAV,CAAW;IACjC,IAAM,UAAU,GAAG,6BAAmB,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;IAEhE,OAAO;QACL,IAAI,EAAE;YACJ,UAAU,CAAC,IAAI;YACf,KAAK,CAAC,KAAK,CAAC,KAAK;YACjB;gBACE,QAAQ,EAAE,UAAU;gBACpB,KAAK,EAAE,cAAc,CAAC,QAAQ;gBAC9B,SAAS;oBACP,GAAC,QAAM,UAAU,CAAC,QAAU,IAAG;wBAC7B,SAAS,EAAE,EAAE;wBACb,SAAS,EAAE,YAAY;qBACxB;uBACF;aACF;YAED,OAAO,IAAI,UAAU,CAAC,OAAO;YAE7B,OAAO,IAAI;gBACT,UAAU,CAAC,OAAO;gBAClB;oBACE,SAAS;wBACP,GAAC,MAAI,UAAU,CAAC,QAAU,IAAG;4BAC3B,SAAS,EAAE,EAAE;yBACd;2BACF;iBACF;aACF;YAED,uBAAuB,IAAI;gBACzB,UAAU,CAAC,uBAAuB;gBAClC;oBACE,SAAS,EAAE,MAAM;oBACjB,SAAS,EAAE,SAAS;oBACpB,uBAAuB,EAAE,OAAO;iBACjC;aACF;YAED,SAAS;SACV;QAED,SAAS,EAAE;YACT;gBACE,OAAO,EAAE,cAAc;gBACvB,QAAQ,EAAE,MAAM;gBAChB,SAAS,EAAE,CAAC;aACb;SACF;QACD,aAAa,EAAE,UAAU,CAAC,aAAa;QACvC,cAAc,EAAE,UAAU,CAAC,cAAc;KAC1C,CAAC;AACJ,CAAC,CAAC;AAvDW,QAAA,oBAAoB,wBAuD/B","sourcesContent":["import { getGlobalClassNames } from '../../Styling';\nimport type { IDetailsListStyleProps, IDetailsListStyles } from './DetailsList.types';\n\nconst GlobalClassNames = {\n  root: 'ms-DetailsList',\n  compact: 'ms-DetailsList--Compact',\n  contentWrapper: 'ms-DetailsList-contentWrapper',\n  headerWrapper: 'ms-DetailsList-headerWrapper',\n  isFixed: 'is-fixed',\n  isHorizontalConstrained: 'is-horizontalConstrained',\n  listCell: 'ms-List-cell',\n};\n\nexport const getDetailsListStyles = (props: IDetailsListStyleProps): IDetailsListStyles => {\n  const { theme, className, isHorizontalConstrained, compact, isFixed } = props;\n  const { semanticColors } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.small,\n      {\n        position: 'relative',\n        color: semanticColors.listText,\n        selectors: {\n          [`& .${classNames.listCell}`]: {\n            minHeight: 38,\n            wordBreak: 'break-word',\n          },\n        },\n      },\n\n      isFixed && classNames.isFixed,\n\n      compact && [\n        classNames.compact,\n        {\n          selectors: {\n            [`.${classNames.listCell}`]: {\n              minHeight: 32,\n            },\n          },\n        },\n      ],\n\n      isHorizontalConstrained && [\n        classNames.isHorizontalConstrained,\n        {\n          overflowX: 'auto',\n          overflowY: 'visible',\n          WebkitOverflowScrolling: 'touch',\n        },\n      ],\n\n      className,\n    ],\n\n    focusZone: [\n      {\n        display: 'inline-block',\n        minWidth: '100%',\n        minHeight: 1,\n      },\n    ],\n    headerWrapper: classNames.headerWrapper,\n    contentWrapper: classNames.contentWrapper,\n  };\n};\n"]}
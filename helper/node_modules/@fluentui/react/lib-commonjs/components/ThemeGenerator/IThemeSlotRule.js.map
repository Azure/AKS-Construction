{"version":3,"file":"IThemeSlotRule.js","sourceRoot":"../src/","sources":["components/ThemeGenerator/IThemeSlotRule.ts"],"names":[],"mappings":"","sourcesContent":["import { Shade } from '../../utilities/color/shades';\nimport type { IColor } from '../../utilities/color/interfaces';\n\nexport interface IThemeSlotRule {\n  /** The name of this theme slot. */\n  name: string;\n  /** The actual color this theme slot is if it is a color. */\n  color?: IColor;\n  /** The value of this slot if it is NOT a color. Must be falsey if not a color. */\n  value?: string;\n  /** The theme slot this slot is based on. */\n  inherits?: IThemeSlotRule;\n  /** If set, this slot is the specified shade of the slot it inherits from. */\n  asShade?: Shade;\n  /**\n   * Whether this slot is a background shade, which uses different logic for generating its inheriting-as-shade value.\n   */\n  isBackgroundShade?: boolean;\n  /** Whether this slot has been manually overridden (else, it was automatically generated based on inheritance). */\n  isCustomized?: boolean;\n  /**\n   * A collection of rules that inherit from this one. It is the responsibility of the inheriting rule to add\n   * itself to its parent's dependentRules collection.\n   */\n  dependentRules: IThemeSlotRule[];\n}\n"]}
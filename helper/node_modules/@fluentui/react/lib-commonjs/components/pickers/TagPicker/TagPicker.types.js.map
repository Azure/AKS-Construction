{"version":3,"file":"TagPicker.types.js","sourceRoot":"../src/","sources":["components/pickers/TagPicker/TagPicker.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport type { IStyle, ITheme } from '../../../Styling';\nimport type { IStyleFunctionOrObject } from '../../../Utilities';\nimport type { IPickerItemProps } from '../PickerItem.types';\nimport type { IBasePickerProps } from '../BasePicker.types';\n\n/**\n * TagPickerItem item interface.\n * {@docCategory TagPicker}\n */\nexport interface ITag {\n  /** Name of the item. */\n  name: string;\n\n  /** Unique key for the item. */\n  key: string | number;\n}\n\n/**\n * TagPicker component props\n * {@docCategory TagPicker}\n */\nexport interface ITagPickerProps extends IBasePickerProps<ITag> {}\n\n/**\n * TagItem component props\n * {@docCategory TagPicker}\n */\nexport interface ITagItemProps extends IPickerItemProps<ITag> {\n  /** Additional CSS class(es) to apply to the TagItem root element. */\n  className?: string;\n\n  /**\n   * Enable or not focus on TagItem when TagPicker is disabled.\n   * @defaultvalue false\n   */\n  enableTagFocusInDisabledPicker?: boolean;\n\n  /**\n   * The title (and aria-label) attribute used by the TagItem text element.\n   * @defaultvalue children if of type string or item.name\n   */\n  title?: string;\n\n  /** Call to provide customized styling that will layer on top of the variant rules. */\n  styles?: IStyleFunctionOrObject<ITagItemStyleProps, ITagItemStyles>;\n\n  /** Theme provided by High-Order Component. */\n  theme?: ITheme;\n}\n\n/**\n * The props needed to construct TagItem styles.\n * {@docCategory TagPicker}\n */\nexport type ITagItemStyleProps = Required<Pick<ITagItemProps, 'theme'>> &\n  Pick<ITagItemProps, 'className' | 'selected' | 'disabled'> & {};\n\n/**\n * Represents the stylable areas of the TagItem.\n * {@docCategory TagPicker}\n */\nexport interface ITagItemStyles {\n  /** Root element of picked TagItem */\n  root: IStyle;\n\n  /** Refers to the text element of the TagItem already picked. */\n  text: IStyle;\n\n  /** Refers to the cancel action button on a picked TagItem. */\n  close: IStyle;\n}\n\n/**\n * TagItemSuggestion component props\n * {@docCategory TagPicker}\n */\nexport interface ITagItemSuggestionProps extends React.AllHTMLAttributes<HTMLElement> {\n  /** Additional CSS class(es) to apply to the TagItemSuggestion div element */\n  className?: string;\n\n  /** Call to provide customized styling that will layer on top of the variant rules. */\n  styles?: IStyleFunctionOrObject<ITagItemSuggestionStyleProps, ITagItemSuggestionStyles>;\n\n  /** Theme provided by High-Order Component. */\n  theme?: ITheme;\n}\n\n/**\n * The props needed to construct TagItemSuggestion styles.\n * {@docCategory TagPicker}\n */\nexport type ITagItemSuggestionStyleProps = Required<Pick<ITagItemSuggestionProps, 'theme'>> &\n  Pick<ITagItemSuggestionProps, 'className'> & {};\n\n/**\n * Represents the stylable areas of the TagItemSuggestion\n * {@docCategory TagPicker}\n */\nexport interface ITagItemSuggestionStyles {\n  /** Refers to the text element of the TagItemSuggestion */\n  suggestionTextOverflow?: IStyle;\n}\n"]}
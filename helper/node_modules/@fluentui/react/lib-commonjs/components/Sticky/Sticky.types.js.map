{"version":3,"file":"Sticky.types.js","sourceRoot":"../src/","sources":["components/Sticky/Sticky.types.ts"],"names":[],"mappings":";;;AAiCA,IAAY,kBAIX;AAJD,WAAY,kBAAkB;IAC5B,2DAAQ,CAAA;IACR,+DAAU,CAAA;IACV,+DAAU,CAAA;AACZ,CAAC,EAJW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAI7B","sourcesContent":["import { Sticky } from './Sticky';\nimport type { IRefObject } from '../../Utilities';\nimport type { IReactProps } from '../../common/React.types';\n\nexport interface IStickyProps extends IReactProps<Sticky> {\n  /**\n   * Gets ref to component interface.\n   */\n  componentRef?: IRefObject<IStickyProps>;\n\n  /**\n   * Class name to apply to the sticky element if component is sticky.\n   */\n  stickyClassName?: string;\n\n  /**\n   * color to apply as 'background-color' style for sticky element.\n   */\n  stickyBackgroundColor?: string;\n\n  /**\n   * Region to render sticky component in.\n   * @defaultvalue Both\n   */\n  stickyPosition?: StickyPositionType;\n\n  /**\n   * If true, then match scrolling position of placeholder element in Sticky.\n   * @defaultvalue true\n   */\n  isScrollSynced?: boolean;\n}\n\nexport enum StickyPositionType {\n  Both = 0,\n  Header = 1,\n  Footer = 2,\n}\n"]}
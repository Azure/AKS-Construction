{"version":3,"file":"Facepile.base.js","sourceRoot":"../src/","sources":["components/Facepile/Facepile.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { buttonProperties, classNamesFunction, getId, getNativeProps, initializeComponentRef } from '../../Utilities';\nimport { OverflowButtonType } from './Facepile.types';\nimport { FacepileButton } from './FacepileButton';\nimport { Icon } from '../../Icon';\nimport { Persona } from '../../Persona';\nimport { PersonaCoin, PersonaSize, PersonaInitialsColor } from '../../PersonaCoin';\nimport type { IFacepileProps, IFacepilePersona, IFacepileStyleProps, IFacepileStyles } from './Facepile.types';\nimport type { IPersonaStyles } from '../../Persona';\nimport type { IButtonProps } from '../../Button';\n\nconst getClassNames = classNamesFunction<IFacepileStyleProps, IFacepileStyles>();\n\n/**\n * FacePile with no default styles.\n * [Use the `styles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Component-Styling)\n */\nexport class FacepileBase extends React.Component<IFacepileProps, {}> {\n  public static defaultProps: IFacepileProps = {\n    maxDisplayablePersonas: 5,\n    personas: [],\n    overflowPersonas: [],\n    personaSize: PersonaSize.size32,\n  };\n\n  private _ariaDescriptionId: string;\n\n  private _classNames = getClassNames(this.props.styles, {\n    theme: this.props.theme!,\n    className: this.props.className,\n  });\n\n  constructor(props: IFacepileProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this._ariaDescriptionId = getId();\n  }\n\n  public render(): JSX.Element {\n    let { overflowButtonProps } = this.props;\n    const {\n      chevronButtonProps, // eslint-disable-line deprecation/deprecation\n      maxDisplayablePersonas,\n      personas,\n      overflowPersonas,\n      showAddButton,\n      ariaLabel,\n      showTooltip = true,\n    } = this.props;\n\n    const { _classNames } = this;\n\n    // Add a check to make sure maxDisplayalePersonas is defined to cover the edge case of it being 0.\n    const numPersonasToShow: number =\n      typeof maxDisplayablePersonas === 'number' ? Math.min(personas.length, maxDisplayablePersonas) : personas.length;\n\n    // Added for deprecating chevronButtonProps.  Can remove after v1.0\n    if (chevronButtonProps && !overflowButtonProps) {\n      overflowButtonProps = chevronButtonProps;\n    }\n\n    const hasOverflowPersonas = overflowPersonas && overflowPersonas.length > 0;\n    const personasPrimary: IFacepilePersona[] = hasOverflowPersonas ? personas : personas.slice(0, numPersonasToShow);\n    const personasOverflow: IFacepilePersona[] =\n      (hasOverflowPersonas ? overflowPersonas : personas.slice(numPersonasToShow)) || [];\n\n    return (\n      <div className={_classNames.root}>\n        {this.onRenderAriaDescription()}\n        <div className={_classNames.itemContainer}>\n          {showAddButton ? this._getAddNewElement() : null}\n          <ul className={_classNames.members} aria-label={ariaLabel}>\n            {this._onRenderVisiblePersonas(\n              personasPrimary,\n              personasOverflow.length === 0 && personas.length === 1,\n              showTooltip,\n            )}\n          </ul>\n          {overflowButtonProps ? this._getOverflowElement(personasOverflow) : null}\n        </div>\n      </div>\n    );\n  }\n\n  protected onRenderAriaDescription() {\n    const { ariaDescription } = this.props;\n\n    const { _classNames } = this;\n\n    // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan,\n    // otherwise it will be assigned to descriptionSpan.\n    return (\n      ariaDescription && (\n        <span className={_classNames.screenReaderOnly} id={this._ariaDescriptionId}>\n          {ariaDescription}\n        </span>\n      )\n    );\n  }\n\n  private _onRenderVisiblePersonas(\n    personas: IFacepilePersona[],\n    singlePersona: boolean,\n    showTooltip: boolean,\n  ): JSX.Element[] {\n    const {\n      onRenderPersona = this._getPersonaControl,\n      onRenderPersonaCoin = this._getPersonaCoinControl,\n      onRenderPersonaWrapper,\n    } = this.props;\n    return personas.map((persona: IFacepilePersona, index: number) => {\n      const personaControl: JSX.Element | null = singlePersona\n        ? onRenderPersona(persona, this._getPersonaControl)\n        : onRenderPersonaCoin(persona, this._getPersonaCoinControl);\n      const defaultPersonaRender = persona.onClick\n        ? () => this._getElementWithOnClickEvent(personaControl, persona, showTooltip, index)\n        : () => this._getElementWithoutOnClickEvent(personaControl, persona, showTooltip, index);\n\n      return (\n        <li key={`${singlePersona ? 'persona' : 'personaCoin'}-${index}`} className={this._classNames.member}>\n          {onRenderPersonaWrapper ? onRenderPersonaWrapper(persona, defaultPersonaRender) : defaultPersonaRender()}\n        </li>\n      );\n    });\n  }\n\n  private _getPersonaControl = (persona: IFacepilePersona): JSX.Element | null => {\n    const { getPersonaProps, personaSize } = this.props;\n    const personaStyles: Partial<IPersonaStyles> = {\n      details: {\n        flex: '1 0 auto',\n      },\n    };\n\n    return (\n      <Persona\n        imageInitials={persona.imageInitials}\n        imageUrl={persona.imageUrl}\n        initialsColor={persona.initialsColor}\n        allowPhoneInitials={persona.allowPhoneInitials}\n        text={persona.personaName}\n        size={personaSize}\n        {...(getPersonaProps ? getPersonaProps(persona) : null)}\n        styles={personaStyles}\n      />\n    );\n  };\n\n  private _getPersonaCoinControl = (persona: IFacepilePersona): JSX.Element | null => {\n    const { getPersonaProps, personaSize } = this.props;\n    return (\n      <PersonaCoin\n        imageInitials={persona.imageInitials}\n        imageUrl={persona.imageUrl}\n        initialsColor={persona.initialsColor}\n        allowPhoneInitials={persona.allowPhoneInitials}\n        text={persona.personaName}\n        size={personaSize}\n        {...(getPersonaProps ? getPersonaProps(persona) : null)}\n      />\n    );\n  };\n\n  private _getElementWithOnClickEvent(\n    personaControl: JSX.Element | null,\n    persona: IFacepilePersona,\n    showTooltip: boolean,\n    index: number,\n  ): JSX.Element {\n    const { keytipProps } = persona;\n    return (\n      <FacepileButton\n        {...getNativeProps(persona, buttonProperties)}\n        {...this._getElementProps(persona, showTooltip, index)}\n        keytipProps={keytipProps}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={this._onPersonaClick.bind(this, persona)}\n      >\n        {personaControl}\n      </FacepileButton>\n    );\n  }\n\n  private _getElementWithoutOnClickEvent(\n    personaControl: JSX.Element | null,\n    persona: IFacepilePersona,\n    showTooltip: boolean,\n    index: number,\n  ): JSX.Element {\n    return (\n      <div {...getNativeProps(persona, buttonProperties)} {...this._getElementProps(persona, showTooltip, index)}>\n        {personaControl}\n      </div>\n    );\n  }\n\n  private _getElementProps(\n    persona: IFacepilePersona,\n    showTooltip: boolean,\n    index: number,\n  ): { key: React.Key; ['data-is-focusable']: boolean } & React.HTMLAttributes<HTMLDivElement> {\n    const { _classNames } = this;\n\n    return {\n      key: (persona.imageUrl ? 'i' : '') + index,\n      'data-is-focusable': true,\n      className: _classNames.itemButton,\n      title: showTooltip ? persona.personaName : undefined,\n      onMouseMove: this._onPersonaMouseMove.bind(this, persona),\n      onMouseOut: this._onPersonaMouseOut.bind(this, persona),\n    };\n  }\n\n  private _getOverflowElement(personasOverflow: IFacepilePersona[]): JSX.Element | null {\n    switch (this.props.overflowButtonType) {\n      case OverflowButtonType.descriptive:\n        return this._getDescriptiveOverflowElement(personasOverflow);\n      case OverflowButtonType.downArrow:\n        return this._getIconElement('ChevronDown');\n      case OverflowButtonType.more:\n        return this._getIconElement('More');\n      default:\n        return null;\n    }\n  }\n\n  private _getDescriptiveOverflowElement(personasOverflow: IFacepilePersona[]): JSX.Element | null {\n    const { personaSize } = this.props;\n    if (!personasOverflow || personasOverflow.length < 1) {\n      return null;\n    }\n\n    const personaNames: string = personasOverflow.map((p: IFacepilePersona) => p.personaName).join(', ');\n    const overflowButtonProps: IButtonProps = { ...{ title: personaNames }, ...this.props.overflowButtonProps };\n    const numPersonasNotPictured: number = Math.max(personasOverflow.length, 0);\n\n    const { _classNames } = this;\n\n    return (\n      <FacepileButton\n        {...overflowButtonProps}\n        ariaDescription={overflowButtonProps.title}\n        className={_classNames.descriptiveOverflowButton}\n      >\n        <PersonaCoin\n          size={personaSize}\n          onRenderInitials={this._renderInitialsNotPictured(numPersonasNotPictured)}\n          initialsColor={PersonaInitialsColor.transparent}\n        />\n      </FacepileButton>\n    );\n  }\n\n  private _getIconElement(icon: string): JSX.Element {\n    const { overflowButtonProps, personaSize } = this.props;\n    const overflowInitialsIcon = true;\n\n    const { _classNames } = this;\n\n    return (\n      <FacepileButton {...overflowButtonProps} className={_classNames.overflowButton}>\n        <PersonaCoin\n          size={personaSize}\n          onRenderInitials={this._renderInitials(icon, overflowInitialsIcon)}\n          initialsColor={PersonaInitialsColor.transparent}\n        />\n      </FacepileButton>\n    );\n  }\n  private _getAddNewElement(): JSX.Element {\n    const { addButtonProps, personaSize } = this.props;\n\n    const { _classNames } = this;\n\n    return (\n      <FacepileButton {...addButtonProps} className={_classNames.addButton}>\n        <PersonaCoin size={personaSize} onRenderInitials={this._renderInitials('AddFriend')} />\n      </FacepileButton>\n    );\n  }\n\n  private _onPersonaClick(persona: IFacepilePersona, ev?: React.MouseEvent<HTMLElement>): void {\n    persona.onClick!(ev, persona);\n    ev!.preventDefault();\n    ev!.stopPropagation();\n  }\n\n  private _onPersonaMouseMove(persona: IFacepilePersona, ev?: React.MouseEvent<HTMLElement>): void {\n    if (persona.onMouseMove) {\n      persona.onMouseMove(ev, persona);\n    }\n  }\n\n  private _onPersonaMouseOut(persona: IFacepilePersona, ev?: React.MouseEvent<HTMLElement>): void {\n    if (persona.onMouseOut) {\n      persona.onMouseOut(ev, persona);\n    }\n  }\n\n  private _renderInitials(iconName: string, overflowButton?: boolean): () => JSX.Element {\n    const { _classNames } = this;\n\n    return (): JSX.Element => {\n      return <Icon iconName={iconName} className={overflowButton ? _classNames.overflowInitialsIcon : ''} />;\n    };\n  }\n\n  private _renderInitialsNotPictured(numPersonasNotPictured: number): () => JSX.Element {\n    const { _classNames } = this;\n\n    return (): JSX.Element => {\n      return (\n        <span className={_classNames.overflowInitialsIcon}>\n          {numPersonasNotPictured < 100 ? '+' + numPersonasNotPictured : '99+'}\n        </span>\n      );\n    };\n  }\n}\n"]}
{"version":3,"file":"Button.js","sourceRoot":"../src/","sources":["components/Button/Button.tsx"],"names":[],"mappings":";;;;AAAA,6BAA+B;AAE/B,6CAAuC;AACvC,+CAA4C;AAC5C,+DAA8D;AAC9D,4DAA2D;AAC3D,kEAAiE;AACjE,sDAAqD;AACrD,+DAA8D;AAG9D;;;;GAIG;AACH;IAA4B,kCAAiC;IAC3D,gBAAY,KAAmB;QAA/B,YACE,kBAAM,KAAK,CAAC,SAMb;QAJC,gBAAI,CACF,2EAA2E;YACzE,gEAAgE,CACnE,CAAC;;IACJ,CAAC;IAEM,uBAAM,GAAb;QACE,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAEzB,mDAAmD;QACnD,QAAQ,KAAK,CAAC,UAAU,EAAE;YACxB,KAAK,yBAAU,CAAC,OAAO;gBACrB,OAAO,oBAAC,2BAAY,uBAAK,KAAK,EAAI,CAAC;YAErC,KAAK,yBAAU,CAAC,QAAQ;gBACtB,OAAO,oBAAC,+BAAc,uBAAK,KAAK,EAAI,CAAC;YAEvC,KAAK,yBAAU,CAAC,IAAI;gBAClB,OAAO,oBAAC,uBAAU,uBAAK,KAAK,EAAI,CAAC;YAEnC,KAAK,yBAAU,CAAC,OAAO;gBACrB,OAAO,oBAAC,6BAAa,uBAAK,KAAK,EAAI,CAAC;YAEtC;gBACE,OAAO,oBAAC,6BAAa,uBAAK,KAAK,EAAI,CAAC;SACvC;IACH,CAAC;IACH,aAAC;AAAD,CAAC,AA/BD,CAA4B,KAAK,CAAC,SAAS,GA+B1C;AA/BY,wBAAM","sourcesContent":["import * as React from 'react';\n\nimport { warn } from '../../Utilities';\nimport { ButtonType } from './Button.types';\nimport { DefaultButton } from './DefaultButton/DefaultButton';\nimport { ActionButton } from './ActionButton/ActionButton';\nimport { CompoundButton } from './CompoundButton/CompoundButton';\nimport { IconButton } from './IconButton/IconButton';\nimport { PrimaryButton } from './PrimaryButton/PrimaryButton';\nimport type { IButtonProps } from './Button.types';\n\n/**\n * This class is deprecated. Use the individual *Button components instead.\n * @deprecated Use the individual *Button components instead.\n * {@docCategory Button}\n */\nexport class Button extends React.Component<IButtonProps, {}> {\n  constructor(props: IButtonProps) {\n    super(props);\n\n    warn(\n      `The Button component has been deprecated. Use specific variants instead. ` +\n        `(PrimaryButton, DefaultButton, IconButton, ActionButton, etc.)`,\n    );\n  }\n\n  public render(): JSX.Element {\n    const props = this.props;\n\n    // eslint-disable-next-line deprecation/deprecation\n    switch (props.buttonType) {\n      case ButtonType.command:\n        return <ActionButton {...props} />;\n\n      case ButtonType.compound:\n        return <CompoundButton {...props} />;\n\n      case ButtonType.icon:\n        return <IconButton {...props} />;\n\n      case ButtonType.primary:\n        return <PrimaryButton {...props} />;\n\n      default:\n        return <DefaultButton {...props} />;\n    }\n  }\n}\n"]}
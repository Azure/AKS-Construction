{"version":3,"file":"Callout.js","sourceRoot":"../src/","sources":["components/Callout/Callout.tsx"],"names":[],"mappings":";;;;AAAA,6BAA+B;AAC/B,mDAAkD;AAClD,qCAAoC;AAGvB,QAAA,OAAO,GAA2C,KAAK,CAAC,UAAU,CAC7E,UAAC,EAAmC,EAAE,YAAY;IAA/C,IAAA,UAAU,gBAAA,EAAE,UAAU,gBAAA,EAAK,IAAI,sBAAjC,4BAAmC,CAAF;IAChC,IAAM,OAAO,GAAG,oBAAC,+BAAc,uBAAK,IAAI,IAAE,UAAU,EAAE,UAAU,EAAE,GAAG,EAAE,YAAY,IAAI,CAAC;IACxF,OAAO,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,oBAAC,aAAK,uBAAK,UAAU,GAAG,OAAO,CAAS,CAAC;AACzE,CAAC,CACF,CAAC;AACF,eAAO,CAAC,WAAW,GAAG,SAAS,CAAC","sourcesContent":["import * as React from 'react';\nimport { CalloutContent } from './CalloutContent';\nimport { Layer } from '../../Layer';\nimport type { ICalloutProps } from './Callout.types';\n\nexport const Callout: React.FunctionComponent<ICalloutProps> = React.forwardRef<HTMLDivElement, ICalloutProps>(\n  ({ layerProps, doNotLayer, ...rest }, forwardedRef) => {\n    const content = <CalloutContent {...rest} doNotLayer={doNotLayer} ref={forwardedRef} />;\n    return doNotLayer ? content : <Layer {...layerProps}>{content}</Layer>;\n  },\n);\nCallout.displayName = 'Callout';\n"]}
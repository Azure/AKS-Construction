{"version":3,"file":"Keytip.styles.js","sourceRoot":"../src/","sources":["components/Keytip/Keytip.styles.ts"],"names":[],"mappings":";;;AAAA,yCAAqE;AAK9D,IAAM,SAAS,GAAG,UAAC,KAAwB;;IACxC,IAAA,KAAK,GAAwB,KAAK,MAA7B,EAAE,QAAQ,GAAc,KAAK,SAAnB,EAAE,OAAO,GAAK,KAAK,QAAV,CAAW;IAC3C,OAAO;QACL,SAAS,EAAE;YACT;gBACE,eAAe,EAAE,KAAK,CAAC,OAAO,CAAC,WAAW;aAC3C;YACD,QAAQ,IAAI;gBACV,OAAO,EAAE,GAAG;gBACZ,SAAS;oBACP,GAAC,8BAAoB,IAAG;wBACtB,KAAK,EAAE,UAAU;wBACjB,OAAO,EAAE,CAAC;qBACX;uBACF;aACF;YACD,CAAC,OAAO,IAAI;gBACV,UAAU,EAAE,QAAQ;aACrB;SACF;QACD,IAAI,EAAE;YACJ,KAAK,CAAC,KAAK,CAAC,MAAM;YAClB;gBACE,SAAS,EAAE,QAAQ;gBACnB,WAAW,EAAE,KAAK;gBAClB,YAAY,EAAE,KAAK;gBACnB,eAAe,EAAE,KAAK,CAAC,OAAO,CAAC,WAAW;gBAC1C,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,YAAY;gBACjC,QAAQ,EAAE,MAAM;gBAChB,UAAU,EAAE,MAAM;gBAClB,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE,cAAc;aACxB;YACD,QAAQ,IAAI;gBACV,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,kBAAkB;aACxC;SACF;KACF,CAAC;AACJ,CAAC,CAAC;AAtCW,QAAA,SAAS,aAsCpB;AAEK,IAAM,gBAAgB,GAAG,UAAC,KAAgC;IAC/D,OAAO;QACL,SAAS,EAAE,EAAE;QACb,IAAI,EAAE;YACJ;gBACE,MAAM,EAAE,MAAM;gBACd,SAAS,EAAE,MAAM;aAClB;SACF;QACD,IAAI,EAAE,EAAE;QACR,WAAW,EAAE,EAAE;QACf,WAAW,EAAE;YACX;gBACE,eAAe,EAAE,aAAa;aAC/B;SACF;KACF,CAAC;AACJ,CAAC,CAAC;AAjBW,QAAA,gBAAgB,oBAiB3B;AAEK,IAAM,sBAAsB,GAAG,UACpC,MAAa;IAEb,OAAO,UAAC,KAAgC;QACtC,OAAO,wBAAc,CAAC,wBAAgB,CAAC,KAAK,CAAC,EAAE;YAC7C,IAAI,EAAE;gBACJ;oBACE,mDAAmD;oBACnD,UAAU,EAAE,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC;oBACnC,mDAAmD;oBACnD,SAAS,EAAE,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC;iBAClC;aACF;SACF,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC,CAAC;AAfW,QAAA,sBAAsB,0BAejC","sourcesContent":["import { mergeStyleSets, HighContrastSelector } from '../../Styling';\nimport type { IKeytipStyleProps, IKeytipStyles } from './Keytip.types';\nimport type { ICalloutContentStyleProps, ICalloutContentStyles } from '../../Callout';\nimport type { IStyleFunction, Point } from '../../Utilities';\n\nexport const getStyles = (props: IKeytipStyleProps): IKeytipStyles => {\n  const { theme, disabled, visible } = props;\n  return {\n    container: [\n      {\n        backgroundColor: theme.palette.neutralDark,\n      },\n      disabled && {\n        opacity: 0.5,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n            opacity: 1,\n          },\n        },\n      },\n      !visible && {\n        visibility: 'hidden',\n      },\n    ],\n    root: [\n      theme.fonts.medium,\n      {\n        textAlign: 'center',\n        paddingLeft: '3px',\n        paddingRight: '3px',\n        backgroundColor: theme.palette.neutralDark,\n        color: theme.palette.neutralLight,\n        minWidth: '11px',\n        lineHeight: '17px',\n        height: '17px',\n        display: 'inline-block',\n      },\n      disabled && {\n        color: theme.palette.neutralTertiaryAlt,\n      },\n    ],\n  };\n};\n\nexport const getCalloutStyles = (props: ICalloutContentStyleProps): ICalloutContentStyles => {\n  return {\n    container: [],\n    root: [\n      {\n        border: 'none',\n        boxShadow: 'none',\n      },\n    ],\n    beak: [],\n    beakCurtain: [],\n    calloutMain: [\n      {\n        backgroundColor: 'transparent',\n      },\n    ],\n  };\n};\n\nexport const getCalloutOffsetStyles = (\n  offset: Point,\n): IStyleFunction<ICalloutContentStyleProps, ICalloutContentStyles> => {\n  return (props: ICalloutContentStyleProps): ICalloutContentStyles => {\n    return mergeStyleSets(getCalloutStyles(props), {\n      root: [\n        {\n          // eslint-disable-next-line deprecation/deprecation\n          marginLeft: offset.left || offset.x,\n          // eslint-disable-next-line deprecation/deprecation\n          marginTop: offset.top || offset.y,\n        },\n      ],\n    });\n  };\n};\n"]}
{"version":3,"file":"ColorSlider.base.js","sourceRoot":"../src/","sources":["components/ColorPicker/ColorSlider/ColorSlider.base.tsx"],"names":[],"mappings":";;;;AAAA,6BAA+B;AAC/B,gDAQ4B;AAC5B,wDAAuD;AACvD,0DAAiF;AAGjF,IAAM,aAAa,GAAG,8BAAkB,EAA8C,CAAC;AAMvF;;GAEG;AACH;IAAqC,2CAAqD;IAQxF,yBAAY,KAAwB;QAApC,YACE,kBAAM,KAAK,CAAC,SAmBb;QAvBO,kBAAY,GAAmB,EAAE,CAAC;QAClC,WAAK,GAAG,KAAK,CAAC,SAAS,EAAkB,CAAC;QA6G1C,gBAAU,GAAG,UAAC,EAAuB;YAC3C,IAAI,YAAY,GAAG,KAAI,CAAC,KAAK,CAAC;YAC9B,IAAM,QAAQ,GAAG,KAAI,CAAC,SAAS,CAAC;YAChC,IAAM,SAAS,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAEvC,6FAA6F;YAC7F,kEAAkE;YAClE,mDAAmD;YACnD,QAAQ,EAAE,CAAC,KAAK,EAAE;gBAChB,KAAK,oBAAQ,CAAC,IAAI,CAAC,CAAC;oBAClB,YAAY,IAAI,SAAS,CAAC;oBAC1B,MAAM;iBACP;gBACD,KAAK,oBAAQ,CAAC,KAAK,CAAC,CAAC;oBACnB,YAAY,IAAI,SAAS,CAAC;oBAC1B,MAAM;iBACP;gBACD,KAAK,oBAAQ,CAAC,IAAI,CAAC,CAAC;oBAClB,YAAY,GAAG,CAAC,CAAC;oBACjB,MAAM;iBACP;gBACD,KAAK,oBAAQ,CAAC,GAAG,CAAC,CAAC;oBACjB,YAAY,GAAG,QAAQ,CAAC;oBACxB,MAAM;iBACP;gBACD,OAAO,CAAC,CAAC;oBACP,OAAO;iBACR;aACF;YAED,KAAI,CAAC,YAAY,CAAC,EAAE,EAAE,aAAK,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC,CAAC;QACvD,CAAC,CAAC;QAEM,kBAAY,GAAG,UAAC,EAAiC;YACvD,IAAM,GAAG,GAAG,qBAAS,CAAC,KAAW,CAAC,CAAC;YAEnC,IAAI,GAAG,EAAE;gBACP,KAAI,CAAC,YAAY,CAAC,IAAI,CACpB,cAAE,CAAC,GAAG,EAAE,WAAW,EAAE,KAAI,CAAC,YAAwC,EAAE,IAAI,CAAC,EACzE,cAAE,CAAC,GAAG,EAAE,SAAS,EAAE,KAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CACjD,CAAC;aACH;YAED,KAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;QACxB,CAAC,CAAC;QAEM,kBAAY,GAAG,UAAC,EAAiC;YACvD,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE;gBACvB,OAAO;aACR;YAED,IAAM,QAAQ,GAAG,KAAI,CAAC,SAAS,CAAC;YAChC,IAAM,QAAQ,GAAG,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC;YAE5D,IAAM,iBAAiB,GAAG,CAAC,EAAE,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC;YACxE,IAAM,QAAQ,GAAG,aAAK,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,QAAQ,CAAC,EAAE,QAAQ,CAAC,CAAC;YAE3E,KAAI,CAAC,YAAY,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;QAClC,CAAC,CAAC;QAEM,uBAAiB,GAAG;YAC1B,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,EAAE,EAAT,CAAS,CAAC,CAAC;YAChD,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACzB,CAAC,CAAC;QAvKA,kCAAsB,CAAC,KAAI,CAAC,CAAC;QAE7B,4BAAgB,CAAC,aAAa,EAAE,KAAK,EAAE;YACrC,UAAU,EAAE,oBAAoB;YAChC,YAAY,EAAE,cAAc;YAC5B,OAAO,EAAE,MAAM;YACf,QAAQ,EAAE,MAAM;YAChB,QAAQ,EAAE,MAAM;SACjB,CAAC,CAAC;QACH,mDAAmD;QACnD,IAAI,KAAI,CAAC,KAAK,KAAK,KAAK,IAAI,CAAC,CAAC,KAAK,CAAC,YAAY,IAAI,KAAK,CAAC,YAAY,CAAC,EAAE;YACvE,gBAAI,CAAC,sFAAkF,CAAC,CAAC;SAC1F;QAED,KAAI,CAAC,KAAK,GAAG;YACX,YAAY,EAAE,KAAK,CAAC,KAAK,IAAI,CAAC;SAC/B,CAAC;;IACJ,CAAC;IAED,sBAAW,kCAAK;aAAhB;YACE,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QACjC,CAAC;;;OAAA;IAEM,4CAAkB,GAAzB,UAA0B,SAAsC,EAAE,SAAsC;QACtG,iEAAiE;QACjE,oDAAoD;QACpD,IAAI,SAAS,KAAK,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,SAAS,EAAE;YAC9D,IAAI,CAAC,QAAQ,CAAC,EAAE,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;SACnD;IACH,CAAC;IAEM,8CAAoB,GAA3B;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAEM,gCAAM,GAAb;QACE,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAC1B,IAAA,KAQF,IAAI,CAAC,KAAK;QAPZ,mDAAmD;QACnD,YAAY,kBAAA,EACZ,YAAY,kBAAA,EACZ,KAAK,WAAA,EACL,SAAS,eAAA,EACT,MAAM,YAAA,EACN,iBAAgB,EAAhB,SAAS,mBAAG,IAAI,KACJ,CAAC;QACf,IAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC;QAEhC,IAAM,UAAU,GAAG,aAAa,CAAC,MAAO,EAAE;YACxC,KAAK,EAAE,KAAM;YACb,SAAS,WAAA;YACT,IAAI,MAAA;SACL,CAAC,CAAC;QAEH,IAAM,iBAAiB,GAAG,CAAC,GAAG,GAAG,YAAY,CAAC,GAAG,QAAQ,CAAC;QAE1D,OAAO,CACL,6BACE,GAAG,EAAE,IAAI,CAAC,KAAK,EACf,SAAS,EAAE,UAAU,CAAC,IAAI,EAC1B,QAAQ,EAAE,CAAC,EACX,SAAS,EAAE,IAAI,CAAC,UAAU,EAC1B,WAAW,EAAE,IAAI,CAAC,YAAY,EAC9B,IAAI,EAAC,QAAQ,mBACE,YAAY,oBAEX,MAAM,CAAC,YAAY,CAAC,mBACrB,CAAC,mBACD,QAAQ,gBACX,SAAS,uBACF,IAAI;YAEtB,CAAC,CAAC,CAAC,YAAY,IAAI,YAAY,CAAC,IAAI,CACnC,6BACE,SAAS,EAAE,UAAU,CAAC,aAAa;gBACnC,oEAAoE;gBACpE,KAAK,EACH,YAAY;oBACV,CAAC,CAAC;wBACE,UAAU,EACR,IAAI,KAAK,cAAc;4BACrB,CAAC,CAAC,gCAA8B,YAAY,mBAAgB;4BAC5D,CAAC,CAAC,6CAA2C,YAAY,MAAG;qBACjE;oBACH,CAAC,CAAC,YAAY,GAElB,CACH;YACD,6BAAK,SAAS,EAAE,UAAU,CAAC,WAAW,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,iBAAiB,GAAG,GAAG,EAAE,GAAI,CAChF,CACP,CAAC;IACJ,CAAC;IAED,sBAAY,kCAAK;aAAjB;YACE,mDAAmD;YAC7C,IAAA,KAAgD,IAAI,CAAC,KAAK,EAAxD,OAAO,aAAA,EAAE,YAAgC,EAAhC,IAAI,mBAAG,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,KAAe,CAAC;YACjE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAED,sBAAY,sCAAS;aAArB;YACE,OAAO,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC,sBAAa,CAAC,CAAC,CAAC,wBAAe,CAAC;QAChE,CAAC;;;OAAA;IAmEO,sCAAY,GAApB,UAAqB,EAAuE,EAAE,QAAgB;QAC5G,IAAI,QAAQ,KAAK,IAAI,CAAC,KAAK,EAAE;YAC3B,OAAO;SACR;QAEO,IAAA,QAAQ,GAAK,IAAI,CAAC,KAAK,SAAf,CAAgB;QAEhC,IAAI,QAAQ,EAAE;YACZ,QAAQ,CAAC,EAA4C,EAAE,QAAQ,CAAC,CAAC;SAClE;QAED,IAAI,CAAC,EAAE,CAAC,gBAAgB,EAAE;YACxB,IAAI,CAAC,QAAQ,CAAC;gBACZ,YAAY,EAAE,QAAQ;aACvB,CAAC,CAAC;YACH,EAAE,CAAC,cAAc,EAAE,CAAC;SACrB;IACH,CAAC;IApMa,4BAAY,GAA+B;QACvD,KAAK,EAAE,CAAC;KACT,CAAC;IAmMJ,sBAAC;CAAA,AAtMD,CAAqC,KAAK,CAAC,SAAS,GAsMnD;AAtMY,0CAAe","sourcesContent":["import * as React from 'react';\nimport {\n  classNamesFunction,\n  initializeComponentRef,\n  on,\n  KeyCodes,\n  getWindow,\n  warnDeprecations,\n  warn,\n} from '../../../Utilities';\nimport { clamp } from '../../../utilities/color/clamp';\nimport { MAX_COLOR_HUE, MAX_COLOR_ALPHA } from '../../../utilities/color/consts';\nimport type { IColorSliderProps, IColorSliderStyleProps, IColorSliderStyles, IColorSlider } from './ColorSlider.types';\n\nconst getClassNames = classNamesFunction<IColorSliderStyleProps, IColorSliderStyles>();\n\nexport interface IColorSliderState {\n  currentValue: number;\n}\n\n/**\n * {@docCategory ColorPicker}\n */\nexport class ColorSliderBase extends React.Component<IColorSliderProps, IColorSliderState> implements IColorSlider {\n  public static defaultProps: Partial<IColorSliderProps> = {\n    value: 0,\n  };\n\n  private _disposables: (() => void)[] = [];\n  private _root = React.createRef<HTMLDivElement>();\n\n  constructor(props: IColorSliderProps) {\n    super(props);\n\n    initializeComponentRef(this);\n\n    warnDeprecations('ColorSlider', props, {\n      thumbColor: 'styles.sliderThumb',\n      overlayStyle: 'overlayColor',\n      isAlpha: 'type',\n      maxValue: 'type',\n      minValue: 'type',\n    });\n    // eslint-disable-next-line deprecation/deprecation\n    if (this._type !== 'hue' && !(props.overlayColor || props.overlayStyle)) {\n      warn(`ColorSlider: 'overlayColor' is required when 'type' is \"alpha\" or \"transparency\"`);\n    }\n\n    this.state = {\n      currentValue: props.value || 0,\n    };\n  }\n\n  public get value(): number {\n    return this.state.currentValue;\n  }\n\n  public componentDidUpdate(prevProps: Readonly<IColorSliderProps>, prevState: Readonly<IColorSliderState>): void {\n    // if props changed (as opposed to a state update), set the value\n    // TODO: switch to strict controlled pattern instead\n    if (prevProps !== this.props && this.props.value !== undefined) {\n      this.setState({ currentValue: this.props.value });\n    }\n  }\n\n  public componentWillUnmount() {\n    this._disposeListeners();\n  }\n\n  public render(): JSX.Element {\n    const type = this._type;\n    const maxValue = this._maxValue;\n    const {\n      // eslint-disable-next-line deprecation/deprecation\n      overlayStyle,\n      overlayColor,\n      theme,\n      className,\n      styles,\n      ariaLabel = type,\n    } = this.props;\n    const currentValue = this.value;\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      type,\n    });\n\n    const currentPercentage = (100 * currentValue) / maxValue;\n\n    return (\n      <div\n        ref={this._root}\n        className={classNames.root}\n        tabIndex={0}\n        onKeyDown={this._onKeyDown}\n        onMouseDown={this._onMouseDown}\n        role=\"slider\"\n        aria-valuenow={currentValue}\n        // Narrator doesn't read aria-valuenow properly\n        aria-valuetext={String(currentValue)}\n        aria-valuemin={0}\n        aria-valuemax={maxValue}\n        aria-label={ariaLabel}\n        data-is-focusable={true}\n      >\n        {!!(overlayColor || overlayStyle) && (\n          <div\n            className={classNames.sliderOverlay}\n            // this isn't included in getStyles because it may change frequently\n            style={\n              overlayColor\n                ? {\n                    background:\n                      type === 'transparency'\n                        ? `linear-gradient(to right, #${overlayColor}, transparent)`\n                        : `linear-gradient(to right, transparent, #${overlayColor})`,\n                  }\n                : overlayStyle\n            }\n          />\n        )}\n        <div className={classNames.sliderThumb} style={{ left: currentPercentage + '%' }} />\n      </div>\n    );\n  }\n\n  private get _type(): IColorSliderProps['type'] {\n    // eslint-disable-next-line deprecation/deprecation\n    const { isAlpha, type = isAlpha ? 'alpha' : 'hue' } = this.props;\n    return type;\n  }\n\n  private get _maxValue(): number {\n    return this._type === 'hue' ? MAX_COLOR_HUE : MAX_COLOR_ALPHA;\n  }\n\n  private _onKeyDown = (ev: React.KeyboardEvent): void => {\n    let currentValue = this.value;\n    const maxValue = this._maxValue;\n    const increment = ev.shiftKey ? 10 : 1;\n\n    // Intentionally DO NOT flip the color picker in RTL: its orientation is not very meaningful,\n    // and getting all the math and styles flipped correctly is tricky\n    // eslint-disable-next-line deprecation/deprecation\n    switch (ev.which) {\n      case KeyCodes.left: {\n        currentValue -= increment;\n        break;\n      }\n      case KeyCodes.right: {\n        currentValue += increment;\n        break;\n      }\n      case KeyCodes.home: {\n        currentValue = 0;\n        break;\n      }\n      case KeyCodes.end: {\n        currentValue = maxValue;\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n\n    this._updateValue(ev, clamp(currentValue, maxValue));\n  };\n\n  private _onMouseDown = (ev: React.MouseEvent<HTMLElement>): void => {\n    const win = getWindow(this as any);\n\n    if (win) {\n      this._disposables.push(\n        on(win, 'mousemove', this._onMouseMove as (ev: MouseEvent) => void, true),\n        on(win, 'mouseup', this._disposeListeners, true),\n      );\n    }\n\n    this._onMouseMove(ev);\n  };\n\n  private _onMouseMove = (ev: MouseEvent | React.MouseEvent): void => {\n    if (!this._root.current) {\n      return;\n    }\n\n    const maxValue = this._maxValue;\n    const rectSize = this._root.current.getBoundingClientRect();\n\n    const currentPercentage = (ev.clientX - rectSize.left) / rectSize.width;\n    const newValue = clamp(Math.round(currentPercentage * maxValue), maxValue);\n\n    this._updateValue(ev, newValue);\n  };\n\n  private _disposeListeners = (): void => {\n    this._disposables.forEach(dispose => dispose());\n    this._disposables = [];\n  };\n\n  private _updateValue(ev: MouseEvent | KeyboardEvent | React.MouseEvent | React.KeyboardEvent, newValue: number) {\n    if (newValue === this.value) {\n      return;\n    }\n\n    const { onChange } = this.props;\n\n    if (onChange) {\n      onChange(ev as React.MouseEvent | React.KeyboardEvent, newValue);\n    }\n\n    if (!ev.defaultPrevented) {\n      this.setState({\n        currentValue: newValue,\n      });\n      ev.preventDefault();\n    }\n  }\n}\n"]}
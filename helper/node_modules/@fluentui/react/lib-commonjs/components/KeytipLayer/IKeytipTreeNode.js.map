{"version":3,"file":"IKeytipTreeNode.js","sourceRoot":"../src/","sources":["components/KeytipLayer/IKeytipTreeNode.ts"],"names":[],"mappings":"","sourcesContent":["export interface IKeytipTreeNode {\n  /**\n   * ID of the <Keytip> DOM element. Needed to locate the correct keytip in the KeytipLayer's 'keytip' state array\n   */\n  id: string;\n\n  /**\n   * KeySequence that invokes this KeytipTreeNode's onExecute function\n   */\n  keySequences: string[];\n\n  /**\n   * Overflow set sequence for this keytip\n   */\n  overflowSetSequence?: string[];\n\n  /**\n   * Control's execute function for when keytip is invoked, passed from the component to the Manager in the IKeytipProps\n   */\n  onExecute?: (executeTarget: HTMLElement | null, target: HTMLElement | null) => void;\n\n  /**\n   * Function to execute when we return to this keytip\n   */\n  onReturn?: (executeTarget: HTMLElement | null, target: HTMLElement | null) => void;\n\n  /**\n   * List of keytip IDs that should become visible when this keytip is pressed, can be empty\n   */\n  children: string[];\n\n  /**\n   * Parent keytip ID\n   */\n  parent: string;\n\n  /**\n   * Whether or not this keytip will have children keytips that are dynamically created (DOM is generated on\n   * keytip activation). Common cases are keytips in a menu or modal.\n   */\n  hasDynamicChildren?: boolean;\n\n  /**\n   * Whether or not this keytip belongs to a component that has a menu\n   * Keytip mode will stay on when a menu is opened, even if the items in that menu have no keytips\n   */\n  hasMenu?: boolean;\n\n  /**\n   * T/F if this keytip's component is currently disabled\n   */\n  disabled?: boolean;\n\n  /**\n   * T/F if this keytip is a persisted keytip\n   */\n  persisted?: boolean;\n\n  /**\n   * Whether or not this keytip belongs to a component that is in an overflow menu\n   * and also has a menu\n   */\n  hasOverflowSubMenu?: boolean;\n}\n"]}
{"version":3,"file":"DocumentCardTitle.styles.js","sourceRoot":"../src/","sources":["components/DocumentCard/DocumentCardTitle.styles.ts"],"names":[],"mappings":";;;AAAA,yCAAwE;AACxE,6CAA0D;AAG7C,QAAA,iCAAiC,GAAG;IAC/C,IAAI,EAAE,sBAAsB;CAC7B,CAAC;AAEK,IAAM,SAAS,GAAG,UAAC,KAAmC;;IACnD,IAAA,KAAK,GAAsC,KAAK,MAA3C,EAAE,SAAS,GAA2B,KAAK,UAAhC,EAAE,oBAAoB,GAAK,KAAK,qBAAV,CAAW;IACjD,IAAA,OAAO,GAAqB,KAAK,QAA1B,EAAE,KAAK,GAAc,KAAK,MAAnB,EAAE,OAAO,GAAK,KAAK,QAAV,CAAW;IAE1C,IAAM,UAAU,GAAG,6BAAmB,CAAC,yCAAiC,EAAE,KAAK,CAAC,CAAC;IAEjF,OAAO;QACL,IAAI,EAAE;YACJ,UAAU,CAAC,IAAI;YACf,oBAAoB,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK;YACjD;gBACE,OAAO,EAAE,UAAU;gBACnB,OAAO,EAAE,OAAO;gBAChB,QAAQ,EAAE,QAAQ;gBAClB,QAAQ,EAAE,UAAU;gBACpB,QAAQ,EAAE,YAAY;gBACtB,MAAM,EAAE,oBAAoB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM;gBAC9C,UAAU,EAAE,oBAAoB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM;gBAClD,KAAK,EAAE,oBAAoB,CAAC,CAAC,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc;gBAC/E,SAAS;wBACP,QAAQ,EAAE;4BACR,OAAO,EAAE,WAAW;yBACrB;;oBACD,GAAC,MAAI,mCAAuB,aAAU,IAAG,4BAAkB,CAAC,OAAO,CAAC,gBAAgB,EAAE,OAAO,CAAC,cAAc,CAAC;uBAC9G;aACF;YACD,SAAS;SACV;KACF,CAAC;AACJ,CAAC,CAAC;AA7BW,QAAA,SAAS,aA6BpB","sourcesContent":["import { getGlobalClassNames, getInputFocusStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nimport type { IDocumentCardTitleStyleProps, IDocumentCardTitleStyles } from './DocumentCardTitle.types';\n\nexport const DocumentCardTitleGlobalClassNames = {\n  root: 'ms-DocumentCardTitle',\n};\n\nexport const getStyles = (props: IDocumentCardTitleStyleProps): IDocumentCardTitleStyles => {\n  const { theme, className, showAsSecondaryTitle } = props;\n  const { palette, fonts, effects } = theme;\n\n  const classNames = getGlobalClassNames(DocumentCardTitleGlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      showAsSecondaryTitle ? fonts.medium : fonts.large,\n      {\n        padding: '8px 16px',\n        display: 'block',\n        overflow: 'hidden',\n        position: 'relative',\n        wordWrap: 'break-word',\n        height: showAsSecondaryTitle ? '45px' : '38px',\n        lineHeight: showAsSecondaryTitle ? '18px' : '21px',\n        color: showAsSecondaryTitle ? palette.neutralSecondary : palette.neutralPrimary,\n        selectors: {\n          ':focus': {\n            outline: '0px solid',\n          },\n          [`.${IsFocusVisibleClassName} &:focus`]: getInputFocusStyle(palette.neutralSecondary, effects.roundedCorner2),\n        },\n      },\n      className,\n    ],\n  };\n};\n"]}
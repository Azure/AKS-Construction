{"version":3,"file":"DocumentCardPreview.types.js","sourceRoot":"../src/","sources":["components/DocumentCard/DocumentCardPreview.types.ts"],"names":[],"mappings":"","sourcesContent":["import { ImageFit } from '../../Image';\nimport type { IIconProps } from '../../Icon';\nimport type { ILinkProps } from '../../Link';\nimport type { IStyle, ITheme } from '../../Styling';\nimport type { IBaseProps, IRefObject, IStyleFunctionOrObject } from '../../Utilities';\n\n/**\n * {@docCategory DocumentCard}\n */\nexport interface IDocumentCardPreview {}\n\n/**\n * {@docCategory DocumentCard}\n */\nexport interface IDocumentCardPreviewProps extends IBaseProps<{}> {\n  /**\n   * Gets the component ref.\n   */\n  componentRef?: IRefObject<IDocumentCardPreview>;\n\n  /**\n   * One or more preview images to display.\n   */\n  previewImages: IDocumentCardPreviewImage[];\n\n  /**\n   * The function return string that will describe the number of overflow documents.\n   * such as  (overflowCount: number) =\\> `+${ overflowCount } more`,\n   */\n  getOverflowDocumentCountText?: (overflowCount: number) => string;\n\n  /**\n   * Maximum number of document previews to display\n   * @default 3\n   */\n  maxDisplayCount?: number;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules\n   */\n  styles?: IStyleFunctionOrObject<IDocumentCardPreviewStyleProps, IDocumentCardPreviewStyles>;\n\n  /**\n   * Theme provided by HOC.\n   */\n  theme?: ITheme;\n\n  /**\n   * Optional override class name\n   */\n  className?: string;\n}\n\n/**\n * {@docCategory DocumentCard}\n */\nexport interface IDocumentCardPreviewImage {\n  /**\n   * Gets the component ref.\n   */\n  componentRef?: IRefObject<{}>;\n\n  /**\n   * File name for the document this preview represents.\n   */\n  name?: string;\n\n  /**\n   * URL to view the file.\n   * @deprecated Use `href` inside of `linkProps` instead.\n   */\n  url?: string;\n\n  /**\n   * Props to pass to Link component\n   */\n  linkProps?: ILinkProps;\n\n  /**\n   * Path to the preview image.\n   */\n  previewImageSrc?: string;\n\n  /**\n   * @deprecated To be removed at \\>= v2.0.0.\n   */\n  errorImageSrc?: string;\n\n  /**\n   * Path to the icon associated with this document type.\n   *\n   */\n  iconSrc?: string;\n\n  /**\n   * If provided, forces the preview image to be this width.\n   */\n  width?: number;\n\n  /**\n   * If provided, forces the preview image to be this height.\n   */\n  height?: number;\n\n  /**\n   * Used to determine how to size the image to fit the dimensions of the component.\n   * If both dimensions are provided, then the image is fit using ImageFit.scale, otherwise ImageFit.none is used.\n   */\n  imageFit?: ImageFit;\n\n  /**\n   * Hex color value of the line below the preview, which should correspond to the document type.\n   *\n   * @deprecated To be removed at \\>= v5.0.0.\n   */\n  accentColor?: string;\n\n  /**\n   * The props for the preview icon.\n   * If provided, icon will be rendered instead of image.\n   */\n  previewIconProps?: IIconProps;\n\n  /**\n   * The props for the preview icon container classname.\n   * If provided, icon container classname will be used..\n   */\n  previewIconContainerClass?: string;\n}\n\n/**\n * {@docCategory DocumentCard}\n */\nexport interface IDocumentCardPreviewStyleProps {\n  /**\n   * Accept theme prop.\n   */\n  theme: ITheme;\n\n  /**\n   * Optional override class name\n   */\n  className?: string;\n\n  /**\n   * Is it a list of files rather than a preview image?\n   */\n  isFileList?: boolean;\n}\n\n/**\n * {@docCategory DocumentCard}\n */\nexport interface IDocumentCardPreviewStyles {\n  root: IStyle;\n  previewIcon: IStyle;\n  icon: IStyle;\n  fileList: IStyle;\n  fileListIcon: IStyle;\n  fileListLink: IStyle;\n  fileListOverflowText: IStyle;\n}\n"]}
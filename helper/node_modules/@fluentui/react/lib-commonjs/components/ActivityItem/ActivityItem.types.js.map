{"version":3,"file":"ActivityItem.types.js","sourceRoot":"../src/","sources":["components/ActivityItem/ActivityItem.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport type { IStyle } from '../../Styling';\nimport type { IRenderFunction } from '../../Utilities';\nimport type { IPersonaSharedProps } from '../../Persona';\n\n/**\n * {@docCategory ActivityItem}\n */\nexport interface IActivityItemProps extends React.AllHTMLAttributes<HTMLElement> {\n  /**\n   * An element describing the activity that took place. If no `activityDescription`, `activityDescriptionText`, or\n   * `onRenderActivityDescription` are included, no description of the activity is shown.\n   */\n  activityDescription?: React.ReactNode[] | React.ReactNode;\n\n  /**\n   * Text describing the activity that occurred and naming the people involved in it.\n   * @deprecated Use `activityDescription` instead.\n   */\n  activityDescriptionText?: string;\n\n  /**\n   * An element containing an icon shown next to the activity item.\n   */\n  activityIcon?: React.ReactNode;\n\n  /**\n   * If `activityIcon` is not set, the personas in this array will be used as the icon for the this activity item.\n   */\n  activityPersonas?: IPersonaSharedProps[];\n\n  /**\n   * An element containing the text of comments or \\@mention messages.\n   * If no `comments`, `commentText`, or `onRenderComments` are included, no comments are shown.\n   */\n  comments?: React.ReactNode[] | React.ReactNode;\n\n  /**\n   * Text of comments or \\@mention messages.\n   * @deprecated Use `comments` instead.\n   */\n  commentText?: string;\n\n  /**\n   * Indicated if the compact styling should be used.\n   */\n  isCompact?: boolean;\n\n  /**\n   * A renderer for the description of the current activity.\n   */\n  onRenderActivityDescription?: IRenderFunction<IActivityItemProps>;\n\n  /**\n   * A renderer that adds the text of a comment below the activity description.\n   */\n  onRenderComments?: IRenderFunction<IActivityItemProps>;\n\n  /**\n   * A renderer to create the icon next to the activity item.\n   */\n  onRenderIcon?: IRenderFunction<IActivityItemProps>;\n\n  /**\n   * Custom renderer for a time stamp. If not included, `timeStamp` is shown as plain text below the activity.\n   */\n  onRenderTimeStamp?: IRenderFunction<IActivityItemProps>;\n\n  /**\n   * Optional styling for the elements within the activity item.\n   */\n  styles?: IActivityItemStyles;\n\n  /**\n   * Element shown as a timestamp on this activity. If not included, no timestamp is shown.\n   */\n  timeStamp?: string | React.ReactNode[] | React.ReactNode;\n\n  /**\n   * Beacon color one\n   */\n  beaconColorOne?: string;\n\n  /**\n   * Beacon color two\n   */\n  beaconColorTwo?: string;\n\n  /**\n   * Enables/disables the beacon that radiates from the center of the center of the activity icon.\n   * Signals an activity has started.\n   * @defaultvalue false\n   */\n  animateBeaconSignal?: boolean;\n}\n\n/**\n * {@docCategory ActivityItem}\n */\nexport interface IActivityItemStyles {\n  /**\n   * Styles applied to the root activity item container.\n   */\n  root?: IStyle;\n\n  /**\n   * Styles applied to the root activity item container.\n   */\n  pulsingBeacon?: IStyle;\n\n  /**\n   * Styles applied to the main container of the activity's description.\n   */\n  activityContent?: IStyle;\n\n  /**\n   * Styles applied to the persona of the user that did this activity.\n   */\n  activityPersona?: IStyle;\n\n  /**\n   * Styles applied to the activity's description.\n   */\n  activityText?: IStyle;\n\n  /**\n   * Styles applied to the icon indicating the type of the activity. Only shown when personas are unavailable.\n   */\n  activityTypeIcon?: IStyle;\n\n  /**\n   * Styles applied to the text of comments.\n   */\n  commentText?: IStyle;\n\n  /**\n   * Styles applied to personas when two users are involved in a single activity.\n   */\n  doublePersona?: IStyle;\n\n  /**\n   * Styles applied to root in the compact variant.\n   */\n  isCompactRoot?: IStyle;\n\n  /**\n   * Styles applied to personas and icons in the compact variant.\n   */\n  isCompactIcon?: IStyle;\n\n  /**\n   * Styles applied to main text container in the compact variant.\n   */\n  isCompactContent?: IStyle;\n\n  /**\n   * Styles applied to personas in the compact variant.\n   */\n  isCompactPersona?: IStyle;\n\n  /**\n   * Styles applied to a wrapper around personas in the compact variant.\n   */\n  isCompactPersonaContainer?: IStyle;\n\n  /**\n   * Styles applied to the container of the persona image or activity type icon.\n   */\n  personaContainer?: IStyle;\n\n  /**\n   * Styles applied to the timestamp at the end of each activity item.\n   */\n  timeStamp?: IStyle;\n\n  /**\n   * Styles applied to the timestamp in compact mode.\n   * This can occur if a host overrides the render behavior to force the timestamp to render.\n   */\n  isCompactTimeStamp?: IStyle;\n}\n"]}
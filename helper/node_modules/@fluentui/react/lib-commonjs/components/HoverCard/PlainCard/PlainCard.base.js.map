{"version":3,"file":"PlainCard.base.js","sourceRoot":"../src/","sources":["components/HoverCard/PlainCard/PlainCard.base.tsx"],"names":[],"mappings":";;;;AAAA,6BAA+B;AAE/B,gDAA0F;AAC1F,0DAAyD;AAGzD,IAAM,aAAa,GAAG,8BAAkB,EAA0C,CAAC;AAEnF;IAAmC,yCAAoC;IAGrE,uBAAY,KAAsB;QAAlC,YACE,kBAAM,KAAK,CAAC,SAGb;QAmBO,gBAAU,GAAG,UAAC,EAAoC;YACxD,mDAAmD;YACnD,IAAI,EAAE,CAAC,KAAK,KAAK,oBAAQ,CAAC,MAAM,EAAE;gBAChC,KAAI,CAAC,KAAK,CAAC,OAAO,IAAI,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;aAC9C;QACH,CAAC,CAAC;QAzBA,kCAAsB,CAAC,KAAI,CAAC,CAAC;;IAC/B,CAAC;IAEM,8BAAM,GAAb;QACQ,IAAA,KAA+B,IAAI,CAAC,KAAK,EAAvC,MAAM,YAAA,EAAE,KAAK,WAAA,EAAE,SAAS,eAAe,CAAC;QAEhD,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,MAAO,EAAE;YACxC,KAAK,EAAE,KAAM;YACb,SAAS,WAAA;SACV,CAAC,CAAC;QAEH,IAAM,OAAO,GAAgB,CAC3B,6BAAK,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,IAChG,IAAI,CAAC,KAAK,CAAC,iBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CACjD,CACP,CAAC;QAEF,OAAO,oBAAC,yBAAW,uBAAK,IAAI,CAAC,KAAK,IAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC;IAC7F,CAAC;IAQH,oBAAC;AAAD,CAAC,AAhCD,CAAmC,KAAK,CAAC,SAAS,GAgCjD;AAhCY,sCAAa","sourcesContent":["import * as React from 'react';\n\nimport { classNamesFunction, initializeComponentRef, KeyCodes } from '../../../Utilities';\nimport { CardCallout } from '../CardCallout/CardCallout';\nimport type { IPlainCardProps, IPlainCardStyles, IPlainCardStyleProps } from './PlainCard.types';\n\nconst getClassNames = classNamesFunction<IPlainCardStyleProps, IPlainCardStyles>();\n\nexport class PlainCardBase extends React.Component<IPlainCardProps, {}> {\n  private _classNames: { [key in keyof IPlainCardStyles]: string };\n\n  constructor(props: IPlainCardProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const { styles, theme, className } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n    });\n\n    const content: JSX.Element = (\n      <div onMouseEnter={this.props.onEnter} onMouseLeave={this.props.onLeave} onKeyDown={this._onKeyDown}>\n        {this.props.onRenderPlainCard!(this.props.renderData)}\n      </div>\n    );\n\n    return <CardCallout {...this.props} content={content} className={this._classNames.root} />;\n  }\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.escape) {\n      this.props.onLeave && this.props.onLeave(ev);\n    }\n  };\n}\n"]}
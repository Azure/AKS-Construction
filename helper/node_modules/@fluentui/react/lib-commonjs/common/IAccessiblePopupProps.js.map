{"version":3,"file":"IAccessiblePopupProps.js","sourceRoot":"../src/","sources":["common/IAccessiblePopupProps.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * {@docCategory IAccessiblePopupProps}\n */\nexport interface IAccessiblePopupProps {\n  /**\n   * Sets the element to focus on when exiting the control's FocusTrapZone.\n   * @defaultvalue The `element.target` that triggered the control opening.\n   */\n  elementToFocusOnDismiss?: HTMLElement;\n\n  /**\n   * If false (the default), the control's FocusTrapZone will restore focus to the element which activated it\n   * once the trap zone is unmounted or disabled. Set to true to disable this behavior.\n   * @defaultvalue false\n   */\n  disableRestoreFocus?: boolean;\n\n  /**\n   * @deprecated Use `disableRestoreFocus` (it has the same behavior and a clearer name).\n   */\n  ignoreExternalFocusing?: boolean;\n\n  /**\n   * Whether control should force focus inside its focus trap zone.\n   * @defaultvalue true\n   */\n  forceFocusInsideTrap?: boolean;\n\n  /**\n   * Class name (not actual selector) for first focusable item. Do not append a dot.\n   */\n  firstFocusableSelector?: string | (() => string);\n\n  /**\n   * Aria label on close button.\n   */\n  closeButtonAriaLabel?: string;\n\n  /**\n   * Whether this control will allow clicks outside its FocusTrapZone.\n   * @defaultvalue false\n   */\n  isClickableOutsideFocusTrap?: boolean;\n}\n"]}
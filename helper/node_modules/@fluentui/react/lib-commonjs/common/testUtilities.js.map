{"version":3,"file":"testUtilities.js","sourceRoot":"../src/","sources":["common/testUtilities.ts"],"names":[],"mappings":";;;AACA,iCAA6C;AAE7C,oCAAsC;AACtC,qDAAuD;AAEvD,SAAgB,SAAS,CAAC,OAA+B,EAAE,SAAiB;IAC1E,OAAO,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,UAAC,IAA4B,IAAK,OAAA,OAAO,IAAI,CAAC,IAAI,EAAE,KAAK,QAAQ,EAA/B,CAA+B,CAAC,CAAC;AAChH,CAAC;AAFD,8BAEC;AAED,SAAgB,WAAW,CAAC,OAA+B,EAAE,SAAiB,EAAE,CAAS;IACvF,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC;AAFD,kCAEC;AAED,SAAgB,SAAS,CAAC,OAA+B,EAAE,SAAiB;IAC1E,WAAW,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;AACrC,CAAC;AAFD,8BAEC;AAED,SAAgB,aAAa,CAAC,OAA+B,EAAE,SAAiB;IAC9E,WAAW,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;AACrC,CAAC;AAFD,sCAEC;AAED,oEAAoE;AACpE,SAAgB,KAAK,CAAC,WAAmB;IACvC,OAAO,IAAI,OAAO,CAAO,UAAA,OAAO,IAAI,OAAA,UAAU,CAAC,OAAO,EAAE,WAAW,CAAC,EAAhC,CAAgC,CAAC,CAAC;AACxE,CAAC;AAFD,sBAEC;AAED;;;;GAIG;AACH,SAAgB,aAAa,CAC3B,OAA8B;IAE9B,IAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC7C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAClC,OAAO,cAAK,CAAC,OAAO,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC;AAC9C,CAAC;AAND,sCAMC;AAED,SAAgB,kBAAkB,CAAC,OAAgC;IACjE,IAAM,SAAS,GAAG,cAAc,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;IAC7D,IAAM,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC,SAAgC,CAAC,CAAC;IAC3E,OAAO,WAA0B,CAAC;AACpC,CAAC;AAJD,gDAIC;AAED,SAAgB,SAAS,CAAC,WAAwB;IAAxB,4BAAA,EAAA,gBAAwB;IAChD,IAAM,MAAM,GAAgB,EAAE,KAAK,EAAE,WAAW,EAAsB,CAAC;IACvE,OAAO,EAAE,MAAM,QAAA,EAAE,CAAC;AACpB,CAAC;AAHD,8BAGC;AAED;;;GAGG;AACH,SAAgB,aAAa;IAC3B,uGAAuG;IACvG,OAAO,IAAI,OAAO,CAAO,UAAA,OAAO,IAAI,OAAA,YAAY,CAAC,OAAO,CAAC,EAArB,CAAqB,CAAC,CAAC;AAC7D,CAAC;AAHD,sCAGC;AAED;;GAEG;AACH,SAAgB,qBAAqB,CAAC,OAAoB;IACxD,IAAI,EAAE,GAAuB,OAAO,CAAC;IACrC,OAAO,EAAE,EAAE;QACT,MAAM,CAAC,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACxD,EAAE,GAAG,EAAE,CAAC,aAAa,CAAC;KACvB;AACH,CAAC;AAND,sDAMC","sourcesContent":["import * as React from 'react';\nimport { ReactWrapper, mount } from 'enzyme';\nimport { Component } from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as ReactTestUtils from 'react-dom/test-utils';\n\nexport function findNodes(wrapper: ReactWrapper<any, any>, className: string): ReactWrapper<any, any> {\n  return wrapper.find(className).filterWhere((node: ReactWrapper<any, any>) => typeof node.type() === 'string');\n}\n\nexport function expectNodes(wrapper: ReactWrapper<any, any>, className: string, n: number): void {\n  expect(findNodes(wrapper, className).length).toEqual(n);\n}\n\nexport function expectOne(wrapper: ReactWrapper<any, any>, className: string): void {\n  expectNodes(wrapper, className, 1);\n}\n\nexport function expectMissing(wrapper: ReactWrapper<any, any>, className: string): void {\n  expectNodes(wrapper, className, 0);\n}\n\n/** @deprecated Use fake timers and `jest.runAllTimers()` instead */\nexport function delay(millisecond: number): Promise<void> {\n  return new Promise<void>(resolve => setTimeout(resolve, millisecond));\n}\n\n/**\n * Mounts the element attached to a child of document.body. This is primarily for tests involving\n * event handlers (which don't work right unless the element is attached).\n * @deprecated Use `safeMount` from `@fluentui/test-utilities` instead\n */\nexport function mountAttached<C extends Component, P = C['props'], S = C['state']>(\n  element: React.ReactElement<P>,\n): ReactWrapper<P, S, C> {\n  const parent = document.createElement('div');\n  document.body.appendChild(parent);\n  return mount(element, { attachTo: parent });\n}\n\nexport function renderIntoDocument(element: React.ReactElement<any>): HTMLElement {\n  const component = ReactTestUtils.renderIntoDocument(element);\n  const renderedDOM = ReactDOM.findDOMNode(component as React.ReactInstance);\n  return renderedDOM as HTMLElement;\n}\n\nexport function mockEvent(targetValue: string = ''): ReactTestUtils.SyntheticEventData {\n  const target: EventTarget = { value: targetValue } as HTMLInputElement;\n  return { target };\n}\n\n/**\n * Hack for forcing Jest to run pending promises\n * https://github.com/facebook/jest/issues/2157#issuecomment-279171856\n */\nexport function flushPromises() {\n  // TODO: in jest 27, change to `new Promise(process.nextTick)` per https://stackoverflow.com/a/51045733\n  return new Promise<void>(resolve => setImmediate(resolve));\n}\n\n/**\n * Verify that the given element and its parents do NOT have `aria-hidden` set.\n */\nexport function expectNoHiddenParents(element: HTMLElement) {\n  let el: HTMLElement | null = element;\n  while (el) {\n    expect(el.getAttribute('aria-hidden')).not.toBe('true');\n    el = el.parentElement;\n  }\n}\n"]}
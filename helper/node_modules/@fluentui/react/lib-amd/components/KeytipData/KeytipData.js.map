{"version":3,"file":"KeytipData.js","sourceRoot":"../src/","sources":["components/KeytipData/KeytipData.tsx"],"names":[],"mappings":";;;;IAMA;;;OAGG;IACI,IAAM,UAAU,GAAqE,UAAA,KAAK;;QACvF,IAAA,QAAQ,GAAyB,KAAK,SAA9B,EAAK,eAAe,kBAAK,KAAK,EAAxC,YAAgC,CAAF,CAAW;QACzC,IAAA,KAAgC,6BAAa,CAAC,eAAe,CAAC,EAA5D,QAAQ,cAAA,EAAE,eAAe,qBAAmC,CAAC;QAErE,OAAO,QAAQ;YACb,GAAC,sBAAc,IAAG,QAAQ;YAC1B,GAAC,8BAAsB,IAAG,QAAQ;YAClC,sBAAkB,GAAE,eAAe;gBACnC,CAAC;IACL,CAAC,CAAC;IATW,QAAA,UAAU,cASrB","sourcesContent":["import * as React from 'react';\nimport { DATAKTP_TARGET, DATAKTP_EXECUTE_TARGET } from '../../utilities/keytips/index';\nimport { useKeytipData } from './useKeytipData';\nimport type { IRenderComponent } from '../../Utilities';\nimport type { IKeytipDataProps } from './KeytipData.types';\n\n/**\n * A small element to help the target component correctly read out its aria-describedby for its Keytip\n * {@docCategory Keytips}\n */\nexport const KeytipData: React.FunctionComponent<IKeytipDataProps & IRenderComponent<{}>> = props => {\n  const { children, ...keytipDataProps } = props;\n  const { keytipId, ariaDescribedBy } = useKeytipData(keytipDataProps);\n\n  return children({\n    [DATAKTP_TARGET]: keytipId,\n    [DATAKTP_EXECUTE_TARGET]: keytipId,\n    'aria-describedby': ariaDescribedBy,\n  });\n};\n"]}
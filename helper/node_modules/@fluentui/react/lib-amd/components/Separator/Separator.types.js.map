{"version":3,"file":"Separator.types.js","sourceRoot":"../src/","sources":["components/Separator/Separator.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport type { IStyleFunctionOrObject } from '../../Utilities';\nimport type { IStyle, ITheme } from '../../Styling';\n\n/**\n * {@docCategory Separator}\n */\nexport interface ISeparator {}\n\n/**\n * {@docCategory Separator}\n */\nexport interface ISeparatorProps extends React.HTMLAttributes<HTMLDivElement>, React.RefAttributes<HTMLDivElement> {\n  /**\n   * Theme (provided through customization.)\n   */\n  theme?: ITheme;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<ISeparatorStyleProps, ISeparatorStyles>;\n\n  /**\n   * Whether the element is a vertical separator.\n   */\n  vertical?: boolean;\n\n  /**\n   * Where the content should be aligned in the separator.\n   * @defaultValue 'center'\n   */\n  alignContent?: 'start' | 'center' | 'end';\n}\n\n/**\n * {@docCategory Separator}\n */\nexport type ISeparatorStyleProps = Required<Pick<ISeparatorProps, 'theme'>> &\n  Pick<ISeparatorProps, 'className' | 'alignContent' | 'vertical'>;\n\n/**\n * {@docCategory Separator}\n */\nexport interface ISeparatorStyles {\n  /**\n   * Style for the root element\n   */\n  root: IStyle;\n\n  /**\n   * Style for the content\n   */\n  content: IStyle;\n}\n"]}
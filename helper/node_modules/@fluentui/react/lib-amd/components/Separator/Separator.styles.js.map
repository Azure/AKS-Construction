{"version":3,"file":"Separator.styles.js","sourceRoot":"../src/","sources":["components/Separator/Separator.styles.ts"],"names":[],"mappings":";;;;IAGO,IAAM,SAAS,GAAG,UAAC,KAA2B;;QAC3C,IAAA,KAAK,GAAwC,KAAK,MAA7C,EAAE,YAAY,GAA0B,KAAK,aAA/B,EAAE,QAAQ,GAAgB,KAAK,SAArB,EAAE,SAAS,GAAK,KAAK,UAAV,CAAW;QAE3D,IAAM,UAAU,GAAG,YAAY,KAAK,OAAO,CAAC;QAC5C,IAAM,WAAW,GAAG,YAAY,KAAK,QAAQ,CAAC;QAC9C,IAAM,QAAQ,GAAG,YAAY,KAAK,KAAK,CAAC;QAExC,OAAO;YACL,IAAI,EAAE;gBACJ,KAAK,CAAC,KAAK,CAAC,MAAM;gBAClB;oBACE,QAAQ,EAAE,UAAU;iBACrB;gBACD,YAAY,IAAI;oBACd,SAAS,EAAE,YAAY;iBACxB;gBACD,CAAC,YAAY,IAAI;oBACf,SAAS,EAAE,QAAQ;iBACpB;gBACD,QAAQ;oBACN,CAAC,WAAW,IAAI,CAAC,YAAY,CAAC,IAAI;oBAChC,aAAa,EAAE,QAAQ;iBACxB;gBACH,QAAQ;oBACN,UAAU,IAAI;oBACZ,aAAa,EAAE,KAAK;iBACrB;gBACH,QAAQ;oBACN,QAAQ,IAAI;oBACV,aAAa,EAAE,QAAQ;iBACxB;gBACH,QAAQ,IAAI;oBACV,OAAO,EAAE,OAAO;oBAChB,MAAM,EAAE,SAAS;oBACjB,OAAO,EAAE,YAAY;oBACrB,MAAM,EAAE,CAAC;oBACT,SAAS,EAAE;wBACT,QAAQ;gCACN,eAAe,EAAE,KAAK,CAAC,OAAO,CAAC,cAAc;gCAC7C,KAAK,EAAE,KAAK;gCACZ,OAAO,EAAE,IAAI;gCACb,QAAQ,EAAE,UAAU;gCACpB,GAAG,EAAE,GAAG;gCACR,MAAM,EAAE,GAAG;gCACX,IAAI,EAAE,KAAK;gCACX,KAAK,EAAE,GAAG;gCACV,MAAM,EAAE,CAAC,CAAC;;4BACV,GAAC,8BAAoB,IAAG;gCACtB,eAAe,EAAE,YAAY;6BAC9B;+BACF;qBACF;iBACF;gBACD,CAAC,QAAQ,IAAI;oBACX,OAAO,EAAE,OAAO;oBAChB,SAAS,EAAE;wBACT,SAAS;gCACP,eAAe,EAAE,KAAK,CAAC,OAAO,CAAC,cAAc;gCAC7C,MAAM,EAAE,KAAK;gCACb,OAAO,EAAE,IAAI;gCACb,OAAO,EAAE,OAAO;gCAChB,QAAQ,EAAE,UAAU;gCACpB,GAAG,EAAE,KAAK;gCACV,MAAM,EAAE,GAAG;gCACX,IAAI,EAAE,GAAG;gCACT,KAAK,EAAE,GAAG;;4BACV,GAAC,8BAAoB,IAAG;gCACtB,eAAe,EAAE,YAAY;6BAC9B;+BACF;qBACF;iBACF;gBACD,SAAS;aACV;YACD,OAAO,EAAE;gBACP;oBACE,QAAQ,EAAE,UAAU;oBACpB,OAAO,EAAE,cAAc;oBACvB,OAAO,EAAE,QAAQ;oBACjB,KAAK,EAAE,KAAK,CAAC,cAAc,CAAC,QAAQ;oBACpC,UAAU,EAAE,KAAK,CAAC,cAAc,CAAC,cAAc;iBAChD;gBACD,QAAQ,IAAI;oBACV,OAAO,EAAE,QAAQ;iBAClB;aACF;SACF,CAAC;IACJ,CAAC,CAAC;IAvFW,QAAA,SAAS,aAuFpB","sourcesContent":["import { HighContrastSelector } from '../../Styling';\nimport type { ISeparatorStyleProps, ISeparatorStyles } from './Separator.types';\n\nexport const getStyles = (props: ISeparatorStyleProps): ISeparatorStyles => {\n  const { theme, alignContent, vertical, className } = props;\n\n  const alignStart = alignContent === 'start';\n  const alignCenter = alignContent === 'center';\n  const alignEnd = alignContent === 'end';\n\n  return {\n    root: [\n      theme.fonts.medium,\n      {\n        position: 'relative',\n      },\n      alignContent && {\n        textAlign: alignContent,\n      },\n      !alignContent && {\n        textAlign: 'center',\n      },\n      vertical &&\n        (alignCenter || !alignContent) && {\n          verticalAlign: 'middle',\n        },\n      vertical &&\n        alignStart && {\n          verticalAlign: 'top',\n        },\n      vertical &&\n        alignEnd && {\n          verticalAlign: 'bottom',\n        },\n      vertical && {\n        padding: '0 4px',\n        height: 'inherit',\n        display: 'table-cell',\n        zIndex: 1,\n        selectors: {\n          ':after': {\n            backgroundColor: theme.palette.neutralLighter,\n            width: '1px',\n            content: '\"\"',\n            position: 'absolute',\n            top: '0',\n            bottom: '0',\n            left: '50%',\n            right: '0',\n            zIndex: -1,\n            [HighContrastSelector]: {\n              backgroundColor: 'WindowText',\n            },\n          },\n        },\n      },\n      !vertical && {\n        padding: '4px 0',\n        selectors: {\n          ':before': {\n            backgroundColor: theme.palette.neutralLighter,\n            height: '1px',\n            content: '\"\"',\n            display: 'block',\n            position: 'absolute',\n            top: '50%',\n            bottom: '0',\n            left: '0',\n            right: '0',\n            [HighContrastSelector]: {\n              backgroundColor: 'WindowText',\n            },\n          },\n        },\n      },\n      className,\n    ],\n    content: [\n      {\n        position: 'relative',\n        display: 'inline-block',\n        padding: '0 12px',\n        color: theme.semanticColors.bodyText,\n        background: theme.semanticColors.bodyBackground,\n      },\n      vertical && {\n        padding: '12px 0',\n      },\n    ],\n  };\n};\n"]}
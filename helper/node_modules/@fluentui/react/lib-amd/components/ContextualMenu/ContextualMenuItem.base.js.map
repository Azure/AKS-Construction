{"version":3,"file":"ContextualMenuItem.base.js","sourceRoot":"../src/","sources":["components/ContextualMenu/ContextualMenuItem.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { hasSubmenu, getIsChecked } from '../../utilities/contextualMenu/index';\nimport { getRTL, initializeComponentRef } from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport type { IContextualMenuItemProps, IContextualMenuItemRenderFunctions } from './ContextualMenuItem.types';\n\nconst defaultIconRenderer = (props: IContextualMenuItemProps) => {\n  const { item, classNames } = props;\n  const { iconProps } = item;\n  return <Icon {...iconProps} className={classNames.icon} />;\n};\n\nconst renderItemIcon = (props: IContextualMenuItemProps) => {\n  const { item, hasIcons } = props;\n  if (!hasIcons) {\n    return null;\n  }\n\n  if (item.onRenderIcon) {\n    return item.onRenderIcon(props, defaultIconRenderer);\n  }\n\n  return defaultIconRenderer(props);\n};\n\nconst renderCheckMarkIcon = ({ onCheckmarkClick, item, classNames }: IContextualMenuItemProps) => {\n  const isItemChecked = getIsChecked(item);\n  if (onCheckmarkClick) {\n    // Ensures that the item is passed as the first argument to the checkmark click callback.\n    const onClick = (e: React.MouseEvent<HTMLElement>) => onCheckmarkClick(item, e);\n\n    return (\n      <Icon\n        iconName={item.canCheck !== false && isItemChecked ? 'CheckMark' : ''}\n        className={classNames.checkmarkIcon}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={onClick}\n      />\n    );\n  }\n  return null;\n};\n\nconst renderItemName = ({ item, classNames }: IContextualMenuItemProps) => {\n  /* eslint-disable deprecation/deprecation */\n  if (item.text || item.name) {\n    return <span className={classNames.label}>{item.text || item.name}</span>;\n  }\n  /* eslint-enable deprecation/deprecation */\n  return null;\n};\n\nconst renderSecondaryText = ({ item, classNames }: IContextualMenuItemProps) => {\n  if (item.secondaryText) {\n    return <span className={classNames.secondaryText}>{item.secondaryText}</span>;\n  }\n  return null;\n};\n\nconst renderSubMenuIcon = ({ item, classNames, theme }: IContextualMenuItemProps) => {\n  if (hasSubmenu(item)) {\n    return (\n      <Icon\n        iconName={getRTL(theme) ? 'ChevronLeft' : 'ChevronRight'}\n        {...item.submenuIconProps}\n        className={classNames.subMenuIcon}\n      />\n    );\n  }\n  return null;\n};\n\nexport class ContextualMenuItemBase extends React.Component<IContextualMenuItemProps, {}> {\n  constructor(props: IContextualMenuItemProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render() {\n    const { item, classNames } = this.props;\n    const renderContent = item.onRenderContent || this._renderLayout;\n\n    return (\n      <div className={item.split ? classNames.linkContentMenu : classNames.linkContent}>\n        {renderContent(this.props, {\n          renderCheckMarkIcon,\n          renderItemIcon,\n          renderItemName,\n          renderSecondaryText,\n          renderSubMenuIcon,\n        })}\n      </div>\n    );\n  }\n\n  public openSubMenu = (): void => {\n    const { item, openSubMenu, getSubmenuTarget } = this.props;\n    if (getSubmenuTarget) {\n      const submenuTarget = getSubmenuTarget();\n      if (hasSubmenu(item) && openSubMenu && submenuTarget) {\n        openSubMenu(item, submenuTarget);\n      }\n    }\n  };\n\n  public dismissSubMenu = (): void => {\n    const { item, dismissSubMenu } = this.props;\n    if (hasSubmenu(item) && dismissSubMenu) {\n      dismissSubMenu();\n    }\n  };\n\n  public dismissMenu = (dismissAll?: boolean): void => {\n    const { dismissMenu } = this.props;\n    if (dismissMenu) {\n      dismissMenu(undefined /* ev */, dismissAll);\n    }\n  };\n\n  private _renderLayout(props: IContextualMenuItemProps, defaultRenders: IContextualMenuItemRenderFunctions) {\n    return (\n      <>\n        {defaultRenders.renderCheckMarkIcon(props)}\n        {defaultRenders.renderItemIcon(props)}\n        {defaultRenders.renderItemName(props)}\n        {defaultRenders.renderSecondaryText(props)}\n        {defaultRenders.renderSubMenuIcon(props)}\n      </>\n    );\n  }\n}\n"]}
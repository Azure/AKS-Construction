{"version":3,"file":"ContextualMenu.classNames.js","sourceRoot":"../src/","sources":["components/ContextualMenu/ContextualMenu.classNames.ts"],"names":[],"mappings":"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","sourcesContent":["import { getDividerClassNames } from '../Divider/VerticalDivider.classNames';\nimport { getMenuItemStyles } from './ContextualMenu.cnstyles';\nimport {\n  mergeStyleSets,\n  getGlobalClassNames,\n  getScreenSelector,\n  ScreenWidthMaxMedium,\n  hiddenContentStyle,\n} from '../../Styling';\nimport { memoizeFunction, IsFocusVisibleClassName } from '../../Utilities';\nimport type { ITheme } from '../../Styling';\nimport type { IVerticalDividerClassNames } from '../Divider/VerticalDivider.types';\nimport type { IContextualMenuItemStyles, IContextualMenuItemStyleProps } from './ContextualMenuItem.types';\nimport type { IContextualMenuSubComponentStyles } from './ContextualMenu.types';\n\n/**\n * @deprecated Deprecated in favor of mergeStyles API.\n */\nexport interface IContextualMenuClassNames {\n  container?: string;\n  root?: string;\n  list?: string;\n  header?: string;\n  title?: string;\n  subComponentStyles?: IContextualMenuSubComponentStyles;\n}\n\n/**\n * @deprecated Deprecated in favor of mergeStyles API.\n */\nexport interface IMenuItemClassNames {\n  item?: string;\n  divider?: string;\n  root?: string;\n  linkContent?: string;\n  icon?: string;\n  checkmarkIcon?: string;\n  subMenuIcon?: string;\n  label?: string;\n  secondaryText?: string;\n  splitContainer?: string;\n  splitPrimary?: string;\n  splitMenu?: string;\n  linkContentMenu?: string;\n  screenReaderText?: string;\n}\n\nconst CONTEXTUAL_SPLIT_MENU_MINWIDTH = '28px';\n\nconst MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\n\nexport const getSplitButtonVerticalDividerClassNames = memoizeFunction(\n  /* eslint-disable deprecation/deprecation */\n  (theme: ITheme): IVerticalDividerClassNames => {\n    return mergeStyleSets(getDividerClassNames(theme), {\n      /* eslint-enable deprecation/deprecation */\n      wrapper: {\n        position: 'absolute',\n        right: 28, // width of the splitMenu based on the padding plus icon fontSize\n        selectors: {\n          [MediumScreenSelector]: {\n            right: 32, // fontSize of the icon increased from 12px to 16px\n          },\n        },\n      },\n      divider: {\n        height: 16,\n        width: 1,\n      },\n    });\n  },\n);\n\nconst GlobalClassNames = {\n  item: 'ms-ContextualMenu-item',\n  divider: 'ms-ContextualMenu-divider',\n  root: 'ms-ContextualMenu-link',\n  isChecked: 'is-checked',\n  isExpanded: 'is-expanded',\n  isDisabled: 'is-disabled',\n  linkContent: 'ms-ContextualMenu-linkContent',\n  linkContentMenu: 'ms-ContextualMenu-linkContent',\n  icon: 'ms-ContextualMenu-icon',\n  iconColor: 'ms-ContextualMenu-iconColor',\n  checkmarkIcon: 'ms-ContextualMenu-checkmarkIcon',\n  subMenuIcon: 'ms-ContextualMenu-submenuIcon',\n  label: 'ms-ContextualMenu-itemText',\n  secondaryText: 'ms-ContextualMenu-secondaryText',\n  splitMenu: 'ms-ContextualMenu-splitMenu',\n  screenReaderText: 'ms-ContextualMenu-screenReaderText',\n};\n\n/**\n * @deprecated Will be removed in \\>= 7.0.\n * This is a package-internal method that has been depended on.\n * It is being kept in this form for backwards compatibility.\n * @internal\n */\n// TODO: Audit perf. impact of and potentially remove memoizeFunction.\n// https://github.com/microsoft/fluentui/issues/5534\nexport const getItemClassNames = memoizeFunction(\n  (\n    theme: ITheme,\n    disabled: boolean,\n    expanded: boolean,\n    checked: boolean,\n    isAnchorLink: boolean,\n    knownIcon: boolean,\n    itemClassName?: string,\n    dividerClassName?: string,\n    iconClassName?: string,\n    subMenuClassName?: string,\n    primaryDisabled?: boolean,\n    className?: string,\n  ): IContextualMenuItemStyles => {\n    const styles = getMenuItemStyles(theme);\n    const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n    return mergeStyleSets({\n      item: [classNames.item, styles.item, itemClassName],\n      divider: [classNames.divider, styles.divider, dividerClassName],\n      root: [\n        classNames.root,\n        styles.root,\n        checked && [classNames.isChecked, styles.rootChecked],\n        isAnchorLink && styles.anchorLink,\n        expanded && [classNames.isExpanded, styles.rootExpanded],\n        disabled && [classNames.isDisabled, styles.rootDisabled],\n        !disabled &&\n          !expanded && [\n            {\n              selectors: {\n                ':hover': styles.rootHovered,\n                ':active': styles.rootPressed,\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n                [`.${IsFocusVisibleClassName} &:hover`]: { background: 'inherit;' },\n              },\n            },\n          ],\n        className,\n      ],\n      splitPrimary: [\n        styles.root,\n        {\n          width: `calc(100% - ${CONTEXTUAL_SPLIT_MENU_MINWIDTH})`,\n        },\n        checked && ['is-checked', styles.rootChecked],\n        (disabled || primaryDisabled) && ['is-disabled', styles.rootDisabled],\n        !(disabled || primaryDisabled) &&\n          !checked && [\n            {\n              selectors: {\n                ':hover': styles.rootHovered,\n                // when hovering over the splitPrimary also affect the splitMenu\n                [`:hover ~ .${classNames.splitMenu}`]: styles.rootHovered,\n                ':active': styles.rootPressed,\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n                [`.${IsFocusVisibleClassName} &:hover`]: { background: 'inherit;' },\n              },\n            },\n          ],\n      ],\n      splitMenu: [\n        classNames.splitMenu,\n        styles.root,\n        {\n          flexBasis: '0',\n          padding: '0 8px',\n          minWidth: CONTEXTUAL_SPLIT_MENU_MINWIDTH,\n        },\n        expanded && ['is-expanded', styles.rootExpanded],\n        disabled && ['is-disabled', styles.rootDisabled],\n        !disabled &&\n          !expanded && [\n            {\n              selectors: {\n                ':hover': styles.rootHovered,\n                ':active': styles.rootPressed,\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n                [`.${IsFocusVisibleClassName} &:hover`]: { background: 'inherit;' },\n              },\n            },\n          ],\n      ],\n      anchorLink: styles.anchorLink,\n      linkContent: [classNames.linkContent, styles.linkContent],\n      linkContentMenu: [\n        classNames.linkContentMenu,\n        styles.linkContent,\n        {\n          justifyContent: 'center',\n        },\n      ],\n      icon: [\n        classNames.icon,\n        knownIcon && styles.iconColor,\n        styles.icon,\n        iconClassName,\n        disabled && [classNames.isDisabled, styles.iconDisabled],\n      ],\n      iconColor: styles.iconColor,\n      checkmarkIcon: [classNames.checkmarkIcon, knownIcon && styles.checkmarkIcon, styles.icon, iconClassName],\n      subMenuIcon: [\n        classNames.subMenuIcon,\n        styles.subMenuIcon,\n        subMenuClassName,\n        expanded && { color: theme.palette.neutralPrimary },\n        disabled && [styles.iconDisabled],\n      ],\n      label: [classNames.label, styles.label],\n      secondaryText: [classNames.secondaryText, styles.secondaryText],\n      splitContainer: [\n        styles.splitButtonFlexContainer,\n        !disabled &&\n          !checked && [\n            {\n              selectors: {\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n              },\n            },\n          ],\n      ],\n      screenReaderText: [\n        classNames.screenReaderText,\n        styles.screenReaderText,\n        hiddenContentStyle,\n        { visibility: 'hidden' },\n      ],\n    });\n  },\n);\n\n/**\n * Wrapper function for generating ContextualMenuItem classNames which adheres to\n * the getStyles API, but invokes memoized className generator function with\n * primitive values.\n *\n * @param props - the ContextualMenuItem style props used to generate its styles.\n */\nexport const getItemStyles = (props: IContextualMenuItemStyleProps): IContextualMenuItemStyles => {\n  const {\n    theme,\n    disabled,\n    expanded,\n    checked,\n    isAnchorLink,\n    knownIcon,\n    itemClassName,\n    dividerClassName,\n    iconClassName,\n    subMenuClassName,\n    primaryDisabled,\n    className,\n  } = props;\n\n  // eslint-disable-next-line deprecation/deprecation\n  return getItemClassNames(\n    theme,\n    disabled,\n    expanded,\n    checked,\n    isAnchorLink,\n    knownIcon,\n    itemClassName,\n    dividerClassName,\n    iconClassName,\n    subMenuClassName,\n    primaryDisabled,\n    className,\n  );\n};\n"]}
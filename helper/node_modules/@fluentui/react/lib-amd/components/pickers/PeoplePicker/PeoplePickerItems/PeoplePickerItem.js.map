{"version":3,"file":"PeoplePickerItem.js","sourceRoot":"../src/","sources":["components/pickers/PeoplePicker/PeoplePickerItems/PeoplePickerItem.tsx"],"names":[],"mappings":";;;;IAoBA,IAAM,aAAa,GAAG,8BAAkB,EAAwE,CAAC;IAE1G,IAAM,oBAAoB,GAAG,UAAC,KAAqC;QAEtE,IAAA,IAAI,GAUF,KAAK,KAVH,EACJ,YAAY,GASV,KAAK,aATK,EACZ,KAAK,GAQH,KAAK,MARF,EACL,QAAQ,GAON,KAAK,SAPC,EACR,qBAAqB,GAMnB,KAAK,sBANc,EACrB,MAAM,GAKJ,KAAK,OALD,EACN,KAAK,GAIH,KAAK,MAJF,EACL,SAAS,GAGP,KAAK,UAHE,EACT,QAAQ,GAEN,KAAK,SAFC,EACR,qBAAqB,GACnB,KAAK,sBADc,CACb;QAEV,IAAM,SAAS,GAAG,KAAK,CAAC,SAAS,EAAW,CAAC;QAE7C,IAAM,WAAW,GAA4C;;YAC3D,MAAA,SAAS,CAAC,OAAO,0CAAE,KAAK,EAAE,CAAC;QAC7B,CAAC,CAAC;QAEF,IAAM,MAAM,GAAG,iBAAK,EAAE,CAAC;QAEvB,IAAM,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE;YACvC,KAAK,EAAE,KAAM;YACb,SAAS,WAAA;YACT,QAAQ,UAAA;YACR,QAAQ,UAAA;YACR,OAAO,EAAE,IAAI,CAAC,eAAe,KAAK,kCAAe,CAAC,OAAO;SAC1D,CAAC,CAAC;QAEH,IAAM,aAAa,GAAG,UAAU,CAAC,kBAAkB;YACjD,CAAC,CAAE,UAAU,CAAC,kBAAkB,CAAC,OAAsE;YACvG,CAAC,CAAC,SAAS,CAAC;QAEd,IAAM,iBAAiB,GAAG,UAAU,CAAC,kBAAkB;YACrD,CAAC,CAAE,UAAU,CAAC,kBAAkB,CAAC,WAAkF;YACnH,CAAC,CAAC,SAAS,CAAC;QAEd,OAAO,CACL,qDAA2B,KAAK,EAAE,SAAS,EAAE,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,WAAW;YAC9G,6BAAK,SAAS,EAAE,UAAU,CAAC,WAAW,EAAE,EAAE,EAAE,sBAAsB,GAAG,MAAM;gBACzE,oBAAC,iBAAO,qBAAC,IAAI,EAAE,qBAAW,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,EAAE,MAAM,EAAE,iBAAiB,EAAE,IAAM,IAAI,EAAI,CAC5G;YACN,oBAAC,mBAAU,IACT,YAAY,EAAE,SAAS,EACvB,EAAE,EAAE,MAAM,EACV,OAAO,EAAE,YAAY,EACrB,QAAQ,EAAE,QAAQ,EAClB,SAAS,EAAE,qBAAqB,aAArB,qBAAqB,cAArB,qBAAqB,GAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAC1D,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EACtC,SAAS,EAAE,UAAU,CAAC,YAAY,EAClC,SAAS,EAAE,qBAAqB,qBACZ,MAAM,6BAAwB,MAAQ,GAC1D,CACE,CACP,CAAC;IACJ,CAAC,CAAC;IAxDW,QAAA,oBAAoB,wBAwD/B;IAEW,QAAA,gBAAgB,GAAG,kBAAM,CAIpC,4BAAoB,EAAE,mCAAS,EAAE,SAAS,EAAE,EAAE,KAAK,EAAE,kBAAkB,EAAE,CAAC,CAAC","sourcesContent":["import * as React from 'react';\n\nimport { getId, classNamesFunction, styled } from '../../../../Utilities';\nimport { Persona, PersonaSize } from '../../../../Persona';\nimport { IconButton, IButton } from '../../../../Button';\nimport { ValidationState } from '../../BasePicker.types';\nimport { getStyles } from './PeoplePickerItem.styles';\nimport type { IStyleFunctionOrObject } from '../../../../Utilities';\nimport type {\n  IPersonaStyleProps,\n  IPersonaStyles,\n  IPersonaCoinStyleProps,\n  IPersonaCoinStyles,\n} from '../../../../Persona';\nimport type {\n  IPeoplePickerItemSelectedProps,\n  IPeoplePickerItemSelectedStyleProps,\n  IPeoplePickerItemSelectedStyles,\n} from './PeoplePickerItem.types';\n\nconst getClassNames = classNamesFunction<IPeoplePickerItemSelectedStyleProps, IPeoplePickerItemSelectedStyles>();\n\nexport const PeoplePickerItemBase = (props: IPeoplePickerItemSelectedProps) => {\n  const {\n    item,\n    onRemoveItem,\n    index,\n    selected,\n    removeButtonAriaLabel,\n    styles,\n    theme,\n    className,\n    disabled,\n    removeButtonIconProps,\n  } = props;\n\n  const buttonRef = React.createRef<IButton>();\n\n  const handleClick: React.MouseEventHandler<HTMLDivElement> = () => {\n    buttonRef.current?.focus();\n  };\n\n  const itemId = getId();\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className,\n    selected,\n    disabled,\n    invalid: item.ValidationState === ValidationState.warning,\n  });\n\n  const personaStyles = classNames.subComponentStyles\n    ? (classNames.subComponentStyles.persona as IStyleFunctionOrObject<IPersonaStyleProps, IPersonaStyles>)\n    : undefined;\n\n  const personaCoinStyles = classNames.subComponentStyles\n    ? (classNames.subComponentStyles.personaCoin as IStyleFunctionOrObject<IPersonaCoinStyleProps, IPersonaCoinStyles>)\n    : undefined;\n\n  return (\n    <div data-selection-index={index} className={classNames.root} role={'listitem'} key={index} onClick={handleClick}>\n      <div className={classNames.itemContent} id={'selectedItemPersona-' + itemId}>\n        <Persona size={PersonaSize.size24} styles={personaStyles} coinProps={{ styles: personaCoinStyles }} {...item} />\n      </div>\n      <IconButton\n        componentRef={buttonRef}\n        id={itemId}\n        onClick={onRemoveItem}\n        disabled={disabled}\n        iconProps={removeButtonIconProps ?? { iconName: 'Cancel' }}\n        styles={{ icon: { fontSize: '12px' } }}\n        className={classNames.removeButton}\n        ariaLabel={removeButtonAriaLabel}\n        aria-labelledby={`${itemId} selectedItemPersona-${itemId}`}\n      />\n    </div>\n  );\n};\n\nexport const PeoplePickerItem = styled<\n  IPeoplePickerItemSelectedProps,\n  IPeoplePickerItemSelectedStyleProps,\n  IPeoplePickerItemSelectedStyles\n>(PeoplePickerItemBase, getStyles, undefined, { scope: 'PeoplePickerItem' });\n"]}
{"version":3,"file":"Nav.base.js","sourceRoot":"../src/","sources":["components/Nav/Nav.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ActionButton } from '../../Button';\nimport { buttonStyles } from './Nav.styles';\nimport { classNamesFunction, divProperties, getNativeProps, getWindow, initializeComponentRef } from '../../Utilities';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { Icon } from '../../Icon';\nimport { composeComponentAs, composeRenderFunction } from '@fluentui/utilities';\nimport type { IFocusZone } from '../../FocusZone';\nimport type {\n  INav,\n  INavLink,\n  INavLinkGroup,\n  INavProps,\n  INavStyleProps,\n  INavStyles,\n  IRenderGroupHeaderProps,\n} from './Nav.types';\n\n// The number pixels per indentation level for Nav links.\nconst _indentationSize = 14;\n\n// The number of pixels of left margin\nconst _baseIndent = 3;\n\n// global var used in _isLinkSelectedKey\nlet _urlResolver: HTMLAnchorElement | undefined;\n\nexport function isRelativeUrl(url: string): boolean {\n  // A URL is relative if it has no protocol.\n  return !!url && !/^[a-z0-9+-.]+:\\/\\//i.test(url);\n}\n\nconst getClassNames = classNamesFunction<INavStyleProps, INavStyles>();\n\nexport interface INavState {\n  isGroupCollapsed: { [key: string]: boolean };\n  isLinkExpandStateChanged?: boolean;\n  selectedKey?: string;\n}\n\nexport class NavBase extends React.Component<INavProps, INavState> implements INav {\n  public static defaultProps: INavProps = {\n    groups: null,\n  };\n\n  private _focusZone = React.createRef<IFocusZone>();\n  constructor(props: INavProps) {\n    super(props);\n    initializeComponentRef(this);\n    this.state = {\n      isGroupCollapsed: {},\n      // TODO: consider removing\n      // eslint-disable-next-line react/no-unused-state\n      isLinkExpandStateChanged: false,\n      selectedKey: props.initialSelectedKey || props.selectedKey,\n    };\n  }\n\n  public render(): JSX.Element | null {\n    const { styles, groups, className, isOnTop, role = 'navigation', theme } = this.props;\n\n    if (!groups) {\n      return null;\n    }\n\n    const groupElements: React.ReactElement<{}>[] = groups.map(this._renderGroup);\n\n    const classNames = getClassNames(styles!, { theme: theme!, className, isOnTop, groups });\n\n    return (\n      <FocusZone direction={FocusZoneDirection.vertical} componentRef={this._focusZone} {...this.props.focusZoneProps}>\n        <nav role={role} className={classNames.root} aria-label={this.props.ariaLabel}>\n          {groupElements}\n        </nav>\n      </FocusZone>\n    );\n  }\n\n  public get selectedKey(): string | undefined {\n    return this.state.selectedKey;\n  }\n\n  /**\n   * Sets focus to the first tabbable item in the zone.\n   * @param forceIntoFirstElement - If true, focus will be forced into the first element, even\n   * if focus is already in the focus zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  public focus(forceIntoFirstElement: boolean = false): boolean {\n    if (this._focusZone && this._focusZone.current) {\n      return this._focusZone.current.focus(forceIntoFirstElement);\n    }\n    return false;\n  }\n\n  private _onRenderLink = (link: INavLink): JSX.Element => {\n    const { styles, groups, theme } = this.props;\n    const classNames = getClassNames(styles!, { theme: theme!, groups });\n    return <div className={classNames.linkText}>{link.name}</div>;\n  };\n\n  private _renderNavLink(link: INavLink, linkIndex: number, nestingLevel: number): JSX.Element {\n    const { styles, groups, theme } = this.props;\n    const isLinkWithIcon = link.icon || link.iconProps;\n    const isSelectedLink = this._isLinkSelected(link);\n    const { ariaCurrent = 'page' } = link;\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      isSelected: isSelectedLink,\n      isDisabled: link.disabled,\n      isButtonEntry: link.onClick && !link.forceAnchor,\n      leftPadding: _indentationSize * nestingLevel + _baseIndent + (isLinkWithIcon ? 0 : 24),\n      groups,\n    });\n\n    // Prevent hijacking of the parent window if link.target is defined\n    const rel = link.url && link.target && !isRelativeUrl(link.url) ? 'noopener noreferrer' : undefined;\n\n    const LinkAs = this.props.linkAs ? composeComponentAs(this.props.linkAs, ActionButton) : ActionButton;\n    const onRenderLink = this.props.onRenderLink\n      ? composeRenderFunction(this.props.onRenderLink, this._onRenderLink)\n      : this._onRenderLink;\n\n    return (\n      <LinkAs\n        className={classNames.link}\n        styles={buttonStyles}\n        href={link.url || (link.forceAnchor ? '#' : undefined)}\n        iconProps={link.iconProps || { iconName: link.icon }}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={\n          link.onClick ? this._onNavButtonLinkClicked.bind(this, link) : this._onNavAnchorLinkClicked.bind(this, link)\n        }\n        title={link.title !== undefined ? link.title : link.name}\n        target={link.target}\n        rel={rel}\n        disabled={link.disabled}\n        aria-current={isSelectedLink ? ariaCurrent : undefined}\n        aria-label={link.ariaLabel ? link.ariaLabel : undefined}\n        link={link}\n      >\n        {onRenderLink(link)}\n      </LinkAs>\n    );\n  }\n\n  private _renderCompositeLink(link: INavLink, linkIndex: number, nestingLevel: number): React.ReactElement<{}> {\n    const divProps: React.HTMLProps<HTMLDivElement> = { ...getNativeProps(link, divProperties, ['onClick']) };\n    // eslint-disable-next-line deprecation/deprecation\n    const { expandButtonAriaLabel, styles, groups, theme } = this.props;\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      isExpanded: !!link.isExpanded,\n      isSelected: this._isLinkSelected(link),\n      isLink: true,\n      isDisabled: link.disabled,\n      position: _indentationSize * nestingLevel + 1,\n      groups,\n    });\n\n    let finalExpandBtnAriaLabel = '';\n    if (link.links && link.links.length > 0) {\n      if (link.collapseAriaLabel || link.expandAriaLabel) {\n        // still respect link.collapseAriaLabel, even though it's deprecated in favor of expandAriaLabel\n        const collapseAriaLabel = link.collapseAriaLabel ?? link.expandAriaLabel;\n\n        finalExpandBtnAriaLabel = link.isExpanded ? collapseAriaLabel! : link.expandAriaLabel!;\n      } else {\n        // TODO remove when `expandButtonAriaLabel` is removed. This is not an ideal concatenation for localization.\n        finalExpandBtnAriaLabel = expandButtonAriaLabel ? `${link.name} ${expandButtonAriaLabel}` : link.name;\n      }\n    }\n\n    return (\n      <div {...divProps} key={link.key || linkIndex} className={classNames.compositeLink}>\n        {link.links && link.links.length > 0 ? (\n          <button\n            className={classNames.chevronButton}\n            onClick={this._onLinkExpandClicked.bind(this, link)}\n            aria-label={finalExpandBtnAriaLabel}\n            aria-expanded={link.isExpanded ? 'true' : 'false'}\n          >\n            <Icon className={classNames.chevronIcon} iconName=\"ChevronDown\" />\n          </button>\n        ) : null}\n        {this._renderNavLink(link, linkIndex, nestingLevel)}\n      </div>\n    );\n  }\n\n  private _renderLink(link: INavLink, linkIndex: number, nestingLevel: number): React.ReactElement<{}> {\n    const { styles, groups, theme } = this.props;\n    const classNames = getClassNames(styles!, { theme: theme!, groups });\n\n    return (\n      <li key={link.key || linkIndex} role=\"listitem\" className={classNames.navItem}>\n        {this._renderCompositeLink(link, linkIndex, nestingLevel)}\n        {link.isExpanded ? this._renderLinks(link.links, ++nestingLevel) : null}\n      </li>\n    );\n  }\n\n  private _renderLinks(links: INavLink[] | undefined, nestingLevel: number): React.ReactElement<{}> | null {\n    if (!links || !links.length) {\n      return null;\n    }\n    const linkElements: React.ReactElement<{}>[] = links.map((link: INavLink, linkIndex: number) =>\n      this._renderLink(link, linkIndex, nestingLevel),\n    );\n\n    const { styles, groups, theme } = this.props;\n    const classNames = getClassNames(styles!, { theme: theme!, groups });\n\n    return (\n      <ul role=\"list\" className={classNames.navItems}>\n        {linkElements}\n      </ul>\n    );\n  }\n\n  private _renderGroup = (group: INavLinkGroup, groupIndex: number): React.ReactElement<{}> => {\n    const { styles, groups, theme, onRenderGroupHeader = this._renderGroupHeader } = this.props;\n\n    const isExpanded = this._isGroupExpanded(group);\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      isGroup: true,\n      isExpanded,\n      groups,\n    });\n\n    const finalOnHeaderClick = (\n      ev?: React.MouseEvent<HTMLElement, MouseEvent> | undefined,\n      isCollapsing?: boolean | undefined,\n    ) => {\n      this._onGroupHeaderClicked(group, ev);\n    };\n\n    const groupProps: IRenderGroupHeaderProps = {\n      ...group,\n      isExpanded,\n      onHeaderClick: finalOnHeaderClick,\n    };\n\n    return (\n      <div key={groupIndex} className={classNames.group}>\n        {groupProps.name ? onRenderGroupHeader(groupProps, this._renderGroupHeader) : null}\n        <div className={classNames.groupContent}>{this._renderLinks(groupProps.links, 0 /* nestingLevel */)}</div>\n      </div>\n    );\n  };\n\n  private _renderGroupHeader = (group: IRenderGroupHeaderProps): React.ReactElement<{}> => {\n    // eslint-disable-next-line deprecation/deprecation\n    const { styles, groups, theme, expandButtonAriaLabel } = this.props;\n\n    const { isExpanded } = group;\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      isGroup: true,\n      isExpanded,\n      groups,\n    });\n\n    // respect deprecated collapseAriaLabel, but default to expandAriaLabel for both states\n    // eslint-disable-next-line deprecation/deprecation\n    const collapseAriaLabel = group.collapseAriaLabel ?? group.expandAriaLabel;\n    const label = (isExpanded ? collapseAriaLabel : group.expandAriaLabel) || expandButtonAriaLabel;\n\n    const { onHeaderClick } = group;\n\n    const onClick = onHeaderClick\n      ? (ev?: React.MouseEvent<HTMLElement, MouseEvent> | undefined) => {\n          onHeaderClick(ev, isExpanded);\n        }\n      : undefined;\n\n    return (\n      <button className={classNames.chevronButton} onClick={onClick} aria-label={label} aria-expanded={isExpanded}>\n        <Icon className={classNames.chevronIcon} iconName=\"ChevronDown\" />\n        {group.name}\n      </button>\n    );\n  };\n\n  private _onGroupHeaderClicked(group: INavLinkGroup, ev?: React.MouseEvent<HTMLElement>): void {\n    if (group.onHeaderClick) {\n      group.onHeaderClick(ev, this._isGroupExpanded(group));\n    }\n\n    if (group.isExpanded === undefined) {\n      this._toggleCollapsed(group);\n    }\n\n    if (ev) {\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n  }\n\n  private _onLinkExpandClicked(link: INavLink, ev: React.MouseEvent<HTMLElement>): void {\n    const { onLinkExpandClick } = this.props;\n\n    if (onLinkExpandClick) {\n      onLinkExpandClick(ev, link);\n    }\n\n    if (!ev.defaultPrevented) {\n      link.isExpanded = !link.isExpanded;\n      // eslint-disable-next-line react/no-unused-state\n      this.setState({ isLinkExpandStateChanged: true });\n    }\n\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  private _preventBounce(link: INavLink, ev: React.MouseEvent<HTMLElement>): void {\n    if (!link.url && link.forceAnchor) {\n      ev.preventDefault();\n    }\n  }\n\n  private _onNavAnchorLinkClicked(link: INavLink, ev: React.MouseEvent<HTMLElement>): void {\n    // If the href is \"#\" we should call preventDefault to prevent scrolling to the top of the page\n    this._preventBounce(link, ev);\n\n    if (this.props.onLinkClick) {\n      this.props.onLinkClick(ev, link);\n    }\n    if (!link.url && link.links && link.links.length > 0) {\n      this._onLinkExpandClicked(link, ev);\n    }\n\n    this.setState({ selectedKey: link.key });\n  }\n\n  private _onNavButtonLinkClicked(link: INavLink, ev: React.MouseEvent<HTMLElement>): void {\n    // If the href is \"#\" we should call preventDefault to prevent scrolling to the top of the page\n    this._preventBounce(link, ev);\n\n    if (link.onClick) {\n      link.onClick(ev, link);\n    }\n    if (!link.url && link.links && link.links.length > 0) {\n      this._onLinkExpandClicked(link, ev);\n    }\n\n    this.setState({ selectedKey: link.key });\n  }\n\n  private _isLinkSelected(link: INavLink): boolean {\n    // if caller passes in selectedKey, use it as first choice or\n    // if current state.selectedKey (from addressbar) is match to the link or\n    // check if URL is matching location.href (if link.url exists)\n    if (this.props.selectedKey !== undefined) {\n      return link.key === this.props.selectedKey;\n    } else if (this.state.selectedKey !== undefined) {\n      return link.key === this.state.selectedKey;\n    } else if (typeof getWindow() === 'undefined' || !link.url) {\n      // resolve is not supported for ssr\n      return false;\n    } else {\n      // If selectedKey is undefined in props and state, then check URL\n      _urlResolver = _urlResolver || document.createElement('a');\n\n      _urlResolver.href = link.url || '';\n      const target: string = _urlResolver.href;\n\n      if (location.href === target) {\n        return true;\n      }\n\n      // If selectedKey is not defined in state, then check URL to determine link selected status\n      if (location.protocol + '//' + location.host + location.pathname === target) {\n        return true;\n      }\n\n      if (location.hash) {\n        // Match the hash to the url.\n        if (location.hash === link.url) {\n          return true;\n        }\n\n        // Match a rebased url. (e.g. #foo becomes http://hostname/foo)\n        _urlResolver.href = location.hash.substring(1);\n\n        return _urlResolver.href === target;\n      }\n    }\n\n    return false;\n  }\n\n  private _isGroupExpanded(group: INavLinkGroup): boolean {\n    if (group.isExpanded !== undefined) {\n      return group.isExpanded;\n    }\n    if (group.name && this.state.isGroupCollapsed.hasOwnProperty(group.name)) {\n      return !this.state.isGroupCollapsed[group.name];\n    }\n    if (group.collapseByDefault !== undefined) {\n      return !group.collapseByDefault;\n    }\n    return true;\n  }\n\n  private _toggleCollapsed(group: INavLinkGroup): void {\n    if (group.name) {\n      const newGroupCollapsed = {\n        ...this.state.isGroupCollapsed, // Make a copy in order to not modify state\n        [group.name]: this._isGroupExpanded(group), // sic - presently open will be collapsed after setState\n      };\n      this.setState({ isGroupCollapsed: newGroupCollapsed });\n    }\n  }\n}\n"]}
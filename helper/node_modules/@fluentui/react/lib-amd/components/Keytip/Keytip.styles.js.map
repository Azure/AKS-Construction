{"version":3,"file":"Keytip.styles.js","sourceRoot":"../src/","sources":["components/Keytip/Keytip.styles.ts"],"names":[],"mappings":";;;;IAKO,IAAM,SAAS,GAAG,UAAC,KAAwB;;QACxC,IAAA,KAAK,GAAwB,KAAK,MAA7B,EAAE,QAAQ,GAAc,KAAK,SAAnB,EAAE,OAAO,GAAK,KAAK,QAAV,CAAW;QAC3C,OAAO;YACL,SAAS,EAAE;gBACT;oBACE,eAAe,EAAE,KAAK,CAAC,OAAO,CAAC,WAAW;iBAC3C;gBACD,QAAQ,IAAI;oBACV,OAAO,EAAE,GAAG;oBACZ,SAAS;wBACP,GAAC,8BAAoB,IAAG;4BACtB,KAAK,EAAE,UAAU;4BACjB,OAAO,EAAE,CAAC;yBACX;2BACF;iBACF;gBACD,CAAC,OAAO,IAAI;oBACV,UAAU,EAAE,QAAQ;iBACrB;aACF;YACD,IAAI,EAAE;gBACJ,KAAK,CAAC,KAAK,CAAC,MAAM;gBAClB;oBACE,SAAS,EAAE,QAAQ;oBACnB,WAAW,EAAE,KAAK;oBAClB,YAAY,EAAE,KAAK;oBACnB,eAAe,EAAE,KAAK,CAAC,OAAO,CAAC,WAAW;oBAC1C,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,YAAY;oBACjC,QAAQ,EAAE,MAAM;oBAChB,UAAU,EAAE,MAAM;oBAClB,MAAM,EAAE,MAAM;oBACd,OAAO,EAAE,cAAc;iBACxB;gBACD,QAAQ,IAAI;oBACV,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,kBAAkB;iBACxC;aACF;SACF,CAAC;IACJ,CAAC,CAAC;IAtCW,QAAA,SAAS,aAsCpB;IAEK,IAAM,gBAAgB,GAAG,UAAC,KAAgC;QAC/D,OAAO;YACL,SAAS,EAAE,EAAE;YACb,IAAI,EAAE;gBACJ;oBACE,MAAM,EAAE,MAAM;oBACd,SAAS,EAAE,MAAM;iBAClB;aACF;YACD,IAAI,EAAE,EAAE;YACR,WAAW,EAAE,EAAE;YACf,WAAW,EAAE;gBACX;oBACE,eAAe,EAAE,aAAa;iBAC/B;aACF;SACF,CAAC;IACJ,CAAC,CAAC;IAjBW,QAAA,gBAAgB,oBAiB3B;IAEK,IAAM,sBAAsB,GAAG,UACpC,MAAa;QAEb,OAAO,UAAC,KAAgC;YACtC,OAAO,wBAAc,CAAC,wBAAgB,CAAC,KAAK,CAAC,EAAE;gBAC7C,IAAI,EAAE;oBACJ;wBACE,mDAAmD;wBACnD,UAAU,EAAE,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC;wBACnC,mDAAmD;wBACnD,SAAS,EAAE,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC;qBAClC;iBACF;aACF,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC,CAAC;IAfW,QAAA,sBAAsB,0BAejC","sourcesContent":["import { mergeStyleSets, HighContrastSelector } from '../../Styling';\nimport type { IKeytipStyleProps, IKeytipStyles } from './Keytip.types';\nimport type { ICalloutContentStyleProps, ICalloutContentStyles } from '../../Callout';\nimport type { IStyleFunction, Point } from '../../Utilities';\n\nexport const getStyles = (props: IKeytipStyleProps): IKeytipStyles => {\n  const { theme, disabled, visible } = props;\n  return {\n    container: [\n      {\n        backgroundColor: theme.palette.neutralDark,\n      },\n      disabled && {\n        opacity: 0.5,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n            opacity: 1,\n          },\n        },\n      },\n      !visible && {\n        visibility: 'hidden',\n      },\n    ],\n    root: [\n      theme.fonts.medium,\n      {\n        textAlign: 'center',\n        paddingLeft: '3px',\n        paddingRight: '3px',\n        backgroundColor: theme.palette.neutralDark,\n        color: theme.palette.neutralLight,\n        minWidth: '11px',\n        lineHeight: '17px',\n        height: '17px',\n        display: 'inline-block',\n      },\n      disabled && {\n        color: theme.palette.neutralTertiaryAlt,\n      },\n    ],\n  };\n};\n\nexport const getCalloutStyles = (props: ICalloutContentStyleProps): ICalloutContentStyles => {\n  return {\n    container: [],\n    root: [\n      {\n        border: 'none',\n        boxShadow: 'none',\n      },\n    ],\n    beak: [],\n    beakCurtain: [],\n    calloutMain: [\n      {\n        backgroundColor: 'transparent',\n      },\n    ],\n  };\n};\n\nexport const getCalloutOffsetStyles = (\n  offset: Point,\n): IStyleFunction<ICalloutContentStyleProps, ICalloutContentStyles> => {\n  return (props: ICalloutContentStyleProps): ICalloutContentStyles => {\n    return mergeStyleSets(getCalloutStyles(props), {\n      root: [\n        {\n          // eslint-disable-next-line deprecation/deprecation\n          marginLeft: offset.left || offset.x,\n          // eslint-disable-next-line deprecation/deprecation\n          marginTop: offset.top || offset.y,\n        },\n      ],\n    });\n  };\n};\n"]}
{"version":3,"file":"WeeklyDayPicker.base.js","sourceRoot":"../src/","sources":["components/WeeklyDayPicker/WeeklyDayPicker.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { classNamesFunction, css, KeyCodes, getRTL, initializeComponentRef } from '@fluentui/utilities';\nimport { AnimationDirection } from '../Calendar/Calendar.types';\nimport { CalendarDayGrid } from '../CalendarDayGrid/CalendarDayGrid';\nimport {\n  compareDatePart,\n  getStartDateOfWeek,\n  addDays,\n  addMonths,\n  compareDates,\n  FirstWeekOfYear,\n  DateRangeType,\n  DayOfWeek,\n  DEFAULT_DATE_FORMATTING,\n} from '@fluentui/date-time-utilities';\nimport { Icon } from '../../Icon';\nimport { defaultWeeklyDayPickerStrings, defaultWeeklyDayPickerNavigationIcons } from './defaults';\nimport type { IProcessedStyleSet } from '@fluentui/style-utilities';\nimport type {\n  IWeeklyDayPickerProps,\n  IWeeklyDayPickerStyleProps,\n  IWeeklyDayPickerStyles,\n} from './WeeklyDayPicker.types';\nimport type { ICalendarDayGrid } from '../CalendarDayGrid/CalendarDayGrid.types';\n\nconst getClassNames = classNamesFunction<IWeeklyDayPickerStyleProps, IWeeklyDayPickerStyles>();\n\nexport interface IWeeklyDayPickerState {\n  /** The currently focused date in the week picker, but not necessarily selected */\n  navigatedDate: Date;\n\n  /** The currently selected date in the calendar */\n  selectedDate: Date;\n\n  /** Tracking whether we just toggled showFullMonth */\n  previousShowFullMonth: boolean;\n\n  /** Whether to animate veritcally or horizontally */\n  animationDirection: AnimationDirection;\n}\n\nexport class WeeklyDayPickerBase extends React.Component<IWeeklyDayPickerProps, IWeeklyDayPickerState> {\n  public static defaultProps: IWeeklyDayPickerProps = {\n    onSelectDate: undefined,\n    initialDate: undefined,\n    today: new Date(),\n    firstDayOfWeek: DayOfWeek.Sunday,\n    strings: defaultWeeklyDayPickerStrings,\n    navigationIcons: defaultWeeklyDayPickerNavigationIcons,\n    dateTimeFormatter: DEFAULT_DATE_FORMATTING,\n    animationDirection: AnimationDirection.Horizontal,\n  };\n\n  private _dayGrid = React.createRef<ICalendarDayGrid>();\n  private _focusOnUpdate: boolean;\n  private _initialTouchX: number | undefined;\n\n  public static getDerivedStateFromProps(\n    nextProps: Readonly<IWeeklyDayPickerProps>,\n    prevState: Readonly<IWeeklyDayPickerState>,\n  ): Partial<IWeeklyDayPickerState> | null {\n    const currentDate =\n      nextProps.initialDate && !isNaN(nextProps.initialDate.getTime())\n        ? nextProps.initialDate\n        : nextProps.today || new Date();\n    const showFullMonth = !!nextProps.showFullMonth;\n    const newAnimationDirection =\n      showFullMonth !== prevState.previousShowFullMonth ? AnimationDirection.Vertical : AnimationDirection.Horizontal;\n\n    if (!compareDates(currentDate, prevState.selectedDate)) {\n      return {\n        selectedDate: currentDate,\n        navigatedDate: currentDate,\n        previousShowFullMonth: showFullMonth,\n        animationDirection: newAnimationDirection,\n      };\n    }\n\n    return {\n      selectedDate: currentDate,\n      navigatedDate: prevState.navigatedDate,\n      previousShowFullMonth: showFullMonth,\n      animationDirection: newAnimationDirection,\n    };\n  }\n\n  public constructor(props: IWeeklyDayPickerProps) {\n    super(props);\n\n    initializeComponentRef(this);\n\n    const currentDate =\n      props.initialDate && !isNaN(props.initialDate.getTime()) ? props.initialDate : props.today || new Date();\n\n    this.state = {\n      selectedDate: currentDate,\n      navigatedDate: currentDate,\n      previousShowFullMonth: !!props.showFullMonth,\n      animationDirection: props.animationDirection!,\n    };\n    this._focusOnUpdate = false;\n  }\n\n  public focus(): void {\n    if (this._dayGrid && this._dayGrid.current) {\n      this._dayGrid.current.focus();\n    }\n  }\n\n  public render(): JSX.Element {\n    const {\n      strings,\n      dateTimeFormatter,\n      firstDayOfWeek,\n      minDate,\n      maxDate,\n      restrictedDates,\n      today,\n      styles,\n      theme,\n      className,\n      showFullMonth,\n      weeksToShow,\n      ...calendarDayGridProps\n    } = this.props;\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      className: className,\n    });\n\n    return (\n      <div\n        className={classNames.root}\n        onKeyDown={this._onWrapperKeyDown}\n        onTouchStart={this._onTouchStart}\n        onTouchMove={this._onTouchMove}\n        aria-expanded={showFullMonth}\n      >\n        {this._renderPreviousWeekNavigationButton(classNames)}\n        <CalendarDayGrid\n          styles={styles}\n          componentRef={this._dayGrid}\n          strings={strings}\n          selectedDate={this.state.selectedDate!}\n          navigatedDate={this.state.navigatedDate!}\n          firstDayOfWeek={firstDayOfWeek!}\n          firstWeekOfYear={FirstWeekOfYear.FirstDay}\n          dateRangeType={DateRangeType.Day}\n          weeksToShow={showFullMonth ? weeksToShow : 1}\n          dateTimeFormatter={dateTimeFormatter!}\n          minDate={minDate}\n          maxDate={maxDate}\n          restrictedDates={restrictedDates}\n          onSelectDate={this._onSelectDate}\n          onNavigateDate={this._onNavigateDate}\n          today={today}\n          lightenDaysOutsideNavigatedMonth={showFullMonth}\n          animationDirection={this.state.animationDirection}\n          {...calendarDayGridProps}\n        />\n        {this._renderNextWeekNavigationButton(classNames)}\n      </div>\n    );\n  }\n\n  public componentDidUpdate(): void {\n    if (this._focusOnUpdate) {\n      this.focus();\n      this._focusOnUpdate = false;\n    }\n  }\n\n  private _onSelectDate = (date: Date): void => {\n    const { onSelectDate } = this.props;\n\n    // don't set the navigated date on selection because selection never causes navigation\n    this.setState({\n      selectedDate: date,\n    });\n    this._focusOnUpdate = true;\n\n    if (onSelectDate) {\n      onSelectDate(date);\n    }\n  };\n\n  private _onNavigateDate = (date: Date, focusOnNavigatedDay: boolean): void => {\n    const { onNavigateDate } = this.props;\n\n    this.setState({\n      navigatedDate: date,\n    });\n    this._focusOnUpdate = focusOnNavigatedDay;\n\n    if (onNavigateDate) {\n      onNavigateDate(date);\n    }\n  };\n\n  private _renderPreviousWeekNavigationButton = (\n    classNames: IProcessedStyleSet<IWeeklyDayPickerStyles>,\n  ): JSX.Element => {\n    const { minDate, firstDayOfWeek, navigationIcons } = this.props;\n    const { navigatedDate } = this.state;\n    const leftNavigationIcon = getRTL() ? navigationIcons!.rightNavigation : navigationIcons!.leftNavigation;\n\n    // determine if previous week in bounds\n    const prevWeekInBounds = minDate\n      ? compareDatePart(minDate, getStartDateOfWeek(navigatedDate, firstDayOfWeek!)) < 0\n      : true;\n\n    return (\n      <button\n        className={css(classNames.navigationIconButton, {\n          [classNames.disabledStyle]: !prevWeekInBounds,\n        })}\n        disabled={!prevWeekInBounds}\n        aria-disabled={!prevWeekInBounds}\n        onClick={prevWeekInBounds ? this._onSelectPrevDateRange : undefined}\n        onKeyDown={prevWeekInBounds ? this._onButtonKeyDown(this._onSelectPrevDateRange) : undefined}\n        title={this._createPreviousWeekAriaLabel()}\n        type=\"button\"\n      >\n        <Icon iconName={leftNavigationIcon} />\n      </button>\n    );\n  };\n\n  private _renderNextWeekNavigationButton = (classNames: IProcessedStyleSet<IWeeklyDayPickerStyles>): JSX.Element => {\n    const { maxDate, firstDayOfWeek, navigationIcons } = this.props;\n    const { navigatedDate } = this.state;\n    const rightNavigationIcon = getRTL() ? navigationIcons!.leftNavigation : navigationIcons!.rightNavigation;\n\n    // determine if next week in bounds\n    const nextWeekInBounds = maxDate\n      ? compareDatePart(addDays(getStartDateOfWeek(navigatedDate, firstDayOfWeek!), 7), maxDate) < 0\n      : true;\n\n    return (\n      <button\n        className={css(classNames.navigationIconButton, {\n          [classNames.disabledStyle]: !nextWeekInBounds,\n        })}\n        disabled={!nextWeekInBounds}\n        aria-disabled={!nextWeekInBounds}\n        onClick={nextWeekInBounds ? this._onSelectNextDateRange : undefined}\n        onKeyDown={nextWeekInBounds ? this._onButtonKeyDown(this._onSelectNextDateRange) : undefined}\n        title={this._createNextWeekAriaLabel()}\n        type=\"button\"\n      >\n        <Icon iconName={rightNavigationIcon} />\n      </button>\n    );\n  };\n\n  private _onSelectPrevDateRange = () => {\n    if (this.props.showFullMonth) {\n      this._navigateDate(addMonths(this.state.navigatedDate, -1));\n    } else {\n      this._navigateDate(addDays(this.state.navigatedDate, -7));\n    }\n  };\n\n  private _onSelectNextDateRange = () => {\n    if (this.props.showFullMonth) {\n      this._navigateDate(addMonths(this.state.navigatedDate, 1));\n    } else {\n      this._navigateDate(addDays(this.state.navigatedDate, 7));\n    }\n  };\n\n  private _navigateDate = (date: Date) => {\n    this.setState({\n      navigatedDate: date,\n    });\n    if (this.props.onNavigateDate) {\n      this.props.onNavigateDate(date);\n    }\n  };\n\n  private _onWrapperKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    switch (ev.which) {\n      case KeyCodes.enter:\n        ev.preventDefault();\n        break;\n\n      case KeyCodes.backspace:\n        ev.preventDefault();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  private _onButtonKeyDown = (callback: () => void): ((ev: React.KeyboardEvent<HTMLButtonElement>) => void) => {\n    return (ev: React.KeyboardEvent<HTMLButtonElement>) => {\n      // eslint-disable-next-line deprecation/deprecation\n      switch (ev.which) {\n        case KeyCodes.enter:\n          callback();\n          break;\n      }\n    };\n  };\n\n  private _onTouchStart = (ev: React.TouchEvent<HTMLDivElement>) => {\n    const touch = ev.touches[0];\n    if (touch) {\n      this._initialTouchX = touch.clientX;\n    }\n  };\n\n  private _onTouchMove = (ev: React.TouchEvent<HTMLDivElement>) => {\n    const isRtl = getRTL();\n    const touch = ev.touches[0];\n    if (touch && this._initialTouchX !== undefined && touch.clientX !== this._initialTouchX) {\n      if ((touch.clientX - this._initialTouchX) * (isRtl ? -1 : 1) < 0) {\n        // swipe right\n        this._onSelectNextDateRange();\n      } else {\n        // swipe left\n        this._onSelectPrevDateRange();\n      }\n      this._initialTouchX = undefined;\n    }\n  };\n\n  private _createPreviousWeekAriaLabel = () => {\n    const { strings, showFullMonth, firstDayOfWeek } = this.props;\n    const { navigatedDate } = this.state;\n\n    let ariaLabel = undefined;\n    if (showFullMonth && strings.prevMonthAriaLabel) {\n      ariaLabel = strings.prevMonthAriaLabel + ' ' + strings.months[addMonths(navigatedDate!, -1).getMonth()];\n    } else if (!showFullMonth && strings.prevWeekAriaLabel) {\n      const firstDayOfPreviousWeek = getStartDateOfWeek(addDays(navigatedDate!, -7), firstDayOfWeek!);\n      const lastDayOfPreviousWeek = addDays(firstDayOfPreviousWeek, 6);\n      ariaLabel =\n        strings.prevWeekAriaLabel + ' ' + this._formatDateRange(firstDayOfPreviousWeek, lastDayOfPreviousWeek);\n    }\n    return ariaLabel;\n  };\n\n  private _createNextWeekAriaLabel = () => {\n    const { strings, showFullMonth, firstDayOfWeek } = this.props;\n    const { navigatedDate } = this.state;\n\n    let ariaLabel = undefined;\n    if (showFullMonth && strings.nextMonthAriaLabel) {\n      ariaLabel = strings.nextMonthAriaLabel + ' ' + strings.months[addMonths(navigatedDate!, 1).getMonth()];\n    } else if (!showFullMonth && strings.nextWeekAriaLabel) {\n      const firstDayOfNextWeek = getStartDateOfWeek(addDays(navigatedDate!, 7), firstDayOfWeek!);\n      const lastDayOfNextWeek = addDays(firstDayOfNextWeek, 6);\n      ariaLabel = strings.nextWeekAriaLabel + ' ' + this._formatDateRange(firstDayOfNextWeek, lastDayOfNextWeek);\n    }\n    return ariaLabel;\n  };\n\n  private _formatDateRange = (startDate: Date, endDate: Date) => {\n    const { dateTimeFormatter, strings } = this.props;\n    return `${dateTimeFormatter?.formatMonthDayYear(startDate, strings)} - ${dateTimeFormatter?.formatMonthDayYear(\n      endDate,\n      strings,\n    )}`;\n  };\n}\n"]}
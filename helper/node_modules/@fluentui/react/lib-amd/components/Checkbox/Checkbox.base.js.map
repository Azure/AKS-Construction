{"version":3,"file":"Checkbox.base.js","sourceRoot":"../src/","sources":["components/Checkbox/Checkbox.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useControllableValue, useId, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport { useFocusRects, classNamesFunction } from '@fluentui/utilities';\nimport { Icon } from '../Icon/Icon';\nimport type { ICheckboxProps, ICheckboxStyleProps, ICheckboxStyles } from './Checkbox.types';\n\nconst getClassNames = classNamesFunction<ICheckboxStyleProps, ICheckboxStyles>();\n\nexport const CheckboxBase: React.FunctionComponent<ICheckboxProps> = React.forwardRef<HTMLDivElement, ICheckboxProps>(\n  (props, forwardedRef) => {\n    const {\n      disabled,\n      required,\n      inputProps,\n      name,\n      ariaLabel,\n      ariaLabelledBy,\n      ariaDescribedBy,\n      ariaPositionInSet,\n      ariaSetSize,\n      title,\n      checkmarkIconProps,\n      styles,\n      theme,\n      className,\n      boxSide = 'start',\n    } = props;\n\n    const id = useId('checkbox-', props.id);\n\n    const rootRef = React.useRef<HTMLDivElement | null>(null);\n    const mergedRootRefs: React.Ref<HTMLDivElement> = useMergedRefs(rootRef, forwardedRef);\n    const inputRef = React.useRef<HTMLInputElement>(null);\n\n    const [isChecked, setIsChecked] = useControllableValue(props.checked, props.defaultChecked, props.onChange);\n    const [isIndeterminate, setIsIndeterminate] = useControllableValue(props.indeterminate, props.defaultIndeterminate);\n\n    useFocusRects(rootRef);\n    useDebugWarning(props);\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      disabled,\n      indeterminate: isIndeterminate,\n      checked: isChecked,\n      reversed: boxSide !== 'start',\n      isUsingCustomLabelRender: !!props.onRenderLabel,\n    });\n\n    const onChange = React.useCallback(\n      (event: React.ChangeEvent<HTMLElement>): void => {\n        if (isIndeterminate) {\n          // If indeterminate, clicking the checkbox *only* removes the indeterminate state (or if\n          // controlled, lets the consumer know to change it by calling onChange). It doesn't\n          // change the checked state.\n          setIsChecked(!!isChecked, event);\n          setIsIndeterminate(false);\n        } else {\n          setIsChecked(!isChecked, event);\n        }\n      },\n      [setIsChecked, setIsIndeterminate, isIndeterminate, isChecked],\n    );\n\n    const defaultLabelRenderer = React.useCallback(\n      (checkboxProps?: ICheckboxProps): JSX.Element | null => {\n        if (!checkboxProps) {\n          return null;\n        }\n        return checkboxProps.label ? (\n          <span className={classNames.text} title={checkboxProps.title}>\n            {checkboxProps.label}\n          </span>\n        ) : null;\n      },\n      [classNames.text],\n    );\n\n    const setNativeIndeterminate = React.useCallback(\n      (indeterminate: boolean | undefined) => {\n        if (!inputRef.current) {\n          return;\n        }\n\n        const value = !!indeterminate;\n\n        inputRef.current.indeterminate = value;\n        setIsIndeterminate(value);\n      },\n      [setIsIndeterminate],\n    );\n\n    useComponentRef(props, isChecked, isIndeterminate, setNativeIndeterminate, inputRef);\n    React.useEffect(() => setNativeIndeterminate(isIndeterminate), [setNativeIndeterminate, isIndeterminate]);\n\n    const onRenderLabel = props.onRenderLabel || defaultLabelRenderer;\n\n    const ariaChecked: React.InputHTMLAttributes<HTMLInputElement>['aria-checked'] = isIndeterminate\n      ? 'mixed'\n      : undefined;\n\n    const mergedInputProps: React.InputHTMLAttributes<HTMLInputElement> = {\n      className: classNames.input,\n      type: 'checkbox' as React.InputHTMLAttributes<HTMLInputElement>['type'],\n      ...inputProps,\n      checked: !!isChecked,\n      disabled,\n      required,\n      name,\n      id,\n      title,\n      onChange,\n      'aria-disabled': disabled,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-describedby': ariaDescribedBy,\n      'aria-posinset': ariaPositionInSet,\n      'aria-setsize': ariaSetSize,\n      'aria-checked': ariaChecked,\n    };\n\n    return (\n      <div className={classNames.root} title={title} ref={mergedRootRefs}>\n        <input {...mergedInputProps} ref={inputRef} title={title} data-ktp-execute-target={true} />\n        <label className={classNames.label} htmlFor={id}>\n          <div className={classNames.checkbox} data-ktp-target={true}>\n            <Icon iconName=\"CheckMark\" {...checkmarkIconProps} className={classNames.checkmark} />\n          </div>\n          {onRenderLabel(props, defaultLabelRenderer)}\n        </label>\n      </div>\n    );\n  },\n);\n\nCheckboxBase.displayName = 'CheckboxBase';\n\nfunction useDebugWarning(props: ICheckboxProps) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: 'Checkbox',\n      props,\n      mutuallyExclusive: {\n        checked: 'defaultChecked',\n        indeterminate: 'defaultIndeterminate',\n      },\n    });\n  }\n}\n\nfunction useComponentRef(\n  props: ICheckboxProps,\n  isChecked: boolean | undefined,\n  isIndeterminate: boolean | undefined,\n  setIndeterminate: (indeterminate: boolean) => void,\n  checkBoxRef: React.RefObject<HTMLInputElement>,\n) {\n  React.useImperativeHandle(\n    props.componentRef,\n    () => ({\n      get checked() {\n        return !!isChecked;\n      },\n      get indeterminate() {\n        return !!isIndeterminate;\n      },\n      set indeterminate(indeterminate: boolean) {\n        setIndeterminate(indeterminate);\n      },\n      focus() {\n        if (checkBoxRef.current) {\n          checkBoxRef.current.focus();\n        }\n      },\n    }),\n    [checkBoxRef, isChecked, isIndeterminate, setIndeterminate],\n  );\n}\n"]}
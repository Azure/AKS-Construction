{"version":3,"file":"HoverCard.base.js","sourceRoot":"../src/","sources":["components/HoverCard/HoverCard.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport {\n  divProperties,\n  getNativeProps,\n  getId,\n  KeyCodes,\n  getDocument,\n  classNamesFunction,\n  initializeComponentRef,\n  EventGroup,\n  Async,\n} from '../../Utilities';\nimport { OpenCardMode, HoverCardType } from './HoverCard.types';\nimport { ExpandingCard } from './ExpandingCard';\nimport { ExpandingCardMode } from './ExpandingCard.types';\nimport { PlainCard } from './PlainCard/PlainCard';\nimport type { IHoverCardProps, IHoverCardStyles, IHoverCardStyleProps, IHoverCard } from './HoverCard.types';\nimport type { IExpandingCardProps } from './ExpandingCard.types';\nimport type { IPlainCardProps } from './PlainCard/PlainCard.types';\n\nconst getClassNames = classNamesFunction<IHoverCardStyleProps, IHoverCardStyles>();\n\nexport interface IHoverCardState {\n  isHoverCardVisible?: boolean;\n  mode?: ExpandingCardMode;\n  openMode?: OpenCardMode;\n}\n\nexport class HoverCardBase extends React.Component<IHoverCardProps, IHoverCardState> implements IHoverCard {\n  public static defaultProps = {\n    cardOpenDelay: 500,\n    cardDismissDelay: 100,\n    expandedCardOpenDelay: 1500,\n    instantOpenOnClick: false,\n    setInitialFocus: false,\n    openHotKey: KeyCodes.c as KeyCodes,\n    type: HoverCardType.expanding,\n  };\n\n  // The wrapping div that gets the hover events\n  private _hoverCard = React.createRef<HTMLDivElement>();\n  private _dismissTimerId: number;\n  private _openTimerId: number;\n  private _currentMouseTarget: EventTarget | null;\n\n  private _nativeDismissEvent: (ev?: any) => void;\n  private _childDismissEvent: (ev?: any) => void;\n\n  private _classNames: { [key in keyof IHoverCardStyles]: string };\n\n  private _async: Async;\n  private _events: EventGroup;\n\n  // Constructor\n  constructor(props: IHoverCardProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n\n    this._nativeDismissEvent = this._cardDismiss.bind(this, true);\n    this._childDismissEvent = this._cardDismiss.bind(this, false);\n\n    this.state = {\n      isHoverCardVisible: false,\n      mode: ExpandingCardMode.compact,\n      openMode: OpenCardMode.hover,\n    };\n  }\n\n  public componentDidMount(): void {\n    this._setEventListeners();\n  }\n\n  public componentWillUnmount(): void {\n    this._async.dispose();\n    this._events.dispose();\n  }\n\n  public componentDidUpdate(prevProps: IHoverCardProps, prevState: IHoverCardState) {\n    if (prevProps.target !== this.props.target) {\n      this._events.off();\n      this._setEventListeners();\n    }\n\n    if (prevState.isHoverCardVisible !== this.state.isHoverCardVisible) {\n      if (this.state.isHoverCardVisible) {\n        this._async.setTimeout(() => {\n          this.setState(\n            {\n              mode: ExpandingCardMode.expanded,\n            },\n            () => {\n              this.props.onCardExpand && this.props.onCardExpand();\n            },\n          );\n        }, this.props.expandedCardOpenDelay!);\n        this.props.onCardVisible && this.props.onCardVisible();\n      } else {\n        this.setState({\n          mode: ExpandingCardMode.compact,\n        });\n        this.props.onCardHide && this.props.onCardHide();\n      }\n    }\n  }\n\n  public dismiss = (withTimeOut?: boolean): void => {\n    this._async.clearTimeout(this._openTimerId);\n    this._async.clearTimeout(this._dismissTimerId);\n    if (!withTimeOut) {\n      this._setDismissedState();\n    } else {\n      this._dismissTimerId = this._async.setTimeout(() => {\n        this._setDismissedState();\n      }, this.props.cardDismissDelay!);\n    }\n  };\n\n  // Render\n  public render(): JSX.Element {\n    const {\n      expandingCardProps,\n      children,\n      id,\n      setAriaDescribedBy = true,\n      styles: customStyles,\n      theme,\n      className,\n      type,\n      plainCardProps,\n      trapFocus,\n      setInitialFocus,\n    } = this.props;\n    const { isHoverCardVisible, mode, openMode } = this.state;\n    const hoverCardId = id || getId('hoverCard');\n\n    this._classNames = getClassNames(customStyles, {\n      theme: theme!,\n      className,\n    });\n\n    // Common props for both card types.\n    const commonCardProps = {\n      ...getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties),\n      id: hoverCardId,\n      trapFocus: !!trapFocus,\n      firstFocus: setInitialFocus || openMode === OpenCardMode.hotKey,\n      targetElement: this._getTargetElement(this.props.target),\n      onEnter: this._cardOpen,\n      onLeave: this._childDismissEvent,\n    };\n\n    const finalExpandedCardProps: IExpandingCardProps = { ...expandingCardProps, ...commonCardProps, mode };\n    const finalPlainCardProps: IPlainCardProps = { ...plainCardProps, ...commonCardProps };\n\n    return (\n      <div\n        className={this._classNames.host}\n        ref={this._hoverCard}\n        aria-describedby={setAriaDescribedBy && isHoverCardVisible ? hoverCardId : undefined}\n        data-is-focusable={!this.props.target}\n      >\n        {children}\n        {isHoverCardVisible &&\n          (type === HoverCardType.expanding ? (\n            <ExpandingCard {...finalExpandedCardProps} />\n          ) : (\n            <PlainCard {...finalPlainCardProps} />\n          ))}\n      </div>\n    );\n  }\n\n  private _getTargetElement(target?: HTMLElement | string | null): HTMLElement | undefined {\n    switch (typeof target) {\n      case 'string':\n        return getDocument()!.querySelector(target as string) as HTMLElement;\n\n      case 'object':\n        return target as HTMLElement;\n\n      default:\n        return this._hoverCard.current || undefined;\n    }\n  }\n\n  private _shouldBlockHoverCard(): boolean {\n    return !!(this.props.shouldBlockHoverCard && this.props.shouldBlockHoverCard());\n  }\n\n  // Show HoverCard\n  private _cardOpen = (ev: MouseEvent): void => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (this._shouldBlockHoverCard() || (ev.type === 'keydown' && !(ev.which === this.props.openHotKey))) {\n      return;\n    }\n    this._async.clearTimeout(this._dismissTimerId);\n    if (ev.type === 'mouseenter') {\n      this._currentMouseTarget = ev.currentTarget;\n    }\n\n    this._executeCardOpen(ev);\n  };\n\n  private _executeCardOpen = (ev: MouseEvent): void => {\n    this._async.clearTimeout(this._openTimerId);\n    this._openTimerId = this._async.setTimeout(() => {\n      this.setState((prevState: IHoverCardState) => {\n        if (!prevState.isHoverCardVisible) {\n          return {\n            isHoverCardVisible: true,\n            mode: ExpandingCardMode.compact,\n            openMode: ev.type === 'keydown' ? OpenCardMode.hotKey : OpenCardMode.hover,\n          };\n        }\n\n        return prevState;\n      });\n    }, this.props.cardOpenDelay!);\n  };\n\n  /**\n   * Hide HoverCard\n   * How we dismiss the card depends on where the callback is coming from.\n   * This is provided by the `isNativeEvent` argument.\n   *  true: Event is coming from event listeners set up in componentDidMount.\n   *  false: Event is coming from the `onLeave` prop from the HoverCard component.\n   */\n  private _cardDismiss = (\n    isNativeEvent: boolean,\n    ev: MouseEvent | React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n  ) => {\n    if (isNativeEvent) {\n      // We expect these to be MouseEvents, If not, return.\n      if (!(ev instanceof MouseEvent)) {\n        return;\n      }\n\n      // eslint-disable-next-line deprecation/deprecation\n      if (ev.type === 'keydown' && ev.which !== KeyCodes.escape) {\n        return;\n      }\n\n      // Dismiss if not sticky and currentTarget is the same element that mouse last entered\n      // eslint-disable-next-line deprecation/deprecation\n      if (!this.props.sticky && (this._currentMouseTarget === ev.currentTarget || ev.which === KeyCodes.escape)) {\n        this.dismiss(true);\n      }\n    } else {\n      // If this is a mouseleave event and the component is sticky, do not dismiss.\n      if (\n        this.props.sticky &&\n        !(ev instanceof MouseEvent) &&\n        ev.nativeEvent instanceof MouseEvent &&\n        ev.type === 'mouseleave'\n      ) {\n        return;\n      }\n\n      this.dismiss(true);\n    }\n  };\n\n  private _setDismissedState = () => {\n    this.setState({\n      isHoverCardVisible: false,\n      mode: ExpandingCardMode.compact,\n      openMode: OpenCardMode.hover,\n    });\n  };\n\n  private _instantOpenAsExpanded = (ev: React.MouseEvent<HTMLDivElement>): void => {\n    this._async.clearTimeout(this._dismissTimerId);\n\n    this.setState((prevState: IHoverCardState) => {\n      if (!prevState.isHoverCardVisible) {\n        return {\n          isHoverCardVisible: true,\n          mode: ExpandingCardMode.expanded,\n        };\n      }\n\n      return prevState;\n    });\n  };\n\n  private _setEventListeners = (): void => {\n    const { trapFocus, instantOpenOnClick, eventListenerTarget } = this.props;\n    const target = eventListenerTarget\n      ? this._getTargetElement(eventListenerTarget)\n      : this._getTargetElement(this.props.target);\n    const nativeEventDismiss = this._nativeDismissEvent;\n\n    // target can be undefined if ref isn't available, only assign\n    // events when defined to avoid throwing exception.\n    if (target) {\n      this._events.on(target, 'mouseenter', this._cardOpen);\n      this._events.on(target, 'mouseleave', nativeEventDismiss);\n      if (trapFocus) {\n        this._events.on(target, 'keydown', this._cardOpen);\n      } else {\n        this._events.on(target, 'focus', this._cardOpen);\n        this._events.on(target, 'blur', nativeEventDismiss);\n      }\n      if (instantOpenOnClick) {\n        this._events.on(target, 'click', this._instantOpenAsExpanded);\n      } else {\n        this._events.on(target, 'mousedown', nativeEventDismiss);\n        this._events.on(target, 'keydown', nativeEventDismiss);\n      }\n    }\n  };\n}\n"]}
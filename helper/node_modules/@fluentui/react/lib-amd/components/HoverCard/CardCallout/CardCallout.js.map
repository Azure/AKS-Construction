{"version":3,"file":"CardCallout.js","sourceRoot":"../src/","sources":["components/HoverCard/CardCallout/CardCallout.tsx"],"names":[],"mappings":";;;;IAaO,IAAM,WAAW,GAAG,UAAC,KAAwB;QAEhD,IAAA,KAWE,KAAK,SAXK,EAAZ,QAAQ,mBAAG,CAAC,KAAA,EACZ,KAUE,KAAK,gBAVyC,EAAhD,eAAe,mBAAG,iCAAe,CAAC,cAAc,KAAA,EAChD,oBAAoB,GASlB,KAAK,qBATa,EACpB,aAAa,GAQX,KAAK,cARM,EACb,UAAU,GAOR,KAAK,WAPG,EACV,SAAS,GAMP,KAAK,UANE,EACT,OAAO,GAKL,KAAK,QALA,EACP,SAAS,GAIP,KAAK,UAJE,EACT,WAAW,GAGT,KAAK,YAHI,EACX,OAAO,GAEL,KAAK,QAFA,EACP,YAAY,GACV,KAAK,aADK,CACJ;QAEV,IAAM,kBAAkB,0DACnB,0BAAc,CAAC,KAAK,EAAE,yBAAa,CAAC,KACvC,SAAS,EAAE,SAAS,EACpB,MAAM,EAAE,aAAa,EACrB,aAAa,EAAE,KAAK,EACpB,eAAe,EAAE,eAAe,EAChC,oBAAoB,EAAE,oBAAoB,EAC1C,WAAW,EAAE,WAAW,EACxB,cAAc,EAAE,EAAE,EAClB,SAAS,EAAE,OAAO,EAClB,QAAQ,EAAE,QAAQ,KACf,YAAY,CAChB,CAAC;QAEF,OAAO,CACL,0CACG,SAAS,CAAC,CAAC,CAAC,CACX,oBAAC,0BAAgB,uBACX,kBAAkB,IACtB,cAAc,EAAE;gBACd,oBAAoB,EAAE,KAAK;gBAC3B,2BAA2B,EAAE,IAAI;gBACjC,iBAAiB,EAAE,CAAC,UAAU;aAC/B,KAEA,OAAO,CACS,CACpB,CAAC,CAAC,CAAC,CACF,oBAAC,iBAAO,uBAAK,kBAAkB,GAAG,OAAO,CAAW,CACrD,CACA,CACJ,CAAC;IACJ,CAAC,CAAC;IA/CW,QAAA,WAAW,eA+CtB","sourcesContent":["import * as React from 'react';\n\nimport { divProperties, getNativeProps } from '../../../Utilities';\nimport { DirectionalHint } from '../../../common/DirectionalHint';\nimport { Callout, FocusTrapCallout } from '../../../Callout';\nimport type { IBaseCardProps } from '../BaseCard.types';\nimport type { ICalloutProps } from '../../../Callout';\n\nexport interface ICardCalloutProps extends IBaseCardProps<{}, {}, {}> {\n  finalHeight?: number;\n  content?: JSX.Element;\n}\n\nexport const CardCallout = (props: ICardCalloutProps) => {\n  const {\n    gapSpace = 0,\n    directionalHint = DirectionalHint.bottomLeftEdge,\n    directionalHintFixed,\n    targetElement,\n    firstFocus,\n    trapFocus,\n    onLeave,\n    className,\n    finalHeight,\n    content,\n    calloutProps,\n  } = props;\n\n  const mergedCalloutProps: ICalloutProps = {\n    ...getNativeProps(props, divProperties),\n    className: className,\n    target: targetElement,\n    isBeakVisible: false,\n    directionalHint: directionalHint,\n    directionalHintFixed: directionalHintFixed,\n    finalHeight: finalHeight,\n    minPagePadding: 24,\n    onDismiss: onLeave,\n    gapSpace: gapSpace,\n    ...calloutProps,\n  };\n\n  return (\n    <>\n      {trapFocus ? (\n        <FocusTrapCallout\n          {...mergedCalloutProps}\n          focusTrapProps={{\n            forceFocusInsideTrap: false,\n            isClickableOutsideFocusTrap: true,\n            disableFirstFocus: !firstFocus,\n          }}\n        >\n          {content}\n        </FocusTrapCallout>\n      ) : (\n        <Callout {...mergedCalloutProps}>{content}</Callout>\n      )}\n    </>\n  );\n};\n"]}
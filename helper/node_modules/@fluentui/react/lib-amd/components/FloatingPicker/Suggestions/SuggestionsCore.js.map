{"version":3,"file":"SuggestionsCore.js","sourceRoot":"../src/","sources":["components/FloatingPicker/Suggestions/SuggestionsCore.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { initializeComponentRef, css } from '../../../Utilities';\nimport { SuggestionsItem } from '../../../Pickers';\nimport * as stylesImport from './SuggestionsCore.scss';\nimport type { ISuggestionItemProps, ISuggestionModel } from '../../../Pickers';\nimport type { ISuggestionsCoreProps } from './Suggestions.types';\n\nconst styles: any = stylesImport;\n\n/**\n * Class when used with SuggestionsStore, renders a basic suggestions control\n */\nexport class SuggestionsCore<T> extends React.Component<ISuggestionsCoreProps<T>, {}> {\n  public currentIndex: number;\n  public currentSuggestion: ISuggestionModel<T> | undefined;\n  protected _selectedElement = React.createRef<HTMLDivElement>();\n  private SuggestionsItemOfProperType: new (props: ISuggestionItemProps<T>) => SuggestionsItem<T> = SuggestionsItem;\n\n  constructor(suggestionsProps: ISuggestionsCoreProps<T>) {\n    super(suggestionsProps);\n\n    initializeComponentRef(this);\n    this.currentIndex = -1;\n  }\n\n  /**\n   * Increments the selected suggestion index\n   */\n  public nextSuggestion(): boolean {\n    const { suggestions } = this.props;\n\n    if (suggestions && suggestions.length > 0) {\n      if (this.currentIndex === -1) {\n        this.setSelectedSuggestion(0);\n        return true;\n      } else if (this.currentIndex < suggestions.length - 1) {\n        this.setSelectedSuggestion(this.currentIndex + 1);\n        return true;\n      } else if (this.props.shouldLoopSelection && this.currentIndex === suggestions.length - 1) {\n        this.setSelectedSuggestion(0);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Decrements the selected suggestion index\n   */\n  public previousSuggestion(): boolean {\n    const { suggestions } = this.props;\n\n    if (suggestions && suggestions.length > 0) {\n      if (this.currentIndex === -1) {\n        this.setSelectedSuggestion(suggestions.length - 1);\n        return true;\n      } else if (this.currentIndex > 0) {\n        this.setSelectedSuggestion(this.currentIndex - 1);\n        return true;\n      } else if (this.props.shouldLoopSelection && this.currentIndex === 0) {\n        this.setSelectedSuggestion(suggestions.length - 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public get selectedElement(): HTMLDivElement | undefined {\n    return this._selectedElement.current || undefined;\n  }\n\n  public getCurrentItem(): ISuggestionModel<T> {\n    return this.props.suggestions[this.currentIndex];\n  }\n\n  public getSuggestionAtIndex(index: number): ISuggestionModel<T> {\n    return this.props.suggestions[index];\n  }\n\n  public hasSuggestionSelected(): boolean {\n    return this.currentIndex !== -1 && this.currentIndex < this.props.suggestions.length;\n  }\n\n  public removeSuggestion(index: number): void {\n    this.props.suggestions.splice(index, 1);\n  }\n\n  public deselectAllSuggestions(): void {\n    if (this.currentIndex > -1 && this.props.suggestions[this.currentIndex]) {\n      this.props.suggestions[this.currentIndex].selected = false;\n      this.currentIndex = -1;\n      this.forceUpdate();\n    }\n  }\n\n  public setSelectedSuggestion(index: number): void {\n    const { suggestions } = this.props;\n\n    if (index > suggestions.length - 1 || index < 0) {\n      this.currentIndex = 0;\n      this.currentSuggestion!.selected = false;\n      this.currentSuggestion = suggestions[0];\n      this.currentSuggestion.selected = true;\n    } else {\n      if (this.currentIndex > -1 && suggestions[this.currentIndex]) {\n        suggestions[this.currentIndex].selected = false;\n      }\n      suggestions[index].selected = true;\n      this.currentIndex = index;\n      this.currentSuggestion = suggestions[index];\n    }\n\n    this.forceUpdate();\n  }\n\n  public componentDidUpdate(): void {\n    this.scrollSelected();\n  }\n\n  public render(): JSX.Element {\n    const {\n      onRenderSuggestion,\n      suggestionsItemClassName,\n      resultsMaximumNumber,\n      showRemoveButtons,\n      suggestionsContainerAriaLabel,\n    } = this.props;\n    const TypedSuggestionsItem = this.SuggestionsItemOfProperType;\n    let { suggestions } = this.props;\n\n    if (resultsMaximumNumber) {\n      suggestions = suggestions.slice(0, resultsMaximumNumber);\n    }\n\n    return (\n      <div\n        className={css('ms-Suggestions-container', styles.suggestionsContainer)}\n        id=\"suggestion-list\"\n        role=\"listbox\"\n        aria-label={suggestionsContainerAriaLabel}\n      >\n        {suggestions.map((suggestion: ISuggestionModel<T>, index: number) => (\n          <div\n            ref={suggestion.selected || index === this.currentIndex ? this._selectedElement : undefined}\n            key={(suggestion.item as any).key ? (suggestion.item as any).key : index}\n            id={'sug-' + index}\n          >\n            <TypedSuggestionsItem\n              id={'sug-item' + index}\n              suggestionModel={suggestion}\n              RenderSuggestion={onRenderSuggestion as any}\n              onClick={this._onClickTypedSuggestionsItem(suggestion.item, index)}\n              className={suggestionsItemClassName}\n              showRemoveButton={showRemoveButtons}\n              onRemoveItem={this._onRemoveTypedSuggestionsItem(suggestion.item, index)}\n              isSelectedOverride={index === this.currentIndex}\n            />\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  // TODO get the element to scroll into view properly regardless of direction.\n  public scrollSelected(): void {\n    if (this._selectedElement.current?.scrollIntoView !== undefined) {\n      this._selectedElement.current.scrollIntoView(false);\n    }\n  }\n\n  private _onClickTypedSuggestionsItem = (item: T, index: number): ((ev: React.MouseEvent<HTMLElement>) => void) => {\n    return (ev: React.MouseEvent<HTMLElement>): void => {\n      this.props.onSuggestionClick(ev, item, index);\n    };\n  };\n\n  private _onRemoveTypedSuggestionsItem = (item: T, index: number): ((ev: React.MouseEvent<HTMLElement>) => void) => {\n    return (ev: React.MouseEvent<HTMLElement>): void => {\n      const onSuggestionRemove = this.props.onSuggestionRemove!;\n      onSuggestionRemove(ev, item, index);\n      ev.stopPropagation();\n    };\n  };\n}\n"]}
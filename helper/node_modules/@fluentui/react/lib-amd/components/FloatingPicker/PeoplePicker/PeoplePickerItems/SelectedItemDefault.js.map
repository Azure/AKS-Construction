{"version":3,"file":"SelectedItemDefault.js","sourceRoot":"../src/","sources":["components/FloatingPicker/PeoplePicker/PeoplePickerItems/SelectedItemDefault.tsx"],"names":[],"mappings":";;;;IAOA,IAAM,MAAM,GAAQ,YAAY,CAAC;IAE1B,IAAM,mBAAmB,GAAmD,UACjF,qBAA6C;;QAErC,IAAA,IAAI,GAA2D,qBAAqB,KAAhF,EAAE,YAAY,GAA6C,qBAAqB,aAAlE,EAAE,KAAK,GAAsC,qBAAqB,MAA3D,EAAE,QAAQ,GAA4B,qBAAqB,SAAjD,EAAE,qBAAqB,GAAK,qBAAqB,sBAA1B,CAA2B;QAE7F,IAAM,MAAM,GAAG,iBAAK,EAAE,CAAC;QACvB,IAAM,iBAAiB,GAAG,UAAC,UAAoC;YAC7D,OAAO;gBACL,IAAI,UAAU,EAAE;oBACd,UAAU,EAAE,CAAC;iBACd;YACH,CAAC,CAAC;QACJ,CAAC,CAAC;QAEF,OAAO,CACL,6BACE,SAAS,EAAE,eAAG,CACZ,4BAA4B,EAC5B,MAAM,CAAC,gBAAgB,YACrB,GAAC,cAAc,GAAG,MAAM,CAAC,0BAA0B,IAAG,QAAQ,iBAC9D,GAAC,aAAa,GAAG,MAAM,CAAC,eAAe,IAAG,CAAC,IAAI,CAAC,OAAO,MAC1D,uBACkB,IAAI,2BACA,IAAI,0BACL,KAAK,EAC3B,IAAI,EAAE,UAAU,qBACC,sBAAsB,GAAG,MAAM;YAEhD,6BAAK,SAAS,EAAE,eAAG,CAAC,uBAAuB,EAAE,MAAM,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,sBAAsB,GAAG,MAAM;gBACnG,oBAAC,iBAAO,uBACF,IAAI,IACR,QAAQ,EAAE,IAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,yBAAe,CAAC,IAAI;oBAC5E,mDAAmD;oBACnD,IAAI,EAAE,qBAAW,CAAC,MAAM,IACxB,CACE;YACN,oBAAC,mBAAU,IACT,OAAO,EAAE,iBAAiB,CAAC,YAAY,CAAC,EACxC,SAAS,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAC9D,SAAS,EAAE,eAAG,CAAC,4BAA4B,EAAE,MAAM,CAAC,YAAY,CAAC,EACjE,SAAS,EAAE,qBAAqB,GAChC,CACE,CACP,CAAC;IACJ,CAAC,CAAC;IA5CW,QAAA,mBAAmB,uBA4C9B","sourcesContent":["import * as React from 'react';\nimport { css, getId } from '../../../../Utilities';\nimport { Persona, PersonaSize, PersonaPresence } from '../../../../Persona';\nimport { IconButton } from '../../../../Button';\nimport * as stylesImport from './PickerItemsDefault.scss';\nimport type { IPeoplePickerItemProps } from '../../../../ExtendedPicker';\n\nconst styles: any = stylesImport;\n\nexport const SelectedItemDefault: (props: IPeoplePickerItemProps) => JSX.Element = (\n  peoplePickerItemProps: IPeoplePickerItemProps,\n) => {\n  const { item, onRemoveItem, index, selected, removeButtonAriaLabel } = peoplePickerItemProps;\n\n  const itemId = getId();\n  const onClickIconButton = (removeItem: (() => void) | undefined): (() => void) => {\n    return (): void => {\n      if (removeItem) {\n        removeItem();\n      }\n    };\n  };\n\n  return (\n    <div\n      className={css(\n        'ms-PickerPersona-container',\n        styles.personaContainer,\n        { ['is-selected ' + styles.personaContainerIsSelected]: selected },\n        { ['is-invalid ' + styles.validationError]: !item.isValid },\n      )}\n      data-is-focusable={true}\n      data-is-sub-focuszone={true}\n      data-selection-index={index}\n      role={'listitem'}\n      aria-labelledby={'selectedItemPersona-' + itemId}\n    >\n      <div className={css('ms-PickerItem-content', styles.itemContent)} id={'selectedItemPersona-' + itemId}>\n        <Persona\n          {...item}\n          presence={item.presence !== undefined ? item.presence : PersonaPresence.none}\n          // eslint-disable-next-line deprecation/deprecation\n          size={PersonaSize.size28}\n        />\n      </div>\n      <IconButton\n        onClick={onClickIconButton(onRemoveItem)}\n        iconProps={{ iconName: 'Cancel', style: { fontSize: '12px' } }}\n        className={css('ms-PickerItem-removeButton', styles.removeButton)}\n        ariaLabel={removeButtonAriaLabel}\n      />\n    </div>\n  );\n};\n"]}
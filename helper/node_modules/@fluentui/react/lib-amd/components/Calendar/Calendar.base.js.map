{"version":3,"file":"Calendar.base.js","sourceRoot":"../src/","sources":["components/Calendar/Calendar.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  DayOfWeek,\n  FirstWeekOfYear,\n  DateRangeType,\n  addMonths,\n  addYears,\n  DEFAULT_CALENDAR_STRINGS,\n  DEFAULT_DATE_FORMATTING,\n} from '@fluentui/date-time-utilities';\nimport { CalendarDay } from './CalendarDay/CalendarDay';\nimport { CalendarMonth } from './CalendarMonth/CalendarMonth';\nimport {\n  css,\n  KeyCodes,\n  classNamesFunction,\n  focusAsync,\n  format,\n  FocusRects,\n  getPropsWithDefaults,\n  getWindow,\n} from '@fluentui/utilities';\nimport { useControllableValue } from '@fluentui/react-hooks';\nimport { defaultCalendarNavigationIcons } from './defaults';\nimport type { ICalendarProps, ICalendarStyleProps, ICalendarStyles } from './Calendar.types';\nimport type { ICalendarDay } from './CalendarDay/CalendarDay.types';\nimport type { ICalendarMonth } from './CalendarMonth/CalendarMonth.types';\n\nconst MIN_SIZE_FORCE_OVERLAY = 440;\n\nconst getClassNames = classNamesFunction<ICalendarStyleProps, ICalendarStyles>();\n\nconst defaultWorkWeekDays: DayOfWeek[] = [\n  DayOfWeek.Monday,\n  DayOfWeek.Tuesday,\n  DayOfWeek.Wednesday,\n  DayOfWeek.Thursday,\n  DayOfWeek.Friday,\n];\n\nconst DEFAULT_PROPS: Partial<ICalendarProps> = {\n  isMonthPickerVisible: true,\n  isDayPickerVisible: true,\n  showMonthPickerAsOverlay: false,\n  today: new Date(),\n  firstDayOfWeek: DayOfWeek.Sunday,\n  dateRangeType: DateRangeType.Day,\n  showGoToToday: true,\n  strings: DEFAULT_CALENDAR_STRINGS,\n  highlightCurrentMonth: false,\n  highlightSelectedMonth: false,\n  navigationIcons: defaultCalendarNavigationIcons,\n  showWeekNumbers: false,\n  firstWeekOfYear: FirstWeekOfYear.FirstDay,\n  dateTimeFormatter: DEFAULT_DATE_FORMATTING,\n  showSixWeeksByDefault: false,\n  workWeekDays: defaultWorkWeekDays,\n  showCloseButton: false,\n  allFocusable: false,\n};\n\nfunction useDateState({ value, today = new Date(), onSelectDate }: ICalendarProps) {\n  /** The currently selected date in the calendar */\n  const [selectedDate = today, setSelectedDate] = useControllableValue(value, today);\n\n  /** The currently focused date in the day picker, but not necessarily selected */\n  const [navigatedDay = today, setNavigatedDay] = React.useState(value);\n\n  /** The currently focused date in the month picker, but not necessarily selected */\n  const [navigatedMonth = today, setNavigatedMonth] = React.useState(value);\n\n  /** If using a controlled value, when that value changes, navigate to that date */\n  const [lastSelectedDate = today, setLastSelectedDate] = React.useState(value);\n  if (value && lastSelectedDate.valueOf() !== value.valueOf()) {\n    setNavigatedDay(value);\n    setNavigatedMonth(value);\n    setLastSelectedDate(value);\n  }\n\n  const navigateMonth = (date: Date) => {\n    setNavigatedMonth(date);\n  };\n\n  const navigateDay = (date: Date) => {\n    setNavigatedMonth(date);\n    setNavigatedDay(date);\n  };\n\n  const onDateSelected = (date: Date, selectedDateRangeArray?: Date[]) => {\n    setNavigatedMonth(date);\n    setNavigatedDay(date);\n    setSelectedDate(date);\n    onSelectDate?.(date, selectedDateRangeArray);\n  };\n\n  return [selectedDate, navigatedDay, navigatedMonth, onDateSelected, navigateDay, navigateMonth] as const;\n}\n\nfunction useVisibilityState(props: ICalendarProps) {\n  /** State used to show/hide month picker */\n  const [isMonthPickerVisible = true, setIsMonthPickerVisible] = useControllableValue(\n    getShowMonthPickerAsOverlay(props) ? undefined : props.isMonthPickerVisible,\n    false,\n  );\n  /** State used to show/hide day picker */\n  const [isDayPickerVisible = true, setIsDayPickerVisible] = useControllableValue(\n    getShowMonthPickerAsOverlay(props) ? undefined : props.isDayPickerVisible,\n    true,\n  );\n\n  const toggleDayMonthPickerVisibility = () => {\n    setIsMonthPickerVisible(!isMonthPickerVisible);\n    setIsDayPickerVisible(!isDayPickerVisible);\n  };\n\n  return [isMonthPickerVisible, isDayPickerVisible, toggleDayMonthPickerVisibility] as const;\n}\n\nfunction useFocusLogic({ componentRef }: ICalendarProps, isDayPickerVisible: boolean, isMonthPickerVisible: boolean) {\n  const dayPicker = React.useRef<ICalendarDay>(null);\n  const monthPicker = React.useRef<ICalendarMonth>(null);\n  const focusOnUpdate = React.useRef(false);\n\n  const focus = React.useCallback(() => {\n    if (isDayPickerVisible && dayPicker.current) {\n      focusAsync(dayPicker.current);\n    } else if (isMonthPickerVisible && monthPicker.current) {\n      focusAsync(monthPicker.current);\n    }\n  }, [isDayPickerVisible, isMonthPickerVisible]);\n\n  React.useImperativeHandle(componentRef, () => ({ focus }), [focus]);\n\n  React.useEffect(() => {\n    if (focusOnUpdate.current) {\n      focus();\n      focusOnUpdate.current = false;\n    }\n  });\n\n  const focusOnNextUpdate = () => {\n    focusOnUpdate.current = true;\n  };\n\n  return [dayPicker, monthPicker, focusOnNextUpdate] as const;\n}\n\nexport const CalendarBase: React.FunctionComponent<ICalendarProps> = React.forwardRef<HTMLDivElement, ICalendarProps>(\n  (propsWithoutDefaults, forwardedRef) => {\n    const props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n\n    const [selectedDate, navigatedDay, navigatedMonth, onDateSelected, navigateDay, navigateMonth] = useDateState(\n      props,\n    );\n    const [isMonthPickerVisible, isDayPickerVisible, toggleDayMonthPickerVisibility] = useVisibilityState(props);\n    const [dayPicker, monthPicker, focusOnNextUpdate] = useFocusLogic(props, isDayPickerVisible, isMonthPickerVisible);\n\n    const renderGoToTodayButton = () => {\n      let goTodayEnabled = showGoToToday;\n\n      if (goTodayEnabled && today) {\n        goTodayEnabled =\n          navigatedDay.getFullYear() !== today.getFullYear() ||\n          navigatedDay.getMonth() !== today.getMonth() ||\n          navigatedMonth.getFullYear() !== today.getFullYear() ||\n          navigatedMonth.getMonth() !== today.getMonth();\n      }\n\n      return (\n        showGoToToday && (\n          <button\n            className={css('js-goToday', classes.goTodayButton)}\n            onClick={onGotoToday}\n            onKeyDown={onButtonKeyDown(onGotoToday)}\n            type=\"button\"\n            disabled={!goTodayEnabled}\n          >\n            {strings!.goToToday}\n          </button>\n        )\n      );\n    };\n\n    const onNavigateDayDate = (date: Date, focusOnNavigatedDay: boolean): void => {\n      navigateDay(date);\n      if (focusOnNavigatedDay) {\n        focusOnNextUpdate();\n      }\n    };\n\n    const onNavigateMonthDate = (date: Date, focusOnNavigatedDay: boolean): void => {\n      if (focusOnNavigatedDay) {\n        focusOnNextUpdate();\n      }\n\n      if (!focusOnNavigatedDay) {\n        navigateMonth(date);\n        return;\n      }\n\n      if (monthPickerOnly) {\n        onDateSelected(date);\n      }\n\n      navigateDay(date);\n    };\n\n    const onHeaderSelect = getShowMonthPickerAsOverlay(props)\n      ? (): void => {\n          toggleDayMonthPickerVisibility();\n\n          focusOnNextUpdate();\n        }\n      : undefined;\n\n    const onGotoToday = (): void => {\n      navigateDay(today!);\n      focusOnNextUpdate();\n    };\n\n    const onButtonKeyDown = (callback: () => void): ((ev: React.KeyboardEvent<HTMLButtonElement>) => void) => {\n      return (ev: React.KeyboardEvent<HTMLButtonElement>) => {\n        // eslint-disable-next-line deprecation/deprecation\n        switch (ev.which) {\n          case KeyCodes.enter:\n          case KeyCodes.space:\n            callback();\n            break;\n        }\n      };\n    };\n\n    const onDatePickerPopupKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n      // eslint-disable-next-line deprecation/deprecation\n      switch (ev.which) {\n        case KeyCodes.enter:\n          ev.preventDefault();\n          break;\n\n        case KeyCodes.backspace:\n          ev.preventDefault();\n          break;\n\n        case KeyCodes.escape:\n          props.onDismiss?.();\n          break;\n\n        case KeyCodes.pageUp:\n          if (ev.ctrlKey) {\n            // go to next year\n            navigateDay(addYears(navigatedDay, 1));\n          } else {\n            // go to next month\n            navigateDay(addMonths(navigatedDay, 1));\n          }\n          ev.preventDefault();\n          break;\n        case KeyCodes.pageDown:\n          if (ev.ctrlKey) {\n            // go to previous year\n            navigateDay(addYears(navigatedDay, -1));\n          } else {\n            // go to previous month\n            navigateDay(addMonths(navigatedDay, -1));\n          }\n          ev.preventDefault();\n          break;\n        default:\n          break;\n      }\n    };\n    const rootClass = 'ms-DatePicker';\n    const {\n      firstDayOfWeek,\n      dateRangeType,\n      strings,\n      showGoToToday,\n      highlightCurrentMonth,\n      highlightSelectedMonth,\n      navigationIcons,\n      minDate,\n      maxDate,\n      restrictedDates,\n      id,\n      className,\n      showCloseButton,\n      allFocusable,\n      styles,\n      showWeekNumbers,\n      theme,\n      calendarDayProps,\n      calendarMonthProps,\n      dateTimeFormatter,\n      today = new Date(),\n    } = props;\n\n    const showMonthPickerAsOverlay = getShowMonthPickerAsOverlay(props);\n\n    const monthPickerOnly = !showMonthPickerAsOverlay && !isDayPickerVisible;\n    const overlaidWithButton = showMonthPickerAsOverlay && showGoToToday;\n\n    const classes = getClassNames(styles, {\n      theme: theme!,\n      className,\n      isMonthPickerVisible: isMonthPickerVisible,\n      isDayPickerVisible: isDayPickerVisible,\n      monthPickerOnly: monthPickerOnly,\n      showMonthPickerAsOverlay: showMonthPickerAsOverlay,\n      overlaidWithButton: overlaidWithButton,\n      overlayedWithButton: overlaidWithButton,\n      showGoToToday: showGoToToday,\n      showWeekNumbers: showWeekNumbers,\n    });\n\n    let todayDateString: string = '';\n    let selectedDateString: string = '';\n    if (dateTimeFormatter && strings!.todayDateFormatString) {\n      todayDateString = format(strings!.todayDateFormatString, dateTimeFormatter.formatMonthDayYear(today, strings!));\n    }\n    if (dateTimeFormatter && strings!.selectedDateFormatString) {\n      selectedDateString = format(\n        strings!.selectedDateFormatString,\n        dateTimeFormatter.formatMonthDayYear(selectedDate, strings!),\n      );\n    }\n    const selectionAndTodayString = selectedDateString + ', ' + todayDateString;\n\n    return (\n      <div\n        id={id}\n        ref={forwardedRef}\n        role=\"group\"\n        aria-label={selectionAndTodayString}\n        className={css(rootClass, classes.root, className, 'ms-slideDownIn10')}\n        onKeyDown={onDatePickerPopupKeyDown}\n      >\n        <div className={classes.liveRegion} aria-live=\"polite\" aria-atomic=\"true\">\n          <span>{selectedDateString}</span>\n        </div>\n        {isDayPickerVisible && (\n          <CalendarDay\n            selectedDate={selectedDate!}\n            navigatedDate={navigatedDay!}\n            today={props.today}\n            onSelectDate={onDateSelected}\n            // eslint-disable-next-line react/jsx-no-bind\n            onNavigateDate={onNavigateDayDate}\n            onDismiss={props.onDismiss}\n            firstDayOfWeek={firstDayOfWeek!}\n            dateRangeType={dateRangeType!}\n            strings={strings!}\n            // eslint-disable-next-line react/jsx-no-bind\n            onHeaderSelect={onHeaderSelect}\n            navigationIcons={navigationIcons!}\n            showWeekNumbers={props.showWeekNumbers}\n            firstWeekOfYear={props.firstWeekOfYear!}\n            dateTimeFormatter={props.dateTimeFormatter!}\n            showSixWeeksByDefault={props.showSixWeeksByDefault}\n            minDate={minDate}\n            maxDate={maxDate}\n            restrictedDates={restrictedDates}\n            workWeekDays={props.workWeekDays}\n            componentRef={dayPicker}\n            showCloseButton={showCloseButton}\n            allFocusable={allFocusable}\n            {...calendarDayProps} // at end of list so consumer's custom functions take precedence\n          />\n        )}\n        {isDayPickerVisible && isMonthPickerVisible && <div className={classes.divider} />}\n        {isMonthPickerVisible ? (\n          <div className={classes.monthPickerWrapper}>\n            <CalendarMonth\n              navigatedDate={navigatedMonth}\n              selectedDate={navigatedDay}\n              strings={strings!}\n              // eslint-disable-next-line react/jsx-no-bind\n              onNavigateDate={onNavigateMonthDate}\n              today={props.today}\n              highlightCurrentMonth={highlightCurrentMonth!}\n              highlightSelectedMonth={highlightSelectedMonth!}\n              // eslint-disable-next-line react/jsx-no-bind\n              onHeaderSelect={onHeaderSelect}\n              navigationIcons={navigationIcons!}\n              dateTimeFormatter={props.dateTimeFormatter!}\n              minDate={minDate}\n              maxDate={maxDate}\n              componentRef={monthPicker}\n              {...calendarMonthProps} // at end of list so consumer's custom functions take precedence\n            />\n            {renderGoToTodayButton()}\n          </div>\n        ) : (\n          renderGoToTodayButton()\n        )}\n        <FocusRects />\n      </div>\n    );\n  },\n);\nCalendarBase.displayName = 'CalendarBase';\n\nfunction getShowMonthPickerAsOverlay({ showMonthPickerAsOverlay, isDayPickerVisible }: ICalendarProps) {\n  const win = getWindow();\n  return showMonthPickerAsOverlay || (isDayPickerVisible && win && win.innerWidth <= MIN_SIZE_FORCE_OVERLAY);\n}\n"]}
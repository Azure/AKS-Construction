{"version":3,"file":"Pivot.base.js","sourceRoot":"../src/","sources":["components/Pivot/Pivot.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useControllableValue, useId } from '@fluentui/react-hooks';\nimport { classNamesFunction, css, divProperties, getNativeProps, getRTL, KeyCodes, warn } from '@fluentui/utilities';\nimport { CommandButton } from '../../Button';\nimport { useOverflow } from '../../utilities/useOverflow';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { DirectionalHint } from '../ContextualMenu/ContextualMenu.types';\nimport { Icon } from '../Icon/Icon';\nimport { PivotItem } from './PivotItem';\nimport type { IButton } from '../../Button';\nimport type { IFocusZone } from '../../FocusZone';\nimport type { IContextualMenuProps } from '../ContextualMenu/ContextualMenu.types';\nimport type { IPivot, IPivotProps, IPivotStyleProps, IPivotStyles } from './Pivot.types';\nimport type { IPivotItemProps } from './PivotItem.types';\n\nconst getClassNames = classNamesFunction<IPivotStyleProps, IPivotStyles>();\n\nconst COMPONENT_NAME = 'Pivot';\n\ntype PivotLinkCollection = {\n  links: IPivotItemProps[];\n  keyToIndexMapping: { [key: string]: number };\n  keyToTabIdMapping: { [key: string]: string };\n};\n\nconst getTabId = (props: IPivotProps, pivotId: string, itemKey: string, index: number): string => {\n  if (props.getTabId) {\n    return props.getTabId(itemKey, index);\n  }\n  return pivotId + `-Tab${index}`;\n};\n\n// Gets the set of PivotLinks as array of IPivotItemProps\n// The set of Links is determined by child components of type PivotItem\nconst getLinkItems = (props: IPivotProps, pivotId: string): PivotLinkCollection => {\n  const result: PivotLinkCollection = {\n    links: [],\n    keyToIndexMapping: {},\n    keyToTabIdMapping: {},\n  };\n\n  React.Children.forEach(React.Children.toArray(props.children), (child: React.ReactNode, index: number) => {\n    if (isPivotItem(child)) {\n      // eslint-disable-next-line deprecation/deprecation\n      const { linkText, ...pivotItemProps } = child.props;\n      const itemKey = child.props.itemKey || index.toString();\n      result.links.push({\n        headerText: linkText,\n        ...pivotItemProps,\n        itemKey: itemKey,\n      });\n      result.keyToIndexMapping[itemKey] = index;\n      result.keyToTabIdMapping[itemKey] = getTabId(props, pivotId, itemKey, index);\n    } else if (child) {\n      warn('The children of a Pivot component must be of type PivotItem to be rendered.');\n    }\n  });\n  return result;\n};\n\nconst isPivotItem = (item: React.ReactNode): item is PivotItem => {\n  return React.isValidElement(item) && (item.type as React.ComponentType)?.name === PivotItem.name;\n};\n\nexport const PivotBase: React.FunctionComponent<IPivotProps> = React.forwardRef<HTMLDivElement, IPivotProps>(\n  (props, ref) => {\n    const focusZoneRef = React.useRef<IFocusZone>(null);\n    const overflowMenuButtonComponentRef = React.useRef<IButton>(null);\n    const pivotId: string = useId('Pivot');\n\n    const [selectedKey, setSelectedKey] = useControllableValue(props.selectedKey, props.defaultSelectedKey);\n\n    const {\n      componentRef,\n      theme,\n      linkSize,\n      linkFormat,\n      overflowBehavior,\n      overflowAriaLabel,\n      focusZoneProps,\n      overflowButtonAs,\n    } = props;\n\n    let classNames: { [key in keyof IPivotStyles]: string };\n    const nameProps = {\n      'aria-label': props['aria-label'],\n      'aria-labelledby': props['aria-labelledby'],\n    };\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, divProperties, [\n      'aria-label',\n      'aria-labelledby',\n    ]);\n\n    let linkCollection = getLinkItems(props, pivotId);\n\n    React.useImperativeHandle(componentRef as React.RefObject<IPivot>, () => ({\n      focus: () => {\n        focusZoneRef.current?.focus();\n      },\n    }));\n\n    const renderLinkContent = (link?: IPivotItemProps): JSX.Element | null => {\n      if (!link) {\n        return null;\n      }\n\n      const { itemCount, itemIcon, headerText } = link;\n      return (\n        <span className={classNames.linkContent}>\n          {itemIcon !== undefined && (\n            <span className={classNames.icon}>\n              <Icon iconName={itemIcon} />\n            </span>\n          )}\n          {headerText !== undefined && <span className={classNames.text}> {link.headerText}</span>}\n          {itemCount !== undefined && <span className={classNames.count}> ({itemCount})</span>}\n        </span>\n      );\n    };\n\n    const renderPivotLink = (\n      renderLinkCollection: PivotLinkCollection,\n      link: IPivotItemProps,\n      renderPivotLinkSelectedKey: string | null | undefined,\n      className: string,\n    ): JSX.Element => {\n      const { itemKey, headerButtonProps, onRenderItemLink } = link;\n      const tabId = renderLinkCollection.keyToTabIdMapping[itemKey!];\n      let linkContent: JSX.Element | null;\n      const isSelected: boolean = renderPivotLinkSelectedKey === itemKey;\n\n      if (onRenderItemLink) {\n        linkContent = onRenderItemLink(link, renderLinkContent);\n      } else {\n        linkContent = renderLinkContent(link);\n      }\n\n      let contentString = link.headerText || '';\n      contentString += link.itemCount ? ' (' + link.itemCount + ')' : '';\n      // Adding space supplementary for icon\n      contentString += link.itemIcon ? ' xx' : '';\n\n      const itemSemantics =\n        link.role && link.role !== 'tab'\n          ? {\n              role: link.role,\n            }\n          : {\n              role: 'tab',\n              'aria-selected': isSelected,\n            };\n\n      return (\n        <CommandButton\n          {...headerButtonProps}\n          {...itemSemantics}\n          id={tabId}\n          key={itemKey}\n          className={css(className, isSelected && classNames.linkIsSelected)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={(ev: React.MouseEvent<HTMLElement>) => onLinkClick(itemKey!, ev)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onKeyDown={(ev: React.KeyboardEvent<HTMLElement>) => onKeyDown(itemKey!, ev)}\n          aria-label={link.ariaLabel}\n          name={link.headerText}\n          keytipProps={link.keytipProps}\n          data-content={contentString}\n        >\n          {linkContent}\n        </CommandButton>\n      );\n    };\n\n    const onLinkClick = (itemKey: string, ev: React.MouseEvent<HTMLElement>): void => {\n      ev.preventDefault();\n      updateSelectedItem(itemKey, ev);\n    };\n\n    const onKeyDown = (itemKey: string, ev: React.KeyboardEvent<HTMLElement>): void => {\n      // eslint-disable-next-line deprecation/deprecation\n      if (ev.which === KeyCodes.enter) {\n        ev.preventDefault();\n        updateSelectedItem(itemKey);\n      }\n    };\n\n    const updateSelectedItem = (itemKey: string, ev?: React.MouseEvent<HTMLElement>): void => {\n      setSelectedKey(itemKey);\n      linkCollection = getLinkItems(props, pivotId);\n      if (props.onLinkClick && linkCollection.keyToIndexMapping[itemKey] >= 0) {\n        const selectedIndex = linkCollection.keyToIndexMapping[itemKey];\n        const item = React.Children.toArray(props.children)[selectedIndex];\n        if (isPivotItem(item)) {\n          props.onLinkClick(item, ev);\n        }\n      }\n\n      overflowMenuButtonComponentRef.current?.dismissMenu();\n    };\n\n    const renderPivotItem = (itemKey: string | undefined, isActive: boolean): JSX.Element | null => {\n      if (props.headersOnly || !itemKey) {\n        return null;\n      }\n\n      const index = linkCollection.keyToIndexMapping[itemKey];\n      const selectedTabId = linkCollection.keyToTabIdMapping[itemKey];\n      return (\n        <div\n          role=\"tabpanel\"\n          hidden={!isActive}\n          key={itemKey}\n          aria-hidden={!isActive}\n          aria-labelledby={selectedTabId}\n          className={classNames.itemContainer}\n        >\n          {React.Children.toArray(props.children)[index]}\n        </div>\n      );\n    };\n\n    const isKeyValid = (itemKey: string | null | undefined): boolean => {\n      return itemKey === null || (itemKey !== undefined && linkCollection.keyToIndexMapping[itemKey] !== undefined);\n    };\n\n    const getSelectedKey = () => {\n      if (isKeyValid(selectedKey)) {\n        return selectedKey;\n      }\n      if (linkCollection.links.length) {\n        return linkCollection.links[0].itemKey;\n      }\n      return undefined;\n    };\n\n    classNames = getClassNames(props.styles!, {\n      theme: theme!,\n      linkSize,\n      linkFormat,\n    });\n\n    const renderedSelectedKey = getSelectedKey();\n    const renderedSelectedIndex = renderedSelectedKey ? linkCollection.keyToIndexMapping[renderedSelectedKey] : 0;\n\n    const items = linkCollection.links.map(l =>\n      renderPivotLink(linkCollection, l, renderedSelectedKey, classNames.link),\n    );\n\n    // The overflow menu starts empty and items[] is updated as the overflow items change\n    const overflowMenuProps: IContextualMenuProps = React.useMemo(\n      () => ({\n        items: [],\n        alignTargetEdge: true,\n        directionalHint: DirectionalHint.bottomRightEdge,\n      }),\n      [],\n    );\n\n    const { menuButtonRef: overflowMenuButtonRef } = useOverflow({\n      onOverflowItemsChanged: (overflowIndex, elements) => {\n        // Set data-is-overflowing on each item\n        elements.forEach(({ ele, isOverflowing }) => (ele.dataset.isOverflowing = `${isOverflowing}`));\n\n        // Update the menu items\n        overflowMenuProps.items = linkCollection.links\n          .slice(overflowIndex)\n          .filter(link => link.itemKey !== renderedSelectedKey)\n          .map((link, index) => {\n            link.role = 'menuitem';\n\n            return {\n              key: link.itemKey || `${overflowIndex + index}`,\n              onRender: () => renderPivotLink(linkCollection, link, renderedSelectedKey, classNames.linkInMenu),\n            };\n          });\n      },\n      rtl: getRTL(theme),\n      pinnedIndex: renderedSelectedIndex,\n    });\n\n    const OverflowButton = overflowButtonAs ? overflowButtonAs : CommandButton;\n    return (\n      <div ref={ref} {...divProps}>\n        <FocusZone\n          componentRef={focusZoneRef}\n          role=\"tablist\"\n          {...nameProps}\n          direction={FocusZoneDirection.horizontal}\n          {...focusZoneProps}\n          className={css(classNames.root, focusZoneProps?.className)}\n        >\n          {items}\n          {overflowBehavior === 'menu' && (\n            <OverflowButton\n              className={css(classNames.link, classNames.overflowMenuButton)}\n              elementRef={overflowMenuButtonRef}\n              componentRef={overflowMenuButtonComponentRef}\n              menuProps={overflowMenuProps}\n              menuIconProps={{ iconName: 'More', style: { color: 'inherit' } }}\n              ariaLabel={overflowAriaLabel}\n            />\n          )}\n        </FocusZone>\n        {renderedSelectedKey &&\n          linkCollection.links.map(\n            link =>\n              (link.alwaysRender === true || renderedSelectedKey === link.itemKey) &&\n              renderPivotItem(link.itemKey, renderedSelectedKey === link.itemKey),\n          )}\n      </div>\n    );\n  },\n);\nPivotBase.displayName = COMPONENT_NAME;\n"]}
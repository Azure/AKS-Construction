{"version":3,"file":"DialogContent.base.js","sourceRoot":"../src/","sources":["components/Dialog/DialogContent.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { classNamesFunction, css, warnDeprecations, initializeComponentRef } from '../../Utilities';\nimport { DialogType } from './DialogContent.types';\nimport { IconButton } from '../../Button';\nimport { DialogFooter } from './DialogFooter';\nimport { withResponsiveMode } from '../../ResponsiveMode';\nimport type { IDialogContentProps, IDialogContentStyleProps, IDialogContentStyles } from './DialogContent.types';\nimport type { IDialogFooterProps } from './DialogFooter.types';\n\nconst getClassNames = classNamesFunction<IDialogContentStyleProps, IDialogContentStyles>();\n\nconst DialogFooterType = ((<DialogFooter />) as React.ReactElement<IDialogFooterProps>).type;\n\nconst COMPONENT_NAME = 'DialogContent';\n\n// eslint-disable-next-line deprecation/deprecation\n@withResponsiveMode\nexport class DialogContentBase extends React.Component<IDialogContentProps, {}> {\n  public static defaultProps: IDialogContentProps = {\n    showCloseButton: false,\n    className: '',\n    topButtonsProps: [],\n    closeButtonAriaLabel: 'Close',\n  };\n\n  constructor(props: IDialogContentProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    warnDeprecations(COMPONENT_NAME, props, {\n      titleId: 'titleProps.id',\n    });\n  }\n\n  public render(): JSX.Element {\n    const {\n      showCloseButton,\n      className,\n      closeButtonAriaLabel,\n      onDismiss,\n      subTextId,\n      subText,\n      titleProps = {},\n      // eslint-disable-next-line deprecation/deprecation\n      titleId,\n      title,\n      type,\n      styles,\n      theme,\n      draggableHeaderClassName,\n    } = this.props;\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      isLargeHeader: type === DialogType.largeHeader,\n      isClose: type === DialogType.close,\n      draggableHeaderClassName,\n    });\n\n    const groupings = this._groupChildren();\n    let subTextContent;\n    if (subText) {\n      subTextContent = (\n        <p className={classNames.subText} id={subTextId}>\n          {subText}\n        </p>\n      );\n    }\n\n    return (\n      <div className={classNames.content}>\n        <div className={classNames.header}>\n          <div\n            id={titleId}\n            role=\"heading\"\n            aria-level={1}\n            {...titleProps}\n            className={css(classNames.title, titleProps.className)}\n          >\n            {title}\n          </div>\n          <div className={classNames.topButton}>\n            {this.props.topButtonsProps!.map((props, index) => (\n              <IconButton key={props.uniqueId || index} {...props} />\n            ))}\n            {(type === DialogType.close || (showCloseButton && type !== DialogType.largeHeader)) && (\n              <IconButton\n                className={classNames.button}\n                iconProps={{ iconName: 'Cancel' }}\n                ariaLabel={closeButtonAriaLabel}\n                onClick={onDismiss as any}\n              />\n            )}\n          </div>\n        </div>\n        <div className={classNames.inner}>\n          <div className={classNames.innerContent}>\n            {subTextContent}\n            {groupings.contents}\n          </div>\n          {groupings.footers}\n        </div>\n      </div>\n    );\n  }\n\n  // @TODO - typing the footers as an array of DialogFooter is difficult because\n  // casing \"child as DialogFooter\" causes a problem because\n  // \"Neither type 'ReactElement<any>' nor type 'DialogFooter' is assignable to the other.\"\n  private _groupChildren(): { footers: any[]; contents: any[] } {\n    const groupings: { footers: any[]; contents: any[] } = {\n      footers: [],\n      contents: [],\n    };\n\n    React.Children.map(this.props.children, child => {\n      if (typeof child === 'object' && child !== null && (child as any).type === DialogFooterType) {\n        groupings.footers.push(child);\n      } else {\n        groupings.contents.push(child);\n      }\n    });\n\n    return groupings;\n  }\n}\n"]}
{"version":3,"file":"DialogFooter.base.js","sourceRoot":"../src/","sources":["components/Dialog/DialogFooter.base.tsx"],"names":[],"mappings":";;;;IAKA,IAAM,aAAa,GAAG,8BAAkB,EAAgD,CAAC;IAEzF;QAAsC,4CAAuC;QAG3E,0BAAY,KAAyB;YAArC,YACE,kBAAM,KAAK,CAAC,SAGb;YADC,kCAAsB,CAAC,KAAI,CAAC,CAAC;;QAC/B,CAAC;QAEM,iCAAM,GAAb;YACQ,IAAA,KAA+B,IAAI,CAAC,KAAK,EAAvC,SAAS,eAAA,EAAE,MAAM,YAAA,EAAE,KAAK,WAAe,CAAC;YAEhD,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,MAAO,EAAE;gBACxC,KAAK,EAAE,KAAM;gBACb,SAAS,WAAA;aACV,CAAC,CAAC;YAEH,OAAO,CACL,6BAAK,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO;gBACtC,6BAAK,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY,IAAG,IAAI,CAAC,wBAAwB,EAAE,CAAO,CAClF,CACP,CAAC;QACJ,CAAC;QAEO,mDAAwB,GAAhC;YAAA,iBAIC;YAHC,OAAO,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAA,KAAK;gBAClD,OAAA,KAAK,CAAC,CAAC,CAAC,8BAAM,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC,MAAM,IAAG,KAAK,CAAQ,CAAC,CAAC,CAAC,IAAI;YAAvE,CAAuE,CACxE,CAAC;QACJ,CAAC;QACH,uBAAC;IAAD,CAAC,AA7BD,CAAsC,KAAK,CAAC,SAAS,GA6BpD;IA7BY,4CAAgB","sourcesContent":["import * as React from 'react';\nimport { classNamesFunction, initializeComponentRef } from '../../Utilities';\nimport type { IDialogFooterProps, IDialogFooterStyleProps, IDialogFooterStyles } from './DialogFooter.types';\nimport type { IProcessedStyleSet } from '../../Styling';\n\nconst getClassNames = classNamesFunction<IDialogFooterStyleProps, IDialogFooterStyles>();\n\nexport class DialogFooterBase extends React.Component<IDialogFooterProps, {}> {\n  private _classNames: IProcessedStyleSet<IDialogFooterStyles>;\n\n  constructor(props: IDialogFooterProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const { className, styles, theme } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n    });\n\n    return (\n      <div className={this._classNames.actions}>\n        <div className={this._classNames.actionsRight}>{this._renderChildrenAsActions()}</div>\n      </div>\n    );\n  }\n\n  private _renderChildrenAsActions(): (JSX.Element | null)[] | null | undefined {\n    return React.Children.map(this.props.children, child =>\n      child ? <span className={this._classNames.action}>{child}</span> : null,\n    );\n  }\n}\n"]}
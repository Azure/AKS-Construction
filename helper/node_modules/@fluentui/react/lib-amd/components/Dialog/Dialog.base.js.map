{"version":3,"file":"Dialog.base.js","sourceRoot":"../src/","sources":["components/Dialog/Dialog.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { warnDeprecations, classNamesFunction, getId } from '../../Utilities';\nimport { DialogType } from './DialogContent.types';\nimport { Modal } from '../../Modal';\nimport { withResponsiveMode } from '../../ResponsiveMode';\n\nconst getClassNames = classNamesFunction<IDialogStyleProps, IDialogStyles>();\n\nimport { DialogContent } from './DialogContent';\nimport type { IDialogProps, IDialogStyleProps, IDialogStyles } from './Dialog.types';\nimport type { IDialogContentProps } from './DialogContent.types';\nimport type { IModalProps } from '../../Modal';\nimport type { ILayerProps } from '../../Layer';\n\nconst DefaultModalProps: IModalProps = {\n  isDarkOverlay: false,\n  isBlocking: false,\n  className: '',\n  containerClassName: '',\n  topOffsetFixed: false,\n  enableAriaHiddenSiblings: true,\n};\n\nconst DefaultDialogContentProps: IDialogContentProps = {\n  type: DialogType.normal,\n  className: '',\n  topButtonsProps: [],\n};\n\n// eslint-disable-next-line deprecation/deprecation\n@withResponsiveMode\nexport class DialogBase extends React.Component<IDialogProps, {}> {\n  public static defaultProps: IDialogProps = {\n    hidden: true,\n  };\n\n  private _id: string;\n  private _defaultTitleTextId: string;\n  private _defaultSubTextId: string;\n\n  constructor(props: IDialogProps) {\n    super(props);\n\n    this._id = getId('Dialog');\n    this._defaultTitleTextId = this._id + '-title';\n    this._defaultSubTextId = this._id + '-subText';\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecations('Dialog', props, {\n        isOpen: 'hidden',\n        type: 'dialogContentProps.type',\n        subText: 'dialogContentProps.subText',\n        contentClassName: 'dialogContentProps.className',\n        topButtonsProps: 'dialogContentProps.topButtonsProps',\n        className: 'modalProps.className',\n        isDarkOverlay: 'modalProps.isDarkOverlay',\n        isBlocking: 'modalProps.isBlocking',\n        containerClassName: 'modalProps.containerClassName',\n        onDismissed: 'modalProps.onDismissed',\n        onLayerDidMount: 'modalProps.layerProps.onLayerDidMount',\n        ariaDescribedById: 'modalProps.subtitleAriaId',\n        ariaLabelledById: 'modalProps.titleAriaId',\n      });\n    }\n  }\n\n  public render(): JSX.Element {\n    const props = this.props;\n    const {\n      /* eslint-disable deprecation/deprecation */\n      className,\n      containerClassName,\n      contentClassName,\n      elementToFocusOnDismiss,\n      firstFocusableSelector,\n      forceFocusInsideTrap,\n      styles,\n      hidden,\n      disableRestoreFocus = props.ignoreExternalFocusing,\n      isBlocking,\n      isClickableOutsideFocusTrap,\n      isDarkOverlay,\n      isOpen = !hidden,\n      onDismiss,\n      onDismissed,\n      onLayerDidMount,\n      responsiveMode,\n      subText,\n      theme,\n      title,\n      topButtonsProps,\n      type,\n      /* eslint-enable deprecation/deprecation */\n      minWidth,\n      maxWidth,\n      modalProps,\n    } = props;\n\n    const mergedLayerProps: ILayerProps = {\n      onLayerDidMount,\n      ...modalProps?.layerProps,\n    };\n\n    let dialogDraggableClassName: string | undefined;\n    let dragOptions: IModalProps['dragOptions'];\n\n    // If dragOptions are provided, but no drag handle is specified, we supply a drag handle,\n    // and inform dialog contents to add class to draggable class to the header\n    if (modalProps?.dragOptions && !modalProps.dragOptions?.dragHandleSelector) {\n      // spread options to avoid mutating props\n      dragOptions = { ...modalProps.dragOptions };\n      dialogDraggableClassName = 'ms-Dialog-draggable-header';\n      dragOptions.dragHandleSelector = `.${dialogDraggableClassName}`;\n    }\n\n    const mergedModalProps: IModalProps = {\n      ...DefaultModalProps,\n      elementToFocusOnDismiss,\n      firstFocusableSelector,\n      forceFocusInsideTrap,\n      disableRestoreFocus,\n      isClickableOutsideFocusTrap,\n      responsiveMode,\n      className,\n      containerClassName,\n      isBlocking,\n      isDarkOverlay,\n      onDismissed,\n      ...modalProps,\n      dragOptions,\n      layerProps: mergedLayerProps,\n      isOpen,\n    };\n\n    const dialogContentProps: IDialogContentProps = {\n      className: contentClassName,\n      subText,\n      title,\n      topButtonsProps,\n      type,\n      ...DefaultDialogContentProps,\n      ...props.dialogContentProps,\n      draggableHeaderClassName: dialogDraggableClassName,\n      titleProps: {\n        // eslint-disable-next-line deprecation/deprecation\n        id: props.dialogContentProps?.titleId || this._defaultTitleTextId,\n        ...props.dialogContentProps?.titleProps,\n      },\n    };\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className: mergedModalProps.className,\n      containerClassName: mergedModalProps.containerClassName,\n      hidden,\n      dialogDefaultMinWidth: minWidth,\n      dialogDefaultMaxWidth: maxWidth,\n    });\n\n    return (\n      <Modal\n        {...mergedModalProps}\n        className={classNames.root}\n        containerClassName={classNames.main}\n        onDismiss={onDismiss || mergedModalProps.onDismiss}\n        subtitleAriaId={this._getSubTextId()}\n        titleAriaId={this._getTitleTextId()}\n      >\n        <DialogContent\n          subTextId={this._defaultSubTextId}\n          showCloseButton={mergedModalProps.isBlocking}\n          onDismiss={onDismiss}\n          {...dialogContentProps}\n        >\n          {props.children}\n        </DialogContent>\n      </Modal>\n    );\n  }\n\n  private _getSubTextId = (): string | undefined => {\n    // eslint-disable-next-line deprecation/deprecation\n    const { ariaDescribedById, modalProps, dialogContentProps, subText } = this.props;\n    let id = (modalProps && modalProps.subtitleAriaId) || ariaDescribedById;\n\n    if (!id) {\n      id = ((dialogContentProps && dialogContentProps.subText) || subText) && this._defaultSubTextId;\n    }\n\n    return id;\n  };\n\n  private _getTitleTextId = (): string | undefined => {\n    // eslint-disable-next-line deprecation/deprecation\n    const { ariaLabelledById, modalProps, dialogContentProps, title } = this.props;\n    let id = (modalProps && modalProps.titleAriaId) || ariaLabelledById;\n\n    if (!id) {\n      id = ((dialogContentProps && dialogContentProps.title) || title) && this._defaultTitleTextId;\n    }\n\n    return id;\n  };\n}\n"]}
{"version":3,"file":"PositioningContainer.js","sourceRoot":"../src/","sources":["components/Coachmark/PositioningContainer/PositioningContainer.tsx"],"names":[],"mappings":";;;;;IAiBA,IAAM,gBAAgB,GAAG,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;IAExC,wFAAwF;IACxF,0BAA0B;IAC1B,IAAM,YAAY,GAAG,CAAC,CAAC;IACvB,IAAM,gBAAgB,GAAG,CAAA;QACvB,GAAC,2BAAa,CAAC,GAAG,IAAG,aAAa;QAClC,GAAC,2BAAa,CAAC,MAAM,IAAG,eAAe;QACvC,GAAC,2BAAa,CAAC,IAAI,IAAG,eAAe;QACrC,GAAC,2BAAa,CAAC,KAAK,IAAG,gBAAgB;UAC/B,CAAA,CAAC;IAEX,IAAM,aAAa,GAAG;QACpB,sBAAsB,EAAE,KAAK;QAC7B,gBAAgB,EAAE,CAAC;QACnB,cAAc,EAAE,CAAC;QACjB,eAAe,EAAE,iCAAe,CAAC,cAAc;KAChD,CAAC;IAEF,SAAS,eAAe,CAAC,KAAiC,EAAE,YAAgC;QAC1F,+FAA+F;QAC/F,IAAM,iBAAiB,GAAG,KAAK,CAAC,MAAM,EAAc,CAAC;QAErD,IAAM,eAAe,GAAG;YACtB,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE;gBAC9B,IAAI,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC;gBAEjC,IAAI,CAAC,aAAa,EAAE;oBAClB,aAAa,GAAG;wBACd,GAAG,EAAE,CAAC,GAAG,KAAK,CAAC,cAAe;wBAC9B,IAAI,EAAE,CAAC,GAAG,KAAK,CAAC,cAAe;wBAC/B,KAAK,EAAE,YAAa,CAAC,UAAU,GAAG,KAAK,CAAC,cAAe;wBACvD,MAAM,EAAE,YAAa,CAAC,WAAW,GAAG,KAAK,CAAC,cAAe;wBACzD,KAAK,EAAE,YAAa,CAAC,UAAU,GAAG,KAAK,CAAC,cAAe,GAAG,CAAC;wBAC3D,MAAM,EAAE,YAAa,CAAC,WAAW,GAAG,KAAK,CAAC,cAAe,GAAG,CAAC;qBAC9D,CAAC;iBACH;gBACD,iBAAiB,CAAC,OAAO,GAAG,aAAa,CAAC;aAC3C;YACD,OAAO,iBAAiB,CAAC,OAAO,CAAC;QACnC,CAAC,CAAC;QAEF,OAAO,eAAe,CAAC;IACzB,CAAC;IAED,SAAS,gBAAgB,CACvB,KAAiC,EACjC,cAAsD,EACtD,WAAmD,EACnD,SAA+D,EAC/D,eAAiC;QAEjC,IAAM,KAAK,GAAG,sBAAQ,EAAE,CAAC;QACzB;;WAEG;QACG,IAAA,KAA4B,KAAK,CAAC,QAAQ,EAAmB,EAA5D,SAAS,QAAA,EAAE,YAAY,QAAqC,CAAC;QACpE,IAAM,gBAAgB,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEzC,IAAM,mBAAmB,GAAG;YAC1B,KAAK,CAAC,qBAAqB,CAAC,cAAM,OAAA,cAAc,EAAE,EAAhB,CAAgB,CAAC,CAAC;QACtD,CAAC,CAAC;QAEF,IAAM,cAAc,GAAG;YACb,IAAA,gBAAgB,GAAmB,KAAK,iBAAxB,EAAE,YAAY,GAAK,KAAK,aAAV,CAAW;YACjD,IAAM,WAAW,GAAG,cAAc,CAAC,OAAO,CAAC;YAC3C,IAAM,2BAA2B,GAAG,WAAW,CAAC,OAAO,CAAC;YAExD,IAAI,WAAW,IAAI,2BAA2B,EAAE;gBAC9C,IAAM,YAAY,GAAmB,qBAAK,KAAK,CAAoB,CAAC;gBACpE,YAAa,CAAC,MAAM,GAAG,eAAe,EAAE,CAAC;gBACzC,YAAa,CAAC,MAAM,GAAG,SAAS,CAAC,OAAQ,CAAC;gBAClC,IAAA,MAAM,GAAK,YAAY,OAAjB,CAAkB;gBAEhC,IAAI,MAAM,EAAE;oBACV,iFAAiF;oBACjF,qEAAqE;oBACrE,IACE,CAAC,CAAE,MAAkB,CAAC,qBAAqB,IAAI,CAAE,MAAqB,CAAC,cAAc,CAAC;wBACtF,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAc,CAAC,EACtC;wBACA,YAAa,CAAC,QAAQ,GAAG,gBAAgB,CAAC;wBAC1C,IAAM,YAAY,GAAoB,6BAAe,CACnD,YAAa,EACb,WAAW,EACX,2BAA2B,CAC5B,CAAC;wBACF,qGAAqG;wBACrG,sGAAsG;wBACtG,IACE,CAAC,CAAC,SAAS,IAAI,YAAY,CAAC;4BAC5B,CAAC,SAAS,IAAI,YAAY,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,YAAY,CAAC,IAAI,gBAAgB,CAAC,OAAO,GAAG,CAAC,CAAC,EAC1G;4BACA,wGAAwG;4BACxG,uFAAuF;4BACvF,gBAAgB,CAAC,OAAO,EAAE,CAAC;4BAC3B,YAAY,CAAC,YAAY,CAAC,CAAC;4BAC3B,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAG,YAAY,CAAC,CAAC;yBAC9B;6BAAM;4BACL,gBAAgB,CAAC,OAAO,GAAG,CAAC,CAAC;4BAC7B,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAG,YAAY,CAAC,CAAC;yBAC9B;qBACF;yBAAM,IAAI,SAAS,KAAK,SAAS,EAAE;wBAClC,YAAY,CAAC,SAAS,CAAC,CAAC;qBACzB;iBACF;qBAAM,IAAI,SAAS,KAAK,SAAS,EAAE;oBAClC,YAAY,CAAC,SAAS,CAAC,CAAC;iBACzB;aACF;QACH,CAAC,CAAC;QAEF,KAAK,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;QAErC,OAAO,CAAC,SAAS,EAAE,mBAAmB,CAAU,CAAC;IACnD,CAAC;IAED,SAAS,kBAAkB,CACzB,EAA+C,EAC/C,WAAmD,EACnD,SAAsC;YAFpC,eAAe,qBAAA;QAIjB,IAAM,kBAAkB,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAE/C,KAAK,CAAC,SAAS,CAAC;YACd,IAAI,CAAC,kBAAkB,CAAC,OAAO,IAAI,WAAW,CAAC,OAAO,IAAI,eAAe,IAAI,SAAS,EAAE;gBACtF,kBAAkB,CAAC,OAAO,GAAG,IAAI,CAAC;gBAClC,2BAAe,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;aACtC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS,YAAY,CACnB,EAA+F,EAC/F,SAA+D,EAC/D,eAAiC;YAF/B,oBAAoB,0BAAA,EAAE,gBAAgB,sBAAA,EAAE,eAAe,qBAAA,EAAE,MAAM,YAAA;QAIjE;;;WAGG;QACH,IAAM,SAAS,GAAG,KAAK,CAAC,MAAM,EAAsB,CAAC;QAErD,0EAA0E;QAC1E,iEAAiE;QACjE,kEAAkE;QAClE,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;YAC9B,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC;SAC/B;QACD,KAAK,CAAC,SAAS,CAAC;YACd,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC;QAChC,CAAC,EAAE,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC,CAAC;QAE/B;;;WAGG;QACH,IAAM,kBAAkB,GAAG;YACzB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;gBACtB,IAAI,oBAAoB,IAAI,SAAS,CAAC,OAAO,EAAE;oBAC7C,IAAM,QAAQ,GAAG,gBAAgB,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzD,SAAS,CAAC,OAAO,GAAG,0BAAY,CAAC,SAAS,CAAC,OAAO,EAAE,eAAgB,EAAE,QAAQ,EAAE,eAAe,EAAE,CAAC,CAAC;iBACpG;qBAAM;oBACL,SAAS,CAAC,OAAO,GAAG,eAAe,EAAE,CAAC,MAAO,GAAG,YAAY,GAAG,CAAC,CAAC;iBAClE;aACF;YACD,OAAO,SAAS,CAAC,OAAQ,CAAC;QAC5B,CAAC,CAAC;QAEF,OAAO,kBAAkB,CAAC;IAC5B,CAAC;IAED,SAAS,oBAAoB,CAC3B,EAAiE,EACjE,cAAsD,EACtD,YAAgC,EAChC,SAA+D,EAC/D,SAAsC,EACtC,mBAA+B;YAL7B,SAAS,eAAA,EAAE,sBAAsB,4BAAA;QAOnC,IAAM,KAAK,GAAG,sBAAQ,EAAE,CAAC;QAEzB,IAAM,QAAQ,GAAG,KAAK,CAAC,WAAW,CAChC,UAAC,EAA6E;YAC5E,IAAI,SAAS,EAAE;gBACb,SAAS,CAAC,EAAE,CAAC,CAAC;aACf;iBAAM;gBACL,mBAAmB,EAAE,CAAC;aACvB;QACH,CAAC,EACD,CAAC,SAAS,EAAE,mBAAmB,CAAC,CACjC,CAAC;QAEF,IAAM,kBAAkB,GAAG,KAAK,CAAC,WAAW,CAC1C,UAAC,EAAS;YACR,IAAM,MAAM,GAAG,EAAE,CAAC,MAAqB,CAAC;YACxC,IAAM,qBAAqB,GAAG,cAAc,CAAC,OAAO,IAAI,CAAC,2BAAe,CAAC,cAAc,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;YAEzG,IACE,CAAC,CAAC,SAAS,CAAC,OAAO,IAAI,qBAAqB,CAAC;gBAC7C,CAAC,EAAE,CAAC,MAAM,KAAK,YAAY;oBACzB,qBAAqB;oBACrB,CAAE,SAAS,CAAC,OAAsB,CAAC,eAAe;wBAChD,CAAC,SAAS,CAAC,OAAO;wBAClB,CAAC,MAAM,KAAK,SAAS,CAAC,OAAO,IAAI,CAAC,2BAAe,CAAC,SAAS,CAAC,OAAsB,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,EAClG;gBACA,QAAQ,CAAC,EAAE,CAAC,CAAC;aACd;QACH,CAAC,EACD,CAAC,QAAQ,EAAE,cAAc,EAAE,SAAS,EAAE,YAAY,CAAC,CACpD,CAAC;QAEF,IAAM,eAAe,GAAG,KAAK,CAAC,WAAW,CACvC,UAAC,EAAS;YACR,IAAI,SAAS,IAAI,CAAC,sBAAsB,EAAE;gBACxC,kBAAkB,CAAC,EAAE,CAAC,CAAC;aACxB;QACH,CAAC,EACD,CAAC,kBAAkB,EAAE,SAAS,EAAE,sBAAsB,CAAC,CACxD,CAAC;QAEF,KAAK,CAAC,SAAS,CAAC;YACd,IAAM,MAAM,GAAG,IAAI,sBAAU,CAAC,EAAE,CAAC,CAAC;YAClC,qFAAqF;YACrF,sFAAsF;YACtF,uEAAuE;YACvE,iFAAiF;YACjF,KAAK,CAAC,UAAU,CAAC;;gBACf,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,eAAe,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;gBAC7E,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;gBACtE,MAAM,CAAC,EAAE,CAAC,MAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,QAAQ,0CAAE,IAAI,EAAE,OAAO,EAAE,kBAAkB,EAAE,IAAI,CAAC,CAAC;gBAC3E,MAAM,CAAC,EAAE,CAAC,MAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,QAAQ,0CAAE,IAAI,EAAE,OAAO,EAAE,kBAAkB,EAAE,IAAI,CAAC,CAAC;YAC7E,CAAC,EAAE,CAAC,CAAC,CAAC;YAEN,OAAO,cAAM,OAAA,MAAM,CAAC,OAAO,EAAE,EAAhB,CAAgB,CAAC;YAC9B,mFAAmF;QACrF,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC;IACxB,CAAC;IAED,SAAgB,eAAe,CAC7B,EAA2C,EAC3C,WAAmD;YADjD,WAAW,iBAAA;QAGb;;;;;WAKG;QACG,IAAA,KAAkC,KAAK,CAAC,QAAQ,CAAoB,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAhF,YAAY,QAAA,EAAE,eAAe,QAAmD,CAAC;QACxF,IAAM,KAAK,GAAG,sBAAQ,EAAE,CAAC;QACzB,IAAM,oBAAoB,GAAG,KAAK,CAAC,MAAM,CAAS,CAAC,CAAC,CAAC;QAErD,oDAAoD;QACpD,IAAM,yBAAyB,GAAG;YAChC,IAAI,WAAW,IAAI,WAAW,EAAE;gBAC9B,oBAAoB,CAAC,OAAO,GAAG,KAAK,CAAC,qBAAqB,CAAC;oBACzD,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;wBACxB,OAAO;qBACR;oBAED,IAAM,4BAA4B,GAAG,WAAW,CAAC,OAAO,CAAC,SAAwB,CAAC;oBAClF,IAAM,gBAAgB,GAAW,4BAA4B,CAAC,YAAY,CAAC;oBAC3E,IAAM,cAAc,GAAW,4BAA4B,CAAC,YAAY,CAAC;oBACzE,IAAM,UAAU,GAAW,gBAAgB,GAAG,cAAc,CAAC;oBAE7D,eAAe,CAAC,EAAE,KAAK,EAAE,YAAY,CAAC,KAAK,GAAG,UAAU,EAAE,CAAC,CAAC;oBAE5D,IAAI,4BAA4B,CAAC,YAAY,GAAG,WAAW,EAAE;wBAC3D,yBAAyB,EAAE,CAAC;qBAC7B;yBAAM;wBACL,KAAK,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;qBAC1D;gBACH,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC;QAEF,oGAAoG;QACpG,KAAK,CAAC,SAAS,CAAC,yBAAyB,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC;QAE1D,OAAO,YAAY,CAAC,KAAK,CAAC;IAC5B,CAAC;IA1CD,0CA0CC;IAEY,QAAA,oBAAoB,GAAwD,KAAK,CAAC,UAAU,CAGvG,UAAC,oBAAoB,EAAE,YAAY;QACnC,IAAM,KAAK,GAAG,gCAAoB,CAA6B,aAAa,EAAE,oBAAoB,CAAC,CAAC;QAEpG,iDAAiD;QACjD,IAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAiB,IAAI,CAAC,CAAC;QACvD;;WAEG;QACH,IAAM,cAAc,GAAG,KAAK,CAAC,MAAM,CAAiB,IAAI,CAAC,CAAC;QAC1D,IAAM,OAAO,GAAG,2BAAa,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;QAEtD,IAAA,KAA4B,uBAAS,CAAC,KAAK,CAAC,MAAM,EAAE,cAAc,CAAC,EAAlE,SAAS,QAAA,EAAE,YAAY,QAA2C,CAAC;QAC1E,IAAM,eAAe,GAAG,eAAe,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;QACvD,IAAA,KAAmC,gBAAgB,CACvD,KAAK,EACL,cAAc,EACd,WAAW,EACX,SAAS,EACT,eAAe,CAChB,EANM,SAAS,QAAA,EAAE,mBAAmB,QAMpC,CAAC;QACF,IAAM,kBAAkB,GAAG,YAAY,CAAC,KAAK,EAAE,SAAS,EAAE,eAAe,CAAC,CAAC;QAC3E,IAAM,YAAY,GAAG,eAAe,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;QAEzD,kBAAkB,CAAC,KAAK,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC;QAClD,oBAAoB,CAAC,KAAK,EAAE,cAAc,EAAE,YAAY,EAAE,SAAS,EAAE,SAAS,EAAE,mBAAmB,CAAC,CAAC;QAErG,4FAA4F;QAC5F,KAAK,CAAC,SAAS,CAAC,sBAAM,OAAA,MAAA,KAAK,CAAC,cAAc,+CAApB,KAAK,CAAmB,CAAA,EAAA,EAAE,EAAE,CAAC,CAAC;QAEpD,8GAA8G;QAC9G,IAAI,CAAC,YAAY,EAAE;YACjB,OAAO,IAAI,CAAC;SACb;QAEO,IAAA,SAAS,GAAqF,KAAK,UAA1F,EAAE,UAAU,GAAyE,KAAK,WAA9E,EAAE,yBAAyB,GAA8C,KAAK,0BAAnD,EAAE,6BAA6B,GAAe,KAAK,8BAApB,EAAE,QAAQ,GAAK,KAAK,SAAV,CAAW;QAE5G,IAAM,MAAM,GAAG,2CAAa,EAAE,CAAC;QAE/B,IAAM,oBAAoB,GACxB,SAAS,IAAI,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,6BAAmB,CAAC,gBAAgB,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAEvG,IAAM,mBAAmB,GAAW,kBAAkB,EAAE,GAAG,YAAa,CAAC;QACzE,IAAM,gBAAgB,GACpB,6BAA8B,IAAI,6BAA8B,GAAG,mBAAmB;YACpF,CAAC,CAAC,mBAAmB;YACrB,CAAC,CAAC,6BAA8B,CAAC;QACrC,IAAM,OAAO,GAAG,CACd,6BAAK,GAAG,EAAE,OAAO,EAAE,SAAS,EAAE,eAAG,CAAC,yBAAyB,EAAE,MAAM,CAAC,SAAS,CAAC;YAC5E,6BACE,SAAS,EAAE,qBAAW,CACpB,mCAAmC,EACnC,MAAM,CAAC,IAAI,EACX,SAAS,EACT,oBAAoB,EACpB,CAAC,CAAC,yBAAyB,IAAI,EAAE,KAAK,EAAE,yBAAyB,EAAE,EACnE,UAAU,IAAI,EAAE,MAAM,EAAE,kBAAQ,CAAC,KAAK,EAAE,CACzC,EACD,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,gBAAgB;gBAC/D,wGAAwG;gBACxG,0FAA0F;gBAC1F,QAAQ,EAAE,CAAC,CAAC,EACZ,GAAG,EAAE,WAAW;gBAEf,QAAQ;gBAEP,uCAAuC;gBACvC,gBAAgB,CAEd,CACF,CACP,CAAC;QAEF,OAAO,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,oBAAC,aAAK,uBAAK,KAAK,CAAC,UAAU,GAAG,OAAO,CAAS,CAAC;IAC/E,CAAC,CAAC,CAAC;IACH,4BAAoB,CAAC,WAAW,GAAG,sBAAsB,CAAC;IAE1D,SAAS,iBAAiB,CAAC,SAA0B,EAAE,WAA4B;QACjF,OAAO,gBAAgB,CAAC,SAAS,CAAC,eAAe,EAAE,WAAW,CAAC,eAAe,CAAC,CAAC;IAClF,CAAC;IAED,SAAS,gBAAgB,CAAC,YAAuB,EAAE,YAAuB;QACxE,KAAK,IAAM,GAAG,IAAI,YAAY,EAAE;YAC9B,IAAI,YAAY,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBACpC,IAAM,eAAe,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;gBAC1C,IAAM,eAAe,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;gBAE1C,IAAI,eAAe,IAAI,eAAe,EAAE;oBACtC,IAAI,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;wBAC7D,OAAO,KAAK,CAAC;qBACd;iBACF;aACF;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC","sourcesContent":["import * as React from 'react';\nimport { getClassNames } from './PositioningContainer.styles';\nimport { ZIndexes } from '../../../Styling';\nimport { Layer } from '../../../Layer';\n\n// Utilites/Helpers\nimport { DirectionalHint } from '../../../common/DirectionalHint';\nimport { css, elementContains, focusFirstChild, EventGroup, getPropsWithDefaults } from '../../../Utilities';\n\nimport { getMaxHeight, positionElement, RectangleEdge } from '../../../Positioning';\n\nimport { AnimationClassNames, mergeStyles } from '../../../Styling';\nimport { useMergedRefs, useAsync, useTarget } from '@fluentui/react-hooks';\nimport type { IPositioningContainerProps } from './PositioningContainer.types';\nimport type { Point, IRectangle } from '../../../Utilities';\nimport type { IPositionedData, IPositionProps, IPosition } from '../../../Positioning';\n\nconst OFF_SCREEN_STYLE = { opacity: 0 };\n\n// In order for some of the max height logic to work properly we need to set the border.\n// The value is arbitrary.\nconst BORDER_WIDTH = 1;\nconst SLIDE_ANIMATIONS = {\n  [RectangleEdge.top]: 'slideUpIn20',\n  [RectangleEdge.bottom]: 'slideDownIn20',\n  [RectangleEdge.left]: 'slideLeftIn20',\n  [RectangleEdge.right]: 'slideRightIn20',\n} as const;\n\nconst DEFAULT_PROPS = {\n  preventDismissOnScroll: false,\n  offsetFromTarget: 0,\n  minPagePadding: 8,\n  directionalHint: DirectionalHint.bottomAutoEdge,\n};\n\nfunction useCachedBounds(props: IPositioningContainerProps, targetWindow: Window | undefined) {\n  /** The bounds used when determining if and where the PositioningContainer should be placed. */\n  const positioningBounds = React.useRef<IRectangle>();\n\n  const getCachedBounds = (): IRectangle => {\n    if (!positioningBounds.current) {\n      let currentBounds = props.bounds;\n\n      if (!currentBounds) {\n        currentBounds = {\n          top: 0 + props.minPagePadding!,\n          left: 0 + props.minPagePadding!,\n          right: targetWindow!.innerWidth - props.minPagePadding!,\n          bottom: targetWindow!.innerHeight - props.minPagePadding!,\n          width: targetWindow!.innerWidth - props.minPagePadding! * 2,\n          height: targetWindow!.innerHeight - props.minPagePadding! * 2,\n        };\n      }\n      positioningBounds.current = currentBounds;\n    }\n    return positioningBounds.current;\n  };\n\n  return getCachedBounds;\n}\n\nfunction usePositionState(\n  props: IPositioningContainerProps,\n  positionedHost: React.RefObject<HTMLDivElement | null>,\n  contentHost: React.RefObject<HTMLDivElement | null>,\n  targetRef: React.RefObject<Element | MouseEvent | Point | null>,\n  getCachedBounds: () => IRectangle,\n) {\n  const async = useAsync();\n  /**\n   * Current set of calculated positions for the outermost parent container.\n   */\n  const [positions, setPositions] = React.useState<IPositionedData>();\n  const positionAttempts = React.useRef(0);\n\n  const updateAsyncPosition = (): void => {\n    async.requestAnimationFrame(() => updatePosition());\n  };\n\n  const updatePosition = (): void => {\n    const { offsetFromTarget, onPositioned } = props;\n    const hostElement = positionedHost.current;\n    const positioningContainerElement = contentHost.current;\n\n    if (hostElement && positioningContainerElement) {\n      const currentProps: IPositionProps = { ...props } as IPositionProps;\n      currentProps!.bounds = getCachedBounds();\n      currentProps!.target = targetRef.current!;\n      const { target } = currentProps;\n\n      if (target) {\n        // Check if the target is an Element or a MouseEvent and the document contains it\n        // or don't check anything else if the target is a Point or Rectangle\n        if (\n          (!(target as Element).getBoundingClientRect && !(target as MouseEvent).preventDefault) ||\n          document.body.contains(target as Node)\n        ) {\n          currentProps!.gapSpace = offsetFromTarget;\n          const newPositions: IPositionedData = positionElement(\n            currentProps!,\n            hostElement,\n            positioningContainerElement,\n          );\n          // Set the new position only when the positions are not exists or one of the new positioningContainer\n          // positions are different. The position should not change if the position is within 2 decimal places.\n          if (\n            (!positions && newPositions) ||\n            (positions && newPositions && !arePositionsEqual(positions, newPositions) && positionAttempts.current < 5)\n          ) {\n            // We should not reposition the positioningContainer more than a few times, if it is then the content is\n            // likely resizing and we should stop trying to reposition to prevent a stack overflow.\n            positionAttempts.current++;\n            setPositions(newPositions);\n            onPositioned?.(newPositions);\n          } else {\n            positionAttempts.current = 0;\n            onPositioned?.(newPositions);\n          }\n        } else if (positions !== undefined) {\n          setPositions(undefined);\n        }\n      } else if (positions !== undefined) {\n        setPositions(undefined);\n      }\n    }\n  };\n\n  React.useEffect(updateAsyncPosition);\n\n  return [positions, updateAsyncPosition] as const;\n}\n\nfunction useSetInitialFocus(\n  { setInitialFocus }: IPositioningContainerProps,\n  contentHost: React.RefObject<HTMLDivElement | null>,\n  positions: IPositionedData | undefined,\n) {\n  const didSetInitialFocus = React.useRef(false);\n\n  React.useEffect((): void => {\n    if (!didSetInitialFocus.current && contentHost.current && setInitialFocus && positions) {\n      didSetInitialFocus.current = true;\n      focusFirstChild(contentHost.current);\n    }\n  });\n}\n\nfunction useMaxHeight(\n  { directionalHintFixed, offsetFromTarget, directionalHint, target }: IPositioningContainerProps,\n  targetRef: React.RefObject<Element | MouseEvent | Point | null>,\n  getCachedBounds: () => IRectangle,\n) {\n  /**\n   * The maximum height the PositioningContainer can grow to\n   * without going beyond the window or target bounds\n   */\n  const maxHeight = React.useRef<number | undefined>();\n\n  // If the target element changed, reset the max height. If we are tracking\n  // target with class name, always reset because we do not know if\n  // fabric has rendered a new element and disposed the old element.\n  if (typeof target === 'string') {\n    maxHeight.current = undefined;\n  }\n  React.useEffect(() => {\n    maxHeight.current = undefined;\n  }, [target, offsetFromTarget]);\n\n  /**\n   * Return the maximum height the container can grow to\n   * without going out of the specified bounds\n   */\n  const getCachedMaxHeight = (): number => {\n    if (!maxHeight.current) {\n      if (directionalHintFixed && targetRef.current) {\n        const gapSpace = offsetFromTarget ? offsetFromTarget : 0;\n        maxHeight.current = getMaxHeight(targetRef.current, directionalHint!, gapSpace, getCachedBounds());\n      } else {\n        maxHeight.current = getCachedBounds().height! - BORDER_WIDTH * 2;\n      }\n    }\n    return maxHeight.current!;\n  };\n\n  return getCachedMaxHeight;\n}\n\nfunction useAutoDismissEvents(\n  { onDismiss, preventDismissOnScroll }: IPositioningContainerProps,\n  positionedHost: React.RefObject<HTMLDivElement | null>,\n  targetWindow: Window | undefined,\n  targetRef: React.RefObject<Element | MouseEvent | Point | null>,\n  positions: IPositionedData | undefined,\n  updateAsyncPosition: () => void,\n) {\n  const async = useAsync();\n\n  const onResize = React.useCallback(\n    (ev?: Event | React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>): void => {\n      if (onDismiss) {\n        onDismiss(ev);\n      } else {\n        updateAsyncPosition();\n      }\n    },\n    [onDismiss, updateAsyncPosition],\n  );\n\n  const dismissOnLostFocus = React.useCallback(\n    (ev: Event): void => {\n      const target = ev.target as HTMLElement;\n      const clickedOutsideCallout = positionedHost.current && !elementContains(positionedHost.current, target);\n\n      if (\n        (!targetRef.current && clickedOutsideCallout) ||\n        (ev.target !== targetWindow &&\n          clickedOutsideCallout &&\n          ((targetRef.current as MouseEvent).stopPropagation ||\n            !targetRef.current ||\n            (target !== targetRef.current && !elementContains(targetRef.current as HTMLElement, target))))\n      ) {\n        onResize(ev);\n      }\n    },\n    [onResize, positionedHost, targetRef, targetWindow],\n  );\n\n  const dismissOnScroll = React.useCallback(\n    (ev: Event): void => {\n      if (positions && !preventDismissOnScroll) {\n        dismissOnLostFocus(ev);\n      }\n    },\n    [dismissOnLostFocus, positions, preventDismissOnScroll],\n  );\n\n  React.useEffect(() => {\n    const events = new EventGroup({});\n    // This is added so the positioningContainer will dismiss when the window is scrolled\n    // but not when something inside the positioningContainer is scrolled. The delay seems\n    // to be required to avoid React firing an async focus event in IE from\n    // the target changing focus quickly prior to rendering the positioningContainer.\n    async.setTimeout(() => {\n      events.on(targetWindow, 'scroll', async.throttle(dismissOnScroll, 10), true);\n      events.on(targetWindow, 'resize', async.throttle(onResize, 10), true);\n      events.on(targetWindow?.document?.body, 'focus', dismissOnLostFocus, true);\n      events.on(targetWindow?.document?.body, 'click', dismissOnLostFocus, true);\n    }, 0);\n\n    return () => events.dispose();\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on mount\n  }, [dismissOnScroll]);\n}\n\nexport function useHeightOffset(\n  { finalHeight }: IPositioningContainerProps,\n  contentHost: React.RefObject<HTMLDivElement | null>,\n) {\n  /**\n   * Tracks the current height offset and updates during\n   * the height animation when props.finalHeight is specified.\n   * State stored as object to ensure re-render even if the value does not change.\n   *  See https://github.com/microsoft/fluentui/issues/23545\n   */\n  const [heightOffset, setHeightOffset] = React.useState<{ value: number }>({ value: 0 });\n  const async = useAsync();\n  const setHeightOffsetTimer = React.useRef<number>(0);\n\n  /** Animates the height if finalHeight was given. */\n  const setHeightOffsetEveryFrame = (): void => {\n    if (contentHost && finalHeight) {\n      setHeightOffsetTimer.current = async.requestAnimationFrame(() => {\n        if (!contentHost.current) {\n          return;\n        }\n\n        const positioningContainerMainElem = contentHost.current.lastChild as HTMLElement;\n        const cardScrollHeight: number = positioningContainerMainElem.scrollHeight;\n        const cardCurrHeight: number = positioningContainerMainElem.offsetHeight;\n        const scrollDiff: number = cardScrollHeight - cardCurrHeight;\n\n        setHeightOffset({ value: heightOffset.value + scrollDiff });\n\n        if (positioningContainerMainElem.offsetHeight < finalHeight) {\n          setHeightOffsetEveryFrame();\n        } else {\n          async.cancelAnimationFrame(setHeightOffsetTimer.current);\n        }\n      });\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps -- should only re-run if finalHeight changes\n  React.useEffect(setHeightOffsetEveryFrame, [finalHeight]);\n\n  return heightOffset.value;\n}\n\nexport const PositioningContainer: React.FunctionComponent<IPositioningContainerProps> = React.forwardRef<\n  HTMLDivElement,\n  IPositioningContainerProps\n>((propsWithoutDefaults, forwardedRef) => {\n  const props = getPropsWithDefaults<IPositioningContainerProps>(DEFAULT_PROPS, propsWithoutDefaults);\n\n  // @TODO rename to reflect the name of this class\n  const contentHost = React.useRef<HTMLDivElement>(null);\n  /**\n   * The primary positioned div.\n   */\n  const positionedHost = React.useRef<HTMLDivElement>(null);\n  const rootRef = useMergedRefs(forwardedRef, positionedHost);\n\n  const [targetRef, targetWindow] = useTarget(props.target, positionedHost);\n  const getCachedBounds = useCachedBounds(props, targetWindow);\n  const [positions, updateAsyncPosition] = usePositionState(\n    props,\n    positionedHost,\n    contentHost,\n    targetRef,\n    getCachedBounds,\n  );\n  const getCachedMaxHeight = useMaxHeight(props, targetRef, getCachedBounds);\n  const heightOffset = useHeightOffset(props, contentHost);\n\n  useSetInitialFocus(props, contentHost, positions);\n  useAutoDismissEvents(props, positionedHost, targetWindow, targetRef, positions, updateAsyncPosition);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on initial render\n  React.useEffect(() => props.onLayerMounted?.(), []);\n\n  // If there is no target window then we are likely in server side rendering and we should not render anything.\n  if (!targetWindow) {\n    return null;\n  }\n\n  const { className, doNotLayer, positioningContainerWidth, positioningContainerMaxHeight, children } = props;\n\n  const styles = getClassNames();\n\n  const directionalClassName =\n    positions && positions.targetEdge ? AnimationClassNames[SLIDE_ANIMATIONS[positions.targetEdge]] : '';\n\n  const getContentMaxHeight: number = getCachedMaxHeight() + heightOffset!;\n  const contentMaxHeight: number =\n    positioningContainerMaxHeight! && positioningContainerMaxHeight! > getContentMaxHeight\n      ? getContentMaxHeight\n      : positioningContainerMaxHeight!;\n  const content = (\n    <div ref={rootRef} className={css('ms-PositioningContainer', styles.container)}>\n      <div\n        className={mergeStyles(\n          'ms-PositioningContainer-layerHost',\n          styles.root,\n          className,\n          directionalClassName,\n          !!positioningContainerWidth && { width: positioningContainerWidth },\n          doNotLayer && { zIndex: ZIndexes.Layer },\n        )}\n        style={positions ? positions.elementPosition : OFF_SCREEN_STYLE}\n        // Safari and Firefox on Mac OS requires this to back-stop click events so focus remains in the Callout.\n        // See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n        tabIndex={-1}\n        ref={contentHost}\n      >\n        {children}\n        {\n          // @TODO apply to the content container\n          contentMaxHeight\n        }\n      </div>\n    </div>\n  );\n\n  return doNotLayer ? content : <Layer {...props.layerProps}>{content}</Layer>;\n});\nPositioningContainer.displayName = 'PositioningContainer';\n\nfunction arePositionsEqual(positions: IPositionedData, newPosition: IPositionedData): boolean {\n  return comparePositions(positions.elementPosition, newPosition.elementPosition);\n}\n\nfunction comparePositions(oldPositions: IPosition, newPositions: IPosition): boolean {\n  for (const key in newPositions) {\n    if (newPositions.hasOwnProperty(key)) {\n      const oldPositionEdge = oldPositions[key];\n      const newPositionEdge = newPositions[key];\n\n      if (oldPositionEdge && newPositionEdge) {\n        if (oldPositionEdge.toFixed(2) !== newPositionEdge.toFixed(2)) {\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\n"]}
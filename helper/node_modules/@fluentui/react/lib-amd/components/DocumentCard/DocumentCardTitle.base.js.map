{"version":3,"file":"DocumentCardTitle.base.js","sourceRoot":"../src/","sources":["components/DocumentCard/DocumentCardTitle.base.tsx"],"names":[],"mappings":";;;;IAYA,IAAM,aAAa,GAAG,8BAAkB,EAA0D,CAAC;IAOnG,IAAM,sCAAsC,GAAG,CAAC,CAAC;IAEjD;;OAEG;IACH;QAA2C,iDAAiE;QAQ1G,+BAAY,KAA8B;YAA1C,YACE,kBAAM,KAAK,CAAC,SAWb;YAnBO,mBAAa,GAAG,KAAK,CAAC,SAAS,EAAkB,CAAC;YAqH1D,sGAAsG;YACtG,sCAAsC;YAC9B,oBAAc,GAAG;gBACvB,IAAI,CAAC,KAAI,CAAC,gBAAgB,EAAE;oBAC1B,OAAO;iBACR;gBAED,KAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,KAAI,CAAC,wBAAwB,CAAC,CAAC;YACnE,CAAC,CAAC;YAEM,8BAAwB,GAAe;gBAC7C,IAAM,aAAa,GAAG,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC;gBACvC,IAAM,OAAO,GAA0B,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC;gBAElE,IAAI,OAAO,EAAE;oBACX,IAAM,KAAK,GAAwB,gBAAgB,CAAC,OAAO,CAAC,CAAC;oBAC7D,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,MAAM,EAAE;wBAC3C,IAAA,WAAW,GAAkB,OAAO,YAAzB,EAAE,WAAW,GAAK,OAAO,YAAZ,CAAa;wBAE7C,KAAI,CAAC,YAAY,GAAG,WAAW,CAAC;wBAEhC,IAAM,KAAK,GAAW,IAAI,CAAC,KAAK,CAC9B,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,sCAAsC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE,CAAC,CACvG,CAAC;wBAEF,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;wBAE9B,4CAA4C;wBAC5C,0FAA0F;wBAC1F,uBAAuB;wBACvB,+DAA+D;wBAC/D,qDAAqD;wBACrD,yBAAyB;wBACzB,gHAAgH;wBAChH,6FAA6F;wBAC7F,qDAAqD;wBACrD,mEAAmE;wBACnE,uBAAuB;wBACvB,IAAM,YAAY,GAAW,WAAW,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC;wBAE/E,IAAI,YAAY,GAAG,CAAC,EAAE;4BACpB,IAAM,eAAe,GAAW,aAAa,CAAC,MAAM,GAAG,YAAY,GAAG,CAAC,CAAC,CAAC,0BAA0B;4BACnG,OAAO,KAAI,CAAC,QAAQ,CAAC;gCACnB,wBAAwB,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,eAAe,GAAG,CAAC,CAAC;gCACrE,yBAAyB,EAAE,aAAa,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,GAAG,eAAe,GAAG,CAAC,CAAC;6BAC3F,CAAC,CAAC;yBACJ;qBACF;iBACF;YACH,CAAC,CAAC;YAEM,kBAAY,GAAe;gBAC3B,IAAA,KAA0D,KAAI,CAAC,KAAK,EAAlE,wBAAwB,8BAAA,EAAE,yBAAyB,+BAAe,CAAC;gBAC3E,IAAI,wBAAwB,IAAI,yBAAyB,EAAE;oBACzD,IAAM,YAAY,GAAG,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC;oBAEhD,IAAI,CAAC,YAAY,EAAE;wBACjB,OAAO;qBACR;oBAED,IACE,YAAY,CAAC,YAAY,GAAG,YAAY,CAAC,YAAY,GAAG,sCAAsC;wBAC9F,YAAY,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,EACnD;wBACA,KAAI,CAAC,QAAQ,CAAC;4BACZ,wBAAwB,EAAE,wBAAwB,CAAC,KAAK,CAAC,CAAC,EAAE,wBAAwB,CAAC,MAAM,GAAG,CAAC,CAAC;4BAChG,yBAAyB,EAAE,yBAAyB,CAAC,KAAK,CAAC,CAAC,CAAC;yBAC9D,CAAC,CAAC;qBACJ;iBACF;YACH,CAAC,CAAC;YAjLA,kCAAsB,CAAC,KAAI,CAAC,CAAC;YAC7B,KAAI,CAAC,MAAM,GAAG,IAAI,iBAAK,CAAC,KAAI,CAAC,CAAC;YAC9B,KAAI,CAAC,OAAO,GAAG,IAAI,sBAAU,CAAC,KAAI,CAAC,CAAC;YACpC,KAAI,CAAC,YAAY,GAAG,SAAS,CAAC;YAE9B,KAAI,CAAC,KAAK,GAAG;gBACX,wBAAwB,EAAE,SAAS;gBACnC,yBAAyB,EAAE,SAAS;aACrC,CAAC;;QACJ,CAAC;QAEM,kDAAkB,GAAzB,UAA0B,SAAkC;YAA5D,iBAsBC;YArBC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,SAAS,CAAC,KAAK,EAAE;gBACxC,IAAI,CAAC,QAAQ,CAAC;oBACZ,wBAAwB,EAAE,SAAS;oBACnC,yBAAyB,EAAE,SAAS;iBACrC,CAAC,CAAC;aACJ;YAED,IAAI,SAAS,CAAC,cAAc,KAAK,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE;gBAC1D,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE;oBAC7B,IAAI,CAAC,cAAc,EAAE,CAAC;oBACtB,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBACrD,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;iBAC3D;qBAAM;oBACL,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;iBAC5D;aACF;iBAAM,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBAChC,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC;oBAChC,KAAI,CAAC,wBAAwB,EAAE,CAAC;oBAChC,KAAI,CAAC,YAAY,EAAE,CAAC;gBACtB,CAAC,CAAC,CAAC;aACJ;QACH,CAAC;QAEM,iDAAiB,GAAxB;YACE,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE;gBAC7B,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;aAC3D;QACH,CAAC;QAEM,oDAAoB,GAA3B;YACE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACvB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC;QAEM,sCAAM,GAAb;YAAA,iBAkDC;YAjDO,IAAA,KAA4E,IAAI,CAAC,KAAK,EAApF,KAAK,WAAA,EAAE,cAAc,oBAAA,EAAE,oBAAoB,0BAAA,EAAE,MAAM,YAAA,EAAE,KAAK,WAAA,EAAE,SAAS,eAAe,CAAC;YACvF,IAAA,KAA0D,IAAI,CAAC,KAAK,EAAlE,wBAAwB,8BAAA,EAAE,yBAAyB,+BAAe,CAAC;YAE3E,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,MAAO,EAAE;gBACxC,KAAK,EAAE,KAAM;gBACb,SAAS,WAAA;gBACT,oBAAoB,sBAAA;aACrB,CAAC,CAAC;YAEH,IAAI,cAAc,IAAI,wBAAwB,IAAI,yBAAyB,EAAE;gBAC3E,OAAO,CACL,oBAAC,uCAAmB,CAAC,QAAQ,QAC1B,UAAC,EAAkB;wBAAhB,IAAI,UAAA,EAAE,QAAQ,cAAA;oBAChB,OAAO,CACL,6BACE,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC,IAAI,EAChC,GAAG,EAAE,KAAI,CAAC,aAAa,EACvB,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,QAAQ,EAClB,IAAI,EAAE,IAAI;wBAET,wBAAwB;;wBAExB,yBAAyB,CACtB,CACP,CAAC;gBACJ,CAAC,CAC4B,CAChC,CAAC;aACH;iBAAM;gBACL,OAAO,CACL,oBAAC,uCAAmB,CAAC,QAAQ,QAC1B,UAAC,EAAkB;wBAAhB,IAAI,UAAA,EAAE,QAAQ,cAAA;oBAChB,OAAO,CACL,6BACE,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC,IAAI,EAChC,GAAG,EAAE,KAAI,CAAC,aAAa,EACvB,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,QAAQ,EAClB,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC,SAAS,IAElE,KAAK,CACF,CACP,CAAC;gBACJ,CAAC,CAC4B,CAChC,CAAC;aACH;QACH,CAAC;QAMD,sBAAY,mDAAgB;YAJ5B;;;eAGG;iBACH;gBACE,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS,CAAC;YACxE,CAAC;;;WAAA;QA0EO,iDAAiB,GAAzB;YAAA,iBAaC;YAZC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,OAAO;aACR;YAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;gBACrC,OAAO,KAAI,CAAC,QAAQ,CAAC;gBACrB,KAAI,CAAC,YAAY,GAAG,SAAS,CAAC;gBAC9B,KAAI,CAAC,QAAQ,CAAC;oBACZ,wBAAwB,EAAE,SAAS;oBACnC,yBAAyB,EAAE,SAAS;iBACrC,CAAC,CAAC;YACL,CAAC,EAAE,GAAG,CAAC,CAAC;QACV,CAAC;QACH,4BAAC;IAAD,CAAC,AA5MD,CAA2C,KAAK,CAAC,SAAS,GA4MzD;IA5MY,sDAAqB","sourcesContent":["import * as React from 'react';\n\nimport { Async, EventGroup, classNamesFunction } from '../../Utilities';\nimport { initializeComponentRef } from '@fluentui/utilities';\nimport type {\n  IDocumentCardTitleProps,\n  IDocumentCardTitleStyleProps,\n  IDocumentCardTitleStyles,\n} from './DocumentCardTitle.types';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport { DocumentCardContext } from './DocumentCard.base';\n\nconst getClassNames = classNamesFunction<IDocumentCardTitleStyleProps, IDocumentCardTitleStyles>();\n\nexport interface IDocumentCardTitleState {\n  truncatedTitleFirstPiece?: string;\n  truncatedTitleSecondPiece?: string;\n}\n\nconst TRUNCATION_VERTICAL_OVERFLOW_THRESHOLD = 5;\n\n/**\n * {@docCategory DocumentCard}\n */\nexport class DocumentCardTitleBase extends React.Component<IDocumentCardTitleProps, IDocumentCardTitleState> {\n  private _titleElement = React.createRef<HTMLDivElement>();\n  private _classNames: IProcessedStyleSet<IDocumentCardTitleStyles>;\n  private _async: Async;\n  private _events: EventGroup;\n  private _clientWidth: number | undefined;\n  private _timerId: number | undefined;\n\n  constructor(props: IDocumentCardTitleProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n    this._clientWidth = undefined;\n\n    this.state = {\n      truncatedTitleFirstPiece: undefined,\n      truncatedTitleSecondPiece: undefined,\n    };\n  }\n\n  public componentDidUpdate(prevProps: IDocumentCardTitleProps): void {\n    if (this.props.title !== prevProps.title) {\n      this.setState({\n        truncatedTitleFirstPiece: undefined,\n        truncatedTitleSecondPiece: undefined,\n      });\n    }\n\n    if (prevProps.shouldTruncate !== this.props.shouldTruncate) {\n      if (this.props.shouldTruncate) {\n        this._truncateTitle();\n        this._async.requestAnimationFrame(this._shrinkTitle);\n        this._events.on(window, 'resize', this._updateTruncation);\n      } else {\n        this._events.off(window, 'resize', this._updateTruncation);\n      }\n    } else if (this._needMeasurement) {\n      this._async.requestAnimationFrame(() => {\n        this._truncateWhenInAnimation();\n        this._shrinkTitle();\n      });\n    }\n  }\n\n  public componentDidMount(): void {\n    if (this.props.shouldTruncate) {\n      this._truncateTitle();\n      this._events.on(window, 'resize', this._updateTruncation);\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._events.dispose();\n    this._async.dispose();\n  }\n\n  public render(): JSX.Element {\n    const { title, shouldTruncate, showAsSecondaryTitle, styles, theme, className } = this.props;\n    const { truncatedTitleFirstPiece, truncatedTitleSecondPiece } = this.state;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      showAsSecondaryTitle,\n    });\n\n    if (shouldTruncate && truncatedTitleFirstPiece && truncatedTitleSecondPiece) {\n      return (\n        <DocumentCardContext.Consumer>\n          {({ role, tabIndex }) => {\n            return (\n              <div\n                className={this._classNames.root}\n                ref={this._titleElement}\n                title={title}\n                tabIndex={tabIndex}\n                role={role}\n              >\n                {truncatedTitleFirstPiece}\n                &hellip;\n                {truncatedTitleSecondPiece}\n              </div>\n            );\n          }}\n        </DocumentCardContext.Consumer>\n      );\n    } else {\n      return (\n        <DocumentCardContext.Consumer>\n          {({ role, tabIndex }) => {\n            return (\n              <div\n                className={this._classNames.root}\n                ref={this._titleElement}\n                title={title}\n                tabIndex={tabIndex}\n                role={role}\n                style={this._needMeasurement ? { whiteSpace: 'nowrap' } : undefined}\n              >\n                {title}\n              </div>\n            );\n          }}\n        </DocumentCardContext.Consumer>\n      );\n    }\n  }\n\n  /**\n   * In measuring, it will render a same style text with whiteSpace: 'nowrap', to get overflow rate.\n   * So that the logic can predict truncated text well.\n   */\n  private get _needMeasurement(): boolean {\n    return !!this.props.shouldTruncate && this._clientWidth === undefined;\n  }\n\n  // Truncate logic here way can't handle the case that chars with different widths are mixed very well.\n  // Let _shrinkTitle take care of that.\n  private _truncateTitle = (): void => {\n    if (!this._needMeasurement) {\n      return;\n    }\n\n    this._async.requestAnimationFrame(this._truncateWhenInAnimation);\n  };\n\n  private _truncateWhenInAnimation: () => void = () => {\n    const originalTitle = this.props.title;\n    const element: HTMLDivElement | null = this._titleElement.current;\n\n    if (element) {\n      const style: CSSStyleDeclaration = getComputedStyle(element);\n      if (style.width && style.lineHeight && style.height) {\n        const { clientWidth, scrollWidth } = element;\n\n        this._clientWidth = clientWidth;\n\n        const lines: number = Math.floor(\n          (parseInt(style.height, 10) + TRUNCATION_VERTICAL_OVERFLOW_THRESHOLD) / parseInt(style.lineHeight, 10),\n        );\n\n        element.style.whiteSpace = '';\n\n        // Use overflow to predict truncated length.\n        // Take an example.The text is: A text with A very long text that need to be truncated.ppt\n        // if container is like\n        // |A text with A very| long text that need to be truncated.ppt\n        // The scroll width is 58, (take two | out of length)\n        // The client width is 18\n        // the overflow rate is scrollWidth/clientWidth which should be close to length(overflowText)/length(visualText)\n        // And the length of remaining text should be truncated is (original Length)/(58/18) -3 = 15.\n        // So that the logic can predict truncated text well.\n        // first piece will be `A text `, * second piece will be `ated.ppt`\n        // |A text ...ated.ppt|\n        const overFlowRate: number = scrollWidth / (parseInt(style.width, 10) * lines);\n\n        if (overFlowRate > 1) {\n          const truncatedLength: number = originalTitle.length / overFlowRate - 3; /** Saved for separator */\n          return this.setState({\n            truncatedTitleFirstPiece: originalTitle.slice(0, truncatedLength / 2),\n            truncatedTitleSecondPiece: originalTitle.slice(originalTitle.length - truncatedLength / 2),\n          });\n        }\n      }\n    }\n  };\n\n  private _shrinkTitle: () => void = () => {\n    const { truncatedTitleFirstPiece, truncatedTitleSecondPiece } = this.state;\n    if (truncatedTitleFirstPiece && truncatedTitleSecondPiece) {\n      const titleElement = this._titleElement.current;\n\n      if (!titleElement) {\n        return;\n      }\n\n      if (\n        titleElement.scrollHeight > titleElement.clientHeight + TRUNCATION_VERTICAL_OVERFLOW_THRESHOLD ||\n        titleElement.scrollWidth > titleElement.clientWidth\n      ) {\n        this.setState({\n          truncatedTitleFirstPiece: truncatedTitleFirstPiece.slice(0, truncatedTitleFirstPiece.length - 1),\n          truncatedTitleSecondPiece: truncatedTitleSecondPiece.slice(1),\n        });\n      }\n    }\n  };\n\n  private _updateTruncation(): void {\n    if (this._timerId) {\n      return;\n    }\n\n    this._timerId = this._async.setTimeout(() => {\n      delete this._timerId;\n      this._clientWidth = undefined;\n      this.setState({\n        truncatedTitleFirstPiece: undefined,\n        truncatedTitleSecondPiece: undefined,\n      });\n    }, 250);\n  }\n}\n"]}
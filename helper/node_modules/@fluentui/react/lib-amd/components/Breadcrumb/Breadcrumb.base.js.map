{"version":3,"file":"Breadcrumb.base.js","sourceRoot":"../src/","sources":["components/Breadcrumb/Breadcrumb.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  initializeComponentRef,\n  getRTL,\n  classNamesFunction,\n  getNativeProps,\n  htmlElementProperties,\n} from '../../Utilities';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { Link } from '../../Link';\nimport { Icon } from '../../Icon';\nimport { IconButton } from '../../Button';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { ResizeGroup } from '../../ResizeGroup';\nimport { TooltipHost, TooltipOverflowMode } from '../../Tooltip';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport type { IContextualMenuItem, IContextualMenuItemProps } from '../../ContextualMenu';\nimport type {\n  IBreadcrumbProps,\n  IBreadcrumbItem,\n  IDividerAsProps,\n  IBreadcrumbData,\n  IBreadcrumbStyleProps,\n  IBreadcrumbStyles,\n} from './Breadcrumb.types';\nimport { composeRenderFunction } from '../../Utilities';\n\n/** @deprecated Use IBreadcrumbData */\nexport type IBreadCrumbData = IBreadcrumbData;\n\nconst getClassNames = classNamesFunction<IBreadcrumbStyleProps, IBreadcrumbStyles>();\n\nconst OVERFLOW_KEY = 'overflow';\nconst nullFunction = (): null => null;\n\nconst nonActionableItemProps: Partial<IContextualMenuItemProps> = {\n  styles: props => {\n    const { theme } = props;\n    return {\n      root: {\n        selectors: {\n          '&.is-disabled': {\n            color: theme.semanticColors.bodyText,\n          },\n        },\n      },\n    };\n  },\n};\n\n/**\n * {@docCategory Breadcrumb}\n */\nexport class BreadcrumbBase extends React.Component<IBreadcrumbProps, any> {\n  public static defaultProps: IBreadcrumbProps = {\n    items: [],\n    maxDisplayedItems: 999,\n    overflowIndex: 0,\n  };\n\n  private _classNames: IProcessedStyleSet<IBreadcrumbStyles>;\n  private _focusZone = React.createRef<FocusZone>();\n\n  constructor(props: IBreadcrumbProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this._validateProps(props);\n  }\n\n  /**\n   * Sets focus to the first breadcrumb link.\n   */\n  public focus(): void {\n    if (this._focusZone.current) {\n      this._focusZone.current.focus();\n    }\n  }\n\n  public render(): JSX.Element {\n    this._validateProps(this.props);\n\n    const {\n      onReduceData = this._onReduceData,\n      onGrowData = this._onGrowData,\n      overflowIndex,\n      maxDisplayedItems,\n      items,\n      className,\n      theme,\n      styles,\n    } = this.props;\n    const renderedItems = [...items];\n    const renderedOverflowItems = renderedItems.splice(overflowIndex!, renderedItems.length - maxDisplayedItems!);\n    const breadcrumbData: IBreadcrumbData = {\n      props: this.props,\n      renderedItems,\n      renderedOverflowItems,\n    };\n\n    this._classNames = getClassNames(styles, {\n      className,\n      theme: theme!,\n    });\n\n    return (\n      <ResizeGroup\n        onRenderData={this._onRenderBreadcrumb}\n        onReduceData={onReduceData}\n        onGrowData={onGrowData}\n        data={breadcrumbData}\n      />\n    );\n  }\n\n  /**\n   * Remove the first rendered item past the overlow point and put it and the end the overflow set.\n   */\n  private _onReduceData = (data: IBreadcrumbData): IBreadcrumbData | undefined => {\n    let { renderedItems, renderedOverflowItems } = data;\n    const { overflowIndex } = data.props;\n\n    const movedItem = renderedItems[overflowIndex!];\n\n    if (!movedItem) {\n      return undefined;\n    }\n\n    renderedItems = [...renderedItems];\n    renderedItems.splice(overflowIndex!, 1);\n\n    renderedOverflowItems = [...renderedOverflowItems, movedItem];\n\n    return { ...data, renderedItems, renderedOverflowItems };\n  };\n\n  /**\n   * Remove the last item of the overflow set and insert the item as the start of the rendered set past the overflow\n   * point.\n   */\n  private _onGrowData = (data: IBreadcrumbData): IBreadcrumbData | undefined => {\n    let { renderedItems, renderedOverflowItems } = data;\n    const { overflowIndex, maxDisplayedItems } = data.props;\n\n    renderedOverflowItems = [...renderedOverflowItems];\n    const movedItem = renderedOverflowItems.pop();\n\n    if (!movedItem || renderedItems.length >= maxDisplayedItems!) {\n      return undefined;\n    }\n\n    renderedItems = [...renderedItems];\n    renderedItems.splice(overflowIndex!, 0, movedItem);\n\n    return { ...data, renderedItems, renderedOverflowItems };\n  };\n\n  private _onRenderBreadcrumb = (data: IBreadcrumbData) => {\n    const {\n      ariaLabel,\n      dividerAs: DividerType = Icon as React.ElementType<IDividerAsProps>,\n      onRenderItem,\n      overflowAriaLabel,\n      overflowIndex,\n      onRenderOverflowIcon,\n      overflowButtonAs,\n    } = data.props;\n    const { renderedOverflowItems, renderedItems } = data;\n\n    const contextualItems = renderedOverflowItems.map(\n      (item): IContextualMenuItem => {\n        const isActionable = !!(item.onClick || item.href);\n        return {\n          text: item.text,\n          name: item.text,\n          key: item.key,\n          onClick: item.onClick ? this._onBreadcrumbClicked.bind(this, item) : null,\n          href: item.href,\n          disabled: !isActionable,\n          itemProps: isActionable ? undefined : nonActionableItemProps,\n        };\n      },\n    );\n\n    // Find index of last rendered item so the divider icon\n    // knows not to render on that item\n    const lastItemIndex = renderedItems.length - 1;\n    const hasOverflowItems = renderedOverflowItems && renderedOverflowItems.length !== 0;\n\n    const itemElements: JSX.Element[] = renderedItems.map((item, index) => {\n      let finalOnRenderItem = this._onRenderItem;\n\n      if (item.onRender) {\n        finalOnRenderItem = composeRenderFunction(item.onRender, finalOnRenderItem);\n      }\n\n      if (onRenderItem) {\n        finalOnRenderItem = composeRenderFunction(onRenderItem, finalOnRenderItem);\n      }\n\n      return (\n        <li className={this._classNames.listItem} key={item.key || String(index)}>\n          {finalOnRenderItem(item)}\n          {(index !== lastItemIndex || (hasOverflowItems && index === overflowIndex! - 1)) && (\n            <DividerType\n              className={this._classNames.chevron}\n              iconName={getRTL(this.props.theme) ? 'ChevronLeft' : 'ChevronRight'}\n              item={item}\n            />\n          )}\n        </li>\n      );\n    });\n\n    if (hasOverflowItems) {\n      const iconProps = !onRenderOverflowIcon ? { iconName: 'More' } : {};\n      const onRenderMenuIcon = onRenderOverflowIcon ? onRenderOverflowIcon : nullFunction;\n      const OverflowButton = overflowButtonAs ? overflowButtonAs : IconButton;\n\n      itemElements.splice(\n        overflowIndex!,\n        0,\n        <li className={this._classNames.overflow} key={OVERFLOW_KEY}>\n          <OverflowButton\n            className={this._classNames.overflowButton}\n            iconProps={iconProps}\n            role=\"button\"\n            aria-haspopup=\"true\"\n            ariaLabel={overflowAriaLabel}\n            onRenderMenuIcon={onRenderMenuIcon}\n            menuProps={{\n              items: contextualItems,\n              directionalHint: DirectionalHint.bottomLeftEdge,\n            }}\n          />\n          {overflowIndex !== lastItemIndex + 1 && (\n            <DividerType\n              className={this._classNames.chevron}\n              iconName={getRTL(this.props.theme) ? 'ChevronLeft' : 'ChevronRight'}\n              item={renderedOverflowItems[renderedOverflowItems.length - 1]}\n            />\n          )}\n        </li>,\n      );\n    }\n\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, htmlElementProperties, [\n      'className',\n    ]);\n\n    return (\n      <div className={this._classNames.root} role=\"navigation\" aria-label={ariaLabel} {...nativeProps}>\n        <FocusZone\n          componentRef={this._focusZone}\n          direction={FocusZoneDirection.horizontal}\n          {...this.props.focusZoneProps}\n        >\n          <ol className={this._classNames.list}>{itemElements}</ol>\n        </FocusZone>\n      </div>\n    );\n  };\n\n  private _onRenderItem = (item?: IBreadcrumbItem) => {\n    if (!item) {\n      return null;\n    }\n\n    const { as, href, onClick, isCurrentItem, text, onRenderContent, ...additionalProps } = item;\n\n    let finalOnRenderContent = defaultOnRenderCrumbContent;\n\n    if (onRenderContent) {\n      finalOnRenderContent = composeRenderFunction(onRenderContent, finalOnRenderContent);\n    }\n\n    if (this.props.onRenderItemContent) {\n      finalOnRenderContent = composeRenderFunction(this.props.onRenderItemContent, finalOnRenderContent);\n    }\n\n    if (onClick || href) {\n      return (\n        <Link\n          {...additionalProps}\n          as={as}\n          className={this._classNames.itemLink}\n          href={href}\n          aria-current={isCurrentItem ? 'page' : undefined}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={this._onBreadcrumbClicked.bind(this, item)}\n        >\n          <TooltipHost content={text} overflowMode={TooltipOverflowMode.Parent} {...this.props.tooltipHostProps}>\n            {finalOnRenderContent(item)}\n          </TooltipHost>\n        </Link>\n      );\n    } else {\n      const Tag = as || 'span';\n      return (\n        <Tag {...additionalProps} className={this._classNames.item}>\n          <TooltipHost content={text} overflowMode={TooltipOverflowMode.Parent} {...this.props.tooltipHostProps}>\n            {finalOnRenderContent(item)}\n          </TooltipHost>\n        </Tag>\n      );\n    }\n  };\n\n  private _onBreadcrumbClicked = (item: IBreadcrumbItem, ev: React.MouseEvent<HTMLElement>) => {\n    if (item.onClick) {\n      item.onClick(ev, item);\n    }\n  };\n\n  /**\n   * Validate incoming props\n   * @param props - Props to validate\n   */\n  private _validateProps(props: IBreadcrumbProps): void {\n    const { maxDisplayedItems, overflowIndex, items } = props;\n    if (\n      overflowIndex! < 0 ||\n      (maxDisplayedItems! > 1 && overflowIndex! > maxDisplayedItems! - 1) ||\n      (items.length > 0 && overflowIndex! > items.length - 1)\n    ) {\n      throw new Error('Breadcrumb: overflowIndex out of range');\n    }\n  }\n}\n\nfunction defaultOnRenderCrumbContent(item?: IBreadcrumbItem): JSX.Element | null {\n  return item ? <>{item.text}</> : null;\n}\n"]}
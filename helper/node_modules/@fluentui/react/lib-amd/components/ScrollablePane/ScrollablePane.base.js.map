{"version":3,"file":"ScrollablePane.base.js","sourceRoot":"../src/","sources":["components/ScrollablePane/ScrollablePane.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Async,\n  EventGroup,\n  classNamesFunction,\n  divProperties,\n  getNativeProps,\n  getRTL,\n  initializeComponentRef,\n} from '../../Utilities';\nimport { ScrollablePaneContext } from './ScrollablePane.types';\nimport { Sticky } from '../../Sticky';\nimport type {\n  IScrollablePane,\n  IScrollablePaneContext,\n  IScrollablePaneProps,\n  IScrollablePaneStyleProps,\n  IScrollablePaneStyles,\n} from './ScrollablePane.types';\n\nexport interface IScrollablePaneState {\n  stickyTopHeight: number;\n  stickyBottomHeight: number;\n  scrollbarWidth: number;\n  scrollbarHeight: number;\n}\n\nconst getClassNames = classNamesFunction<IScrollablePaneStyleProps, IScrollablePaneStyles>();\n\nexport class ScrollablePaneBase\n  extends React.Component<IScrollablePaneProps, IScrollablePaneState>\n  implements IScrollablePane {\n  private _root = React.createRef<HTMLDivElement>();\n  private _stickyAboveRef = React.createRef<HTMLDivElement>();\n  private _stickyBelowRef = React.createRef<HTMLDivElement>();\n  private _contentContainer = React.createRef<HTMLDivElement>();\n  private _subscribers: Set<Function>;\n  private _stickies: Set<Sticky>;\n  private _mutationObserver: MutationObserver;\n  private _notifyThrottled: () => void;\n  private _async: Async;\n  private _events: EventGroup;\n\n  constructor(props: IScrollablePaneProps) {\n    super(props);\n    this._subscribers = new Set<Function>();\n    this._stickies = new Set<Sticky>();\n\n    initializeComponentRef(this);\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n\n    this.state = {\n      stickyTopHeight: 0,\n      stickyBottomHeight: 0,\n      scrollbarWidth: 0,\n      scrollbarHeight: 0,\n    };\n\n    this._notifyThrottled = this._async.throttle(this.notifySubscribers, 50);\n  }\n\n  public get root(): HTMLDivElement | null {\n    return this._root.current;\n  }\n\n  public get stickyAbove(): HTMLDivElement | null {\n    return this._stickyAboveRef.current;\n  }\n\n  public get stickyBelow(): HTMLDivElement | null {\n    return this._stickyBelowRef.current;\n  }\n\n  public get contentContainer(): HTMLDivElement | null {\n    return this._contentContainer.current;\n  }\n\n  public componentDidMount() {\n    const { initialScrollPosition } = this.props;\n    this._events.on(this.contentContainer, 'scroll', this._onScroll);\n    this._events.on(window, 'resize', this._onWindowResize);\n    if (this.contentContainer && initialScrollPosition) {\n      this.contentContainer.scrollTop = initialScrollPosition;\n    }\n\n    // Set sticky distances from top property, then sort in correct order and notify subscribers\n    this.setStickiesDistanceFromTop();\n    this._stickies.forEach(sticky => {\n      this.sortSticky(sticky);\n    });\n    this.notifySubscribers();\n\n    if ('MutationObserver' in window) {\n      this._mutationObserver = new MutationObserver(mutation => {\n        // Function to check if mutation is occuring in stickyAbove or stickyBelow\n        function checkIfMutationIsSticky(mutationRecord: MutationRecord): boolean {\n          if (this.stickyAbove !== null && this.stickyBelow !== null) {\n            return this.stickyAbove.contains(mutationRecord.target) || this.stickyBelow.contains(mutationRecord.target);\n          }\n          return false;\n        }\n\n        // Compute the scrollbar height, which might have changed if the content's width changed and caused overflow\n        const scrollbarHeight = this._getScrollbarHeight();\n        // If the scrollbar height changed, update state so it's postioned correctly below sticky footer\n        if (scrollbarHeight !== this.state.scrollbarHeight) {\n          this.setState({\n            scrollbarHeight: scrollbarHeight,\n          });\n        }\n\n        // Notify subscribers again to re-check whether Sticky should be Sticky'd or not\n        this.notifySubscribers();\n\n        // If mutation occurs in sticky header or footer, then update sticky top/bottom heights\n        if (mutation.some(checkIfMutationIsSticky.bind(this))) {\n          this.updateStickyRefHeights();\n        } else {\n          // If mutation occurs in scrollable region, then find Sticky it belongs to and force update\n          const stickyList: Sticky[] = [];\n          this._stickies.forEach(sticky => {\n            if (sticky.root && sticky.root.contains(mutation[0].target)) {\n              stickyList.push(sticky);\n            }\n          });\n          if (stickyList.length) {\n            stickyList.forEach(sticky => {\n              sticky.forceUpdate();\n            });\n          }\n        }\n      });\n\n      if (this.root) {\n        this._mutationObserver.observe(this.root, {\n          childList: true,\n          attributes: true,\n          subtree: true,\n          characterData: true,\n        });\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    this._events.dispose();\n    this._async.dispose();\n\n    if (this._mutationObserver) {\n      this._mutationObserver.disconnect();\n    }\n  }\n\n  // Only updates if props/state change, just to prevent excessive setState with updateStickyRefHeights\n  public shouldComponentUpdate(nextProps: IScrollablePaneProps, nextState: IScrollablePaneState): boolean {\n    return (\n      this.props.children !== nextProps.children ||\n      this.props.initialScrollPosition !== nextProps.initialScrollPosition ||\n      this.props.className !== nextProps.className ||\n      this.state.stickyTopHeight !== nextState.stickyTopHeight ||\n      this.state.stickyBottomHeight !== nextState.stickyBottomHeight ||\n      this.state.scrollbarWidth !== nextState.scrollbarWidth ||\n      this.state.scrollbarHeight !== nextState.scrollbarHeight\n    );\n  }\n\n  public componentDidUpdate(prevProps: IScrollablePaneProps, prevState: IScrollablePaneState) {\n    const initialScrollPosition = this.props.initialScrollPosition;\n    if (\n      this.contentContainer &&\n      typeof initialScrollPosition === 'number' &&\n      prevProps.initialScrollPosition !== initialScrollPosition\n    ) {\n      this.contentContainer.scrollTop = initialScrollPosition;\n    }\n\n    // Update subscribers when stickyTopHeight/stickyBottomHeight changes\n    if (\n      prevState.stickyTopHeight !== this.state.stickyTopHeight ||\n      prevState.stickyBottomHeight !== this.state.stickyBottomHeight\n    ) {\n      this.notifySubscribers();\n    }\n\n    this._async.setTimeout(this._onWindowResize, 0);\n  }\n\n  public render(): JSX.Element {\n    const { className, scrollContainerFocus, scrollContainerAriaLabel, theme, styles, onScroll } = this.props;\n    const { stickyTopHeight, stickyBottomHeight } = this.state;\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      scrollbarVisibility: this.props.scrollbarVisibility,\n    });\n\n    const scrollContainerProps = scrollContainerFocus\n      ? {\n          role: 'group',\n          tabIndex: 0,\n          'aria-label': scrollContainerAriaLabel,\n          onScroll,\n        }\n      : {\n          onScroll,\n        };\n\n    return (\n      <div\n        {...getNativeProps(\n          {\n            ...this.props,\n          },\n          divProperties,\n          // on React 17 onScroll is not being invoked on root element,\n          // as a fix this method will be provided to the container element\n          ['onScroll'],\n        )}\n        ref={this._root}\n        className={classNames.root}\n      >\n        <div\n          ref={this._stickyAboveRef}\n          className={classNames.stickyAbove}\n          style={this._getStickyContainerStyle(stickyTopHeight, true)}\n        />\n        <div\n          ref={this._contentContainer}\n          {...scrollContainerProps}\n          className={classNames.contentContainer}\n          data-is-scrollable={true}\n        >\n          <ScrollablePaneContext.Provider value={this._getScrollablePaneContext()}>\n            {this.props.children}\n          </ScrollablePaneContext.Provider>\n        </div>\n        <div className={classNames.stickyBelow} style={this._getStickyContainerStyle(stickyBottomHeight, false)}>\n          <div ref={this._stickyBelowRef} className={classNames.stickyBelowItems} />\n        </div>\n      </div>\n    );\n  }\n\n  public setStickiesDistanceFromTop(): void {\n    if (this.contentContainer) {\n      this._stickies.forEach(sticky => {\n        sticky.setDistanceFromTop(this.contentContainer as HTMLDivElement);\n      });\n    }\n  }\n\n  public forceLayoutUpdate() {\n    this._onWindowResize();\n  }\n\n  public subscribe = (handler: Function): void => {\n    this._subscribers.add(handler);\n  };\n\n  public unsubscribe = (handler: Function): void => {\n    this._subscribers.delete(handler);\n  };\n\n  public addSticky = (sticky: Sticky): void => {\n    this._stickies.add(sticky);\n\n    // If ScrollablePane is mounted, then sort sticky in correct place\n    if (this.contentContainer) {\n      sticky.setDistanceFromTop(this.contentContainer);\n      this.sortSticky(sticky);\n    }\n  };\n\n  public removeSticky = (sticky: Sticky): void => {\n    this._stickies.delete(sticky);\n    this._removeStickyFromContainers(sticky);\n    this.notifySubscribers();\n  };\n\n  public sortSticky = (sticky: Sticky, sortAgain?: boolean): void => {\n    if (this.stickyAbove && this.stickyBelow) {\n      if (sortAgain) {\n        this._removeStickyFromContainers(sticky);\n      }\n      if (sticky.canStickyTop && sticky.stickyContentTop) {\n        this._addToStickyContainer(sticky, this.stickyAbove, sticky.stickyContentTop);\n      }\n\n      if (sticky.canStickyBottom && sticky.stickyContentBottom) {\n        this._addToStickyContainer(sticky, this.stickyBelow, sticky.stickyContentBottom);\n      }\n    }\n  };\n\n  public updateStickyRefHeights = (): void => {\n    const stickyItems = this._stickies;\n\n    let stickyTopHeight = 0;\n    let stickyBottomHeight = 0;\n\n    stickyItems.forEach((sticky: Sticky) => {\n      const { isStickyTop, isStickyBottom } = sticky.state;\n      if (sticky.nonStickyContent) {\n        if (isStickyTop) {\n          stickyTopHeight += sticky.nonStickyContent.offsetHeight;\n        }\n        if (isStickyBottom) {\n          stickyBottomHeight += sticky.nonStickyContent.offsetHeight;\n        }\n        this._checkStickyStatus(sticky);\n      }\n    });\n\n    this.setState({\n      stickyTopHeight: stickyTopHeight,\n      stickyBottomHeight: stickyBottomHeight,\n    });\n  };\n\n  public notifySubscribers = (): void => {\n    if (this.contentContainer) {\n      this._subscribers.forEach(handle => {\n        // this.stickyBelow is passed in for calculating distance to determine Sticky status\n        handle(this.contentContainer, this.stickyBelow);\n      });\n    }\n  };\n\n  public getScrollPosition = (): number => {\n    if (this.contentContainer) {\n      return this.contentContainer.scrollTop;\n    }\n\n    return 0;\n  };\n\n  public syncScrollSticky = (sticky: Sticky): void => {\n    if (sticky && this.contentContainer) {\n      sticky.syncScroll(this.contentContainer);\n    }\n  };\n\n  private _getScrollablePaneContext = (): IScrollablePaneContext => {\n    return {\n      scrollablePane: {\n        subscribe: this.subscribe,\n        unsubscribe: this.unsubscribe,\n        addSticky: this.addSticky,\n        removeSticky: this.removeSticky,\n        updateStickyRefHeights: this.updateStickyRefHeights,\n        sortSticky: this.sortSticky,\n        notifySubscribers: this.notifySubscribers,\n        syncScrollSticky: this.syncScrollSticky,\n      },\n    };\n  };\n\n  private _checkStickyStatus(sticky: Sticky): void {\n    if (this.stickyAbove && this.stickyBelow && this.contentContainer && sticky.nonStickyContent) {\n      // If sticky is sticky, then append content to appropriate container\n      if (sticky.state.isStickyTop || sticky.state.isStickyBottom) {\n        if (\n          sticky.state.isStickyTop &&\n          !this.stickyAbove.contains(sticky.nonStickyContent) &&\n          sticky.stickyContentTop\n        ) {\n          sticky.addSticky(sticky.stickyContentTop);\n        }\n\n        if (\n          sticky.state.isStickyBottom &&\n          !this.stickyBelow.contains(sticky.nonStickyContent) &&\n          sticky.stickyContentBottom\n        ) {\n          sticky.addSticky(sticky.stickyContentBottom);\n        }\n      } else if (!this.contentContainer.contains(sticky.nonStickyContent)) {\n        // Reset sticky if it's not sticky and not in the contentContainer element\n        sticky.resetSticky();\n      }\n    }\n  }\n\n  private _addToStickyContainer = (\n    sticky: Sticky,\n    stickyContainer: HTMLDivElement,\n    stickyContentToAdd: HTMLDivElement,\n  ): void => {\n    // If there's no children, append child to list, otherwise, sort though array and append at correct position\n    if (!stickyContainer.children.length) {\n      stickyContainer.appendChild(stickyContentToAdd);\n    } else {\n      // If stickyContentToAdd isn't a child element of target container, then append\n      if (!stickyContainer.contains(stickyContentToAdd)) {\n        const stickyChildrenElements: Element[] = [].slice.call(stickyContainer.children);\n\n        const stickyList: Sticky[] = [];\n        // Get stickies.  Filter by canStickyTop/Bottom, then sort by distance from top, and then\n        // filter by elements that are in the stickyContainer already.\n        this._stickies.forEach(stickyItem => {\n          if (stickyContainer === this.stickyAbove && sticky.canStickyTop) {\n            stickyList.push(stickyItem);\n          } else if (sticky.canStickyBottom) {\n            stickyList.push(stickyItem);\n          }\n        });\n\n        const stickyListSorted = stickyList\n          .sort((a, b) => {\n            return (a.state.distanceFromTop || 0) - (b.state.distanceFromTop || 0);\n          })\n          .filter(item => {\n            const stickyContent =\n              stickyContainer === this.stickyAbove ? item.stickyContentTop : item.stickyContentBottom;\n            if (stickyContent) {\n              return stickyChildrenElements.indexOf(stickyContent) > -1;\n            }\n            return false;\n          });\n\n        // Get first element that has a distance from top that is further than our sticky that is being added\n        let targetStickyToAppendBefore: Sticky | undefined = undefined;\n        for (const stickyListItem of stickyListSorted) {\n          if ((stickyListItem.state.distanceFromTop || 0) >= (sticky.state.distanceFromTop || 0)) {\n            targetStickyToAppendBefore = stickyListItem;\n            break;\n          }\n        }\n\n        // If target element to append before is known, grab respective stickyContentTop/Bottom element\n        // and insert before\n        let targetContainer: HTMLDivElement | null = null;\n        if (targetStickyToAppendBefore) {\n          targetContainer =\n            stickyContainer === this.stickyAbove\n              ? targetStickyToAppendBefore.stickyContentTop\n              : targetStickyToAppendBefore.stickyContentBottom;\n        }\n        stickyContainer.insertBefore(stickyContentToAdd, targetContainer);\n      }\n    }\n  };\n\n  private _removeStickyFromContainers = (sticky: Sticky): void => {\n    if (this.stickyAbove && sticky.stickyContentTop && this.stickyAbove.contains(sticky.stickyContentTop)) {\n      this.stickyAbove.removeChild(sticky.stickyContentTop);\n    }\n    if (this.stickyBelow && sticky.stickyContentBottom && this.stickyBelow.contains(sticky.stickyContentBottom)) {\n      this.stickyBelow.removeChild(sticky.stickyContentBottom);\n    }\n  };\n\n  private _onWindowResize = (): void => {\n    const scrollbarWidth = this._getScrollbarWidth();\n    const scrollbarHeight = this._getScrollbarHeight();\n\n    this.setState({\n      scrollbarWidth,\n      scrollbarHeight,\n    });\n\n    this.notifySubscribers();\n  };\n\n  private _getStickyContainerStyle = (height: number, isTop: boolean): React.CSSProperties => {\n    return {\n      height: height,\n      ...(getRTL(this.props.theme)\n        ? {\n            right: '0',\n            left: `${this.state.scrollbarWidth || this._getScrollbarWidth() || 0}px`,\n          }\n        : {\n            left: '0',\n            right: `${this.state.scrollbarWidth || this._getScrollbarWidth() || 0}px`,\n          }),\n      ...(isTop\n        ? {\n            top: '0',\n          }\n        : {\n            bottom: `${this.state.scrollbarHeight || this._getScrollbarHeight() || 0}px`,\n          }),\n    };\n  };\n\n  private _getScrollbarWidth(): number {\n    const { contentContainer } = this;\n    return contentContainer ? contentContainer.offsetWidth - contentContainer.clientWidth : 0;\n  }\n\n  private _getScrollbarHeight(): number {\n    const { contentContainer } = this;\n    return contentContainer ? contentContainer.offsetHeight - contentContainer.clientHeight : 0;\n  }\n\n  private _onScroll = () => {\n    const { contentContainer } = this;\n\n    if (contentContainer) {\n      this._stickies.forEach((sticky: Sticky) => {\n        sticky.syncScroll(contentContainer);\n      });\n    }\n\n    this._notifyThrottled();\n  };\n}\n"]}
{"version":3,"file":"BaseButton.styles.js","sourceRoot":"../src/","sources":["components/Button/BaseButton.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { memoizeFunction } from '../../Utilities';\nimport { HighContrastSelector, getFocusStyle, hiddenContentStyle } from '../../Styling';\nimport type { IButtonStyles } from './Button.types';\nimport type { ITheme, IRawStyle } from '../../Styling';\n\nconst noOutline: IRawStyle = {\n  outline: 0,\n};\n\nconst iconStyle = (fontSize?: string | number): IRawStyle => {\n  return {\n    fontSize,\n    margin: '0 4px',\n    height: '16px',\n    lineHeight: '16px',\n    textAlign: 'center',\n    flexShrink: 0,\n  };\n};\n\n/**\n * Gets the base button styles. Note: because it is a base class to be used with the `mergeRules`\n * helper, it should have values for all class names in the interface. This let `mergeRules` optimize\n * mixing class names together.\n */\nexport const getStyles = memoizeFunction(\n  (theme: ITheme): IButtonStyles => {\n    const { semanticColors, effects, fonts } = theme;\n\n    const border = semanticColors.buttonBorder;\n    const disabledBackground = semanticColors.disabledBackground;\n    const disabledText = semanticColors.disabledText;\n    const buttonHighContrastFocus = {\n      left: -2,\n      top: -2,\n      bottom: -2,\n      right: -2,\n      outlineColor: 'ButtonText',\n    };\n\n    return {\n      root: [\n        getFocusStyle(theme, { inset: 1, highContrastStyle: buttonHighContrastFocus, borderColor: 'transparent' }),\n        theme.fonts.medium,\n        {\n          border: '1px solid ' + border,\n          borderRadius: effects.roundedCorner2,\n          boxSizing: 'border-box',\n          cursor: 'pointer',\n          display: 'inline-block',\n          padding: '0 16px',\n          textDecoration: 'none',\n          textAlign: 'center',\n          userSelect: 'none',\n\n          selectors: {\n            // IE11 workaround for preventing shift of child elements of a button when active.\n            ':active > span': {\n              position: 'relative',\n              left: 0,\n              top: 0,\n            },\n          },\n        },\n      ],\n\n      rootDisabled: [\n        getFocusStyle(theme, { inset: 1, highContrastStyle: buttonHighContrastFocus, borderColor: 'transparent' }),\n        {\n          backgroundColor: disabledBackground,\n          borderColor: disabledBackground,\n          color: disabledText,\n          cursor: 'default',\n          selectors: {\n            ':hover': noOutline,\n            ':focus': noOutline,\n          },\n        },\n      ],\n\n      iconDisabled: {\n        color: disabledText,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n          },\n        },\n      },\n\n      menuIconDisabled: {\n        color: disabledText,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n          },\n        },\n      },\n\n      flexContainer: {\n        display: 'flex',\n        height: '100%',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n      description: {\n        display: 'block',\n      },\n\n      textContainer: {\n        flexGrow: 1,\n        display: 'block',\n      },\n\n      icon: iconStyle(fonts.mediumPlus.fontSize),\n\n      menuIcon: iconStyle(fonts.small.fontSize),\n\n      label: {\n        margin: '0 4px',\n        lineHeight: '100%',\n        display: 'block',\n      },\n\n      screenReaderText: hiddenContentStyle,\n    };\n  },\n);\n"]}
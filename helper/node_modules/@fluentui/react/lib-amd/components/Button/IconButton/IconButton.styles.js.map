{"version":3,"file":"IconButton.styles.js","sourceRoot":"../src/","sources":["components/Button/IconButton/IconButton.styles.ts"],"names":[],"mappings":";;;;IAOa,QAAA,SAAS,GAAG,2BAAe,CACtC,UAAC,KAAa,EAAE,YAA4B;;QAC1C,IAAM,gBAAgB,GAAkB,6BAAmB,CAAC,KAAK,CAAC,CAAC;QACnE,IAAM,iBAAiB,GAAkB,8BAAoB,CAAC,KAAK,CAAC,CAAC;QAC7D,IAAA,OAAO,GAAqB,KAAK,QAA1B,EAAE,cAAc,GAAK,KAAK,eAAV,CAAW;QAC1C,IAAM,gBAAgB,GAAkB;YACtC,IAAI,EAAE;gBACJ,OAAO,EAAE,OAAO;gBAChB,KAAK,EAAE,MAAM;gBACb,MAAM,EAAE,MAAM;gBACd,eAAe,EAAE,aAAa;gBAC9B,MAAM,EAAE,MAAM;gBACd,KAAK,EAAE,cAAc,CAAC,IAAI;aAC3B;YAED,WAAW,EAAE;gBACX,KAAK,EAAE,OAAO,CAAC,YAAY;gBAC3B,eAAe,EAAE,OAAO,CAAC,cAAc;gBACvC,SAAS;oBACP,GAAC,8BAAoB,IAAG;wBACtB,WAAW,EAAE,WAAW;wBACxB,KAAK,EAAE,WAAW;qBACnB;uBACF;aACF;YAED,WAAW,EAAE;gBACX,KAAK,EAAE,MAAM;aACd;YAED,WAAW,EAAE;gBACX,KAAK,EAAE,OAAO,CAAC,SAAS;gBACxB,eAAe,EAAE,OAAO,CAAC,YAAY;aACtC;YAED,YAAY,EAAE;gBACZ,KAAK,EAAE,OAAO,CAAC,SAAS;gBACxB,eAAe,EAAE,OAAO,CAAC,YAAY;aACtC;YAED,WAAW,EAAE;gBACX,KAAK,EAAE,OAAO,CAAC,SAAS;gBACxB,eAAe,EAAE,OAAO,CAAC,YAAY;aACtC;YAED,kBAAkB,EAAE;gBAClB,KAAK,EAAE,OAAO,CAAC,SAAS;gBACxB,eAAe,EAAE,OAAO,CAAC,oBAAoB;aAC9C;YAED,YAAY,EAAE;gBACZ,KAAK,EAAE,OAAO,CAAC,kBAAkB;aAClC;SACF,CAAC;QAEF,OAAO,yBAAe,CAAC,gBAAgB,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,YAAY,CAAE,CAAC;IAC/F,CAAC,CACF,CAAC","sourcesContent":["import { concatStyleSets, HighContrastSelector } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\nimport type { IButtonStyles } from '../Button.types';\nimport type { ITheme } from '../../../Styling';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles): IButtonStyles => {\n    const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n    const splitButtonStyles: IButtonStyles = getSplitButtonStyles(theme);\n    const { palette, semanticColors } = theme;\n    const iconButtonStyles: IButtonStyles = {\n      root: {\n        padding: '0 4px',\n        width: '32px',\n        height: '32px',\n        backgroundColor: 'transparent',\n        border: 'none',\n        color: semanticColors.link,\n      },\n\n      rootHovered: {\n        color: palette.themeDarkAlt,\n        backgroundColor: palette.neutralLighter,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'Highlight',\n            color: 'Highlight',\n          },\n        },\n      },\n\n      rootHasMenu: {\n        width: 'auto',\n      },\n\n      rootPressed: {\n        color: palette.themeDark,\n        backgroundColor: palette.neutralLight,\n      },\n\n      rootExpanded: {\n        color: palette.themeDark,\n        backgroundColor: palette.neutralLight,\n      },\n\n      rootChecked: {\n        color: palette.themeDark,\n        backgroundColor: palette.neutralLight,\n      },\n\n      rootCheckedHovered: {\n        color: palette.themeDark,\n        backgroundColor: palette.neutralQuaternaryAlt,\n      },\n\n      rootDisabled: {\n        color: palette.neutralTertiaryAlt,\n      },\n    };\n\n    return concatStyleSets(baseButtonStyles, iconButtonStyles, splitButtonStyles, customStyles)!;\n  },\n);\n"]}
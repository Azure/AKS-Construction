{"version":3,"file":"CommandBar.base.js","sourceRoot":"../src/","sources":["components/CommandBar/CommandBar.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  classNamesFunction,\n  css,\n  nullRender,\n  getNativeProps,\n  divProperties,\n  composeComponentAs,\n  initializeComponentRef,\n} from '../../Utilities';\nimport { OverflowSet } from '../../OverflowSet';\nimport { ResizeGroup } from '../../ResizeGroup';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { CommandBarButton } from '../../Button';\nimport { TooltipHost } from '../../Tooltip';\nimport { getCommandButtonStyles } from './CommandBar.styles';\nimport type { IComponentAs } from '../../Utilities';\nimport type {\n  ICommandBar,\n  ICommandBarItemProps,\n  ICommandBarProps,\n  ICommandBarStyleProps,\n  ICommandBarStyles,\n} from './CommandBar.types';\nimport type { IOverflowSet } from '../../OverflowSet';\nimport type { IResizeGroup } from '../../ResizeGroup';\nimport type { IButtonProps } from '../../Button';\n\nconst getClassNames = classNamesFunction<ICommandBarStyleProps, ICommandBarStyles>();\n\nexport interface ICommandBarData {\n  /**\n   * Items being rendered in the primary region\n   */\n  primaryItems: ICommandBarItemProps[];\n  /**\n   * Items being rendered in the overflow\n   */\n  overflowItems: ICommandBarItemProps[];\n  /**\n   * Items being rendered on the far side\n   */\n  farItems: ICommandBarItemProps[] | undefined;\n  /**\n   * Length of original overflowItems to ensure that they are not moved into primary region on resize\n   */\n  minimumOverflowItems: number;\n  /**\n   * Unique string used to cache the width of the command bar\n   */\n  cacheKey: string;\n}\n\nexport class CommandBarBase extends React.Component<ICommandBarProps, {}> implements ICommandBar {\n  public static defaultProps: ICommandBarProps = {\n    items: [],\n    overflowItems: [],\n  };\n\n  private _overflowSet = React.createRef<IOverflowSet>();\n  private _resizeGroup = React.createRef<IResizeGroup>();\n  private _classNames: { [key in keyof ICommandBarStyles]: string };\n\n  constructor(props: ICommandBarProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const {\n      items,\n      overflowItems,\n      farItems,\n      styles,\n      theme,\n      dataDidRender,\n      onReduceData = this._onReduceData,\n      onGrowData = this._onGrowData,\n      resizeGroupAs: ResizeGroupAs = ResizeGroup,\n    } = this.props;\n\n    const commandBarData: ICommandBarData = {\n      primaryItems: [...items],\n      overflowItems: [...overflowItems!],\n      minimumOverflowItems: [...overflowItems!].length, // for tracking\n      farItems,\n      cacheKey: this._computeCacheKey({\n        primaryItems: [...items],\n        overflow: overflowItems && overflowItems.length > 0,\n        farItems,\n      }),\n    };\n\n    this._classNames = getClassNames(styles!, { theme: theme! });\n\n    // ResizeGroup will render these attributes to the root <div>.\n    // TODO We may need to elevate classNames from <FocusZone> into <ResizeGroup> ?\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties);\n\n    return (\n      <ResizeGroupAs\n        {...nativeProps}\n        componentRef={this._resizeGroup}\n        data={commandBarData}\n        onReduceData={onReduceData}\n        onGrowData={onGrowData}\n        onRenderData={this._onRenderData}\n        dataDidRender={dataDidRender}\n      />\n    );\n  }\n\n  public focus(): void {\n    const { current: overflowSet } = this._overflowSet;\n\n    overflowSet && overflowSet.focus();\n  }\n\n  public remeasure(): void {\n    this._resizeGroup.current && this._resizeGroup.current.remeasure();\n  }\n\n  private _onRenderData = (data: ICommandBarData): JSX.Element => {\n    const { ariaLabel, primaryGroupAriaLabel, farItemsGroupAriaLabel } = this.props;\n    const hasSecondSet = data.farItems && data.farItems.length > 0;\n\n    return (\n      <FocusZone\n        className={css(this._classNames.root)}\n        direction={FocusZoneDirection.horizontal}\n        role={'menubar'}\n        aria-label={ariaLabel}\n      >\n        {/*Primary Items*/}\n        <OverflowSet\n          role={hasSecondSet ? 'group' : 'none'}\n          aria-label={hasSecondSet ? primaryGroupAriaLabel : undefined}\n          componentRef={this._overflowSet}\n          className={css(this._classNames.primarySet)}\n          items={data.primaryItems}\n          overflowItems={data.overflowItems.length ? data.overflowItems : undefined}\n          onRenderItem={this._onRenderItem}\n          onRenderOverflowButton={this._onRenderOverflowButton}\n        />\n\n        {/*Secondary Items*/}\n        {hasSecondSet && (\n          <OverflowSet\n            role=\"group\"\n            aria-label={farItemsGroupAriaLabel}\n            className={css(this._classNames.secondarySet)}\n            items={data.farItems}\n            onRenderItem={this._onRenderItem}\n            onRenderOverflowButton={nullRender}\n          />\n        )}\n      </FocusZone>\n    );\n  };\n\n  private _onRenderItem = (item: ICommandBarItemProps): JSX.Element | React.ReactNode => {\n    if (item.onRender) {\n      // These are the top level items, there is no relevant menu dismissing function to\n      // provide for the IContextualMenuItem onRender function. Pass in a no op function instead.\n      return item.onRender(item, () => undefined);\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    const itemText = item.text || item.name;\n    const commandButtonProps: ICommandBarItemProps = {\n      allowDisabledFocus: true,\n      role: 'menuitem',\n      ...item,\n      styles: getCommandButtonStyles(item.buttonStyles),\n      className: css('ms-CommandBarItem-link', item.className),\n      text: !item.iconOnly ? itemText : undefined,\n      menuProps: item.subMenuProps,\n      onClick: this._onButtonClick(item),\n    };\n\n    if (item.iconOnly && (itemText !== undefined || item.tooltipHostProps)) {\n      return (\n        <TooltipHost role=\"none\" content={itemText} setAriaDescribedBy={false} {...item.tooltipHostProps}>\n          {this._commandButton(item, commandButtonProps)}\n        </TooltipHost>\n      );\n    }\n\n    return this._commandButton(item, commandButtonProps);\n  };\n\n  private _commandButton = (item: ICommandBarItemProps, props: ICommandBarItemProps): JSX.Element => {\n    const ButtonAs = this.props.buttonAs as IComponentAs<ICommandBarItemProps> | undefined;\n    const CommandBarButtonAs = item.commandBarButtonAs as IComponentAs<ICommandBarItemProps> | undefined;\n    const DefaultButtonAs = (CommandBarButton as {}) as IComponentAs<ICommandBarItemProps>;\n\n    // The prop types between these three possible implementations overlap enough that a force-cast is safe.\n    let Type = DefaultButtonAs;\n\n    if (CommandBarButtonAs) {\n      Type = composeComponentAs(CommandBarButtonAs, Type);\n    }\n\n    if (ButtonAs) {\n      Type = composeComponentAs(ButtonAs, Type);\n    }\n\n    // Always pass the default implementation to the override so it may be composed.\n    return <Type {...(props as ICommandBarItemProps)} />;\n  };\n\n  private _onButtonClick(item: ICommandBarItemProps): (ev: React.MouseEvent<HTMLButtonElement>) => void {\n    return ev => {\n      // inactive is deprecated. remove check in 7.0\n      // eslint-disable-next-line deprecation/deprecation\n      if (item.inactive) {\n        return;\n      }\n      if (item.onClick) {\n        item.onClick(ev, item);\n      }\n    };\n  }\n\n  private _onRenderOverflowButton = (overflowItems: ICommandBarItemProps[]): JSX.Element => {\n    const {\n      overflowButtonProps = {}, // assure that props is not empty\n    } = this.props;\n\n    const combinedOverflowItems: ICommandBarItemProps[] = [\n      ...(overflowButtonProps.menuProps ? overflowButtonProps.menuProps.items : []),\n      ...overflowItems,\n    ];\n\n    const overflowProps: IButtonProps = {\n      role: 'menuitem',\n      ...overflowButtonProps,\n      styles: { menuIcon: { fontSize: '17px' }, ...overflowButtonProps.styles },\n      className: css('ms-CommandBar-overflowButton', overflowButtonProps.className),\n      menuProps: { ...overflowButtonProps.menuProps, items: combinedOverflowItems },\n      menuIconProps: { iconName: 'More', ...overflowButtonProps.menuIconProps },\n    };\n\n    const OverflowButtonType = this.props.overflowButtonAs\n      ? composeComponentAs(this.props.overflowButtonAs, CommandBarButton)\n      : CommandBarButton;\n\n    return <OverflowButtonType {...(overflowProps as IButtonProps)} />;\n  };\n\n  private _computeCacheKey(data: {\n    primaryItems?: ICommandBarItemProps[];\n    overflow?: boolean;\n    farItems?: ICommandBarItemProps[];\n  }): string {\n    const { primaryItems, overflow, farItems } = data;\n    const returnKey = (acc: string, current: ICommandBarItemProps): string => {\n      const { cacheKey = current.key } = current;\n      return acc + cacheKey;\n    };\n\n    const primaryKey = primaryItems && primaryItems.reduce(returnKey, '');\n    const overflowKey = overflow ? 'overflow' : '';\n    const farKey = farItems && farItems.reduce(returnKey, '');\n\n    return [primaryKey, overflowKey, farKey].join('');\n  }\n\n  private _onReduceData = (data: ICommandBarData): ICommandBarData | undefined => {\n    const { shiftOnReduce, onDataReduced } = this.props;\n    let { primaryItems, overflowItems, cacheKey } = data;\n    const { farItems } = data;\n\n    // Use first item if shiftOnReduce, otherwise use last item\n    const movedItem = primaryItems[shiftOnReduce ? 0 : primaryItems.length - 1];\n\n    if (movedItem !== undefined) {\n      movedItem.renderedInOverflow = true;\n\n      overflowItems = [movedItem, ...overflowItems];\n      primaryItems = shiftOnReduce ? primaryItems.slice(1) : primaryItems.slice(0, -1);\n\n      const newData = { ...data, primaryItems, overflowItems };\n      cacheKey = this._computeCacheKey({ primaryItems, overflow: overflowItems.length > 0, farItems });\n\n      if (onDataReduced) {\n        onDataReduced(movedItem);\n      }\n\n      newData.cacheKey = cacheKey;\n      return newData;\n    }\n\n    return undefined;\n  };\n\n  private _onGrowData = (data: ICommandBarData): ICommandBarData | undefined => {\n    const { shiftOnReduce, onDataGrown } = this.props;\n    const { minimumOverflowItems } = data;\n    let { primaryItems, overflowItems, cacheKey } = data;\n    const { farItems } = data;\n    const movedItem = overflowItems[0];\n\n    // Make sure that moved item exists and is not one of the original overflow items\n    if (movedItem !== undefined && overflowItems.length > minimumOverflowItems) {\n      movedItem.renderedInOverflow = false;\n\n      overflowItems = overflowItems.slice(1);\n      // if shiftOnReduce, movedItem goes first, otherwise, last.\n      primaryItems = shiftOnReduce ? [movedItem, ...primaryItems] : [...primaryItems, movedItem];\n\n      const newData = { ...data, primaryItems, overflowItems };\n      cacheKey = this._computeCacheKey({ primaryItems, overflow: overflowItems.length > 0, farItems });\n\n      if (onDataGrown) {\n        onDataGrown(movedItem);\n      }\n\n      newData.cacheKey = cacheKey;\n      return newData;\n    }\n\n    return undefined;\n  };\n}\n"]}
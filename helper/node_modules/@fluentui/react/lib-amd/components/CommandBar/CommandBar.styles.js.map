{"version":3,"file":"CommandBar.styles.js","sourceRoot":"../src/","sources":["components/CommandBar/CommandBar.styles.ts"],"names":[],"mappings":";;;;IAKA,IAAM,kBAAkB,GAAG,EAAE,CAAC;IAEvB,IAAM,SAAS,GAAG,UAAC,KAA4B;QAC5C,IAAA,SAAS,GAAY,KAAK,UAAjB,EAAE,KAAK,GAAK,KAAK,MAAV,CAAW;QAC3B,IAAA,cAAc,GAAK,KAAK,eAAV,CAAW;QAEjC,OAAO;YACL,IAAI,EAAE;gBACJ,KAAK,CAAC,KAAK,CAAC,MAAM;gBAClB,eAAe;gBACf;oBACE,OAAO,EAAE,MAAM;oBACf,eAAe,EAAE,cAAc,CAAC,cAAc;oBAC9C,OAAO,EAAE,eAAe;oBACxB,MAAM,EAAE,kBAAkB;iBAC3B;gBACD,SAAS;aACV;YACD,UAAU,EAAE;gBACV,8BAA8B;gBAC9B;oBACE,QAAQ,EAAE,GAAG;oBACb,OAAO,EAAE,MAAM;oBACf,UAAU,EAAE,SAAS;iBACtB;aACF;YACD,YAAY,EAAE;gBACZ,gCAAgC;gBAChC;oBACE,UAAU,EAAE,GAAG;oBACf,OAAO,EAAE,MAAM;oBACf,UAAU,EAAE,SAAS;iBACtB;aACF;SACF,CAAC;IACJ,CAAC,CAAC;IAjCW,QAAA,SAAS,aAiCpB;IAEW,QAAA,sBAAsB,GAAG,2BAAe,CACnD,UAAC,YAAuC;QACtC,IAAM,UAAU,GAAW;YACzB,MAAM,EAAE,MAAM;SACf,CAAC;QACF,IAAM,WAAW,GAAW;YAC1B,UAAU,EAAE,QAAQ;SACrB,CAAC;QAEF,IAAM,KAAuC,YAAY,IAAI,EAAE,EAAvD,IAAI,UAAA,EAAE,KAAK,WAAA,EAAK,gBAAgB,sBAAlC,iBAAoC,CAAqB,CAAC;QAEhE,6CACK,gBAAgB,KACnB,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,EAC5C,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,IACjD;IACJ,CAAC,CACF,CAAC","sourcesContent":["import { memoizeFunction } from '../../Utilities';\nimport type { ICommandBarStyleProps, ICommandBarStyles } from './CommandBar.types';\nimport type { IButtonStyles } from '../../Button';\nimport type { IStyle } from '../../Styling';\n\nconst COMMAND_BAR_HEIGHT = 44;\n\nexport const getStyles = (props: ICommandBarStyleProps): ICommandBarStyles => {\n  const { className, theme } = props;\n  const { semanticColors } = theme;\n\n  return {\n    root: [\n      theme.fonts.medium,\n      'ms-CommandBar',\n      {\n        display: 'flex',\n        backgroundColor: semanticColors.bodyBackground,\n        padding: '0 14px 0 24px',\n        height: COMMAND_BAR_HEIGHT,\n      },\n      className,\n    ],\n    primarySet: [\n      'ms-CommandBar-primaryCommand',\n      {\n        flexGrow: '1',\n        display: 'flex',\n        alignItems: 'stretch',\n      },\n    ],\n    secondarySet: [\n      'ms-CommandBar-secondaryCommand',\n      {\n        flexShrink: '0',\n        display: 'flex',\n        alignItems: 'stretch',\n      },\n    ],\n  };\n};\n\nexport const getCommandButtonStyles = memoizeFunction(\n  (customStyles: IButtonStyles | undefined): IButtonStyles => {\n    const rootStyles: IStyle = {\n      height: '100%',\n    };\n    const labelStyles: IStyle = {\n      whiteSpace: 'nowrap',\n    };\n\n    const { root, label, ...restCustomStyles } = customStyles || {};\n\n    return {\n      ...restCustomStyles,\n      root: root ? [rootStyles, root] : rootStyles,\n      label: label ? [labelStyles, label] : labelStyles,\n    };\n  },\n);\n"]}
{"version":3,"file":"ProgressIndicator.base.js","sourceRoot":"../src/","sources":["components/ProgressIndicator/ProgressIndicator.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { classNamesFunction, getId } from '../../Utilities';\nimport type {\n  IProgressIndicatorProps,\n  IProgressIndicatorStyleProps,\n  IProgressIndicatorStyles,\n} from './ProgressIndicator.types';\n\nconst getClassNames = classNamesFunction<IProgressIndicatorStyleProps, IProgressIndicatorStyles>();\n\n// if the percentComplete is near 0, don't animate it.\n// This prevents animations on reset to 0 scenarios\nconst ZERO_THRESHOLD = 0.01;\n\n/**\n * ProgressIndicator with no default styles.\n * [Use the `styles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\nexport class ProgressIndicatorBase extends React.Component<IProgressIndicatorProps, {}> {\n  public static defaultProps = {\n    label: '',\n    description: '',\n    width: 180,\n  };\n\n  private _labelId: string;\n  private _descriptionId: string;\n\n  constructor(props: IProgressIndicatorProps) {\n    super(props);\n\n    const id = getId('progress-indicator');\n    this._labelId = id + '-label';\n    this._descriptionId = id + '-description';\n  }\n\n  public render() {\n    const {\n      barHeight,\n      className,\n      // eslint-disable-next-line deprecation/deprecation\n      label = this.props.title, // Fall back to deprecated value.\n      description,\n      styles,\n      theme,\n      progressHidden,\n      onRenderProgress = this._onRenderProgress,\n    } = this.props;\n\n    const percentComplete =\n      typeof this.props.percentComplete === 'number'\n        ? Math.min(100, Math.max(0, this.props.percentComplete * 100))\n        : undefined;\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      className,\n      barHeight,\n      indeterminate: percentComplete === undefined ? true : false,\n    });\n\n    return (\n      <div className={classNames.root}>\n        {label ? (\n          <div id={this._labelId} className={classNames.itemName}>\n            {label}\n          </div>\n        ) : null}\n        {!progressHidden\n          ? onRenderProgress(\n              {\n                ...(this.props as IProgressIndicatorProps),\n                percentComplete: percentComplete,\n              },\n              this._onRenderProgress,\n            )\n          : null}\n        {description ? (\n          <div id={this._descriptionId} className={classNames.itemDescription}>\n            {description}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n\n  private _onRenderProgress = (props: IProgressIndicatorProps): JSX.Element => {\n    const {\n      ariaLabel,\n      ariaValueText,\n      barHeight,\n      className,\n      description,\n      // eslint-disable-next-line deprecation/deprecation\n      label = this.props.title,\n      styles,\n      theme,\n    } = this.props;\n\n    const percentComplete =\n      typeof this.props.percentComplete === 'number'\n        ? Math.min(100, Math.max(0, this.props.percentComplete * 100))\n        : undefined;\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      className,\n      barHeight,\n      indeterminate: percentComplete === undefined ? true : false,\n    });\n\n    const progressBarStyles = {\n      width: percentComplete !== undefined ? percentComplete + '%' : undefined,\n      transition: percentComplete !== undefined && percentComplete < ZERO_THRESHOLD ? 'none' : undefined,\n    };\n\n    const ariaValueMin = percentComplete !== undefined ? 0 : undefined;\n    const ariaValueMax = percentComplete !== undefined ? 100 : undefined;\n    const ariaValueNow = percentComplete !== undefined ? Math.floor(percentComplete!) : undefined;\n\n    return (\n      <div className={classNames.itemProgress}>\n        <div className={classNames.progressTrack} />\n        <div\n          className={classNames.progressBar}\n          style={progressBarStyles}\n          role=\"progressbar\"\n          aria-describedby={description ? this._descriptionId : undefined}\n          aria-label={ariaLabel}\n          aria-labelledby={label ? this._labelId : undefined}\n          aria-valuemin={ariaValueMin}\n          aria-valuemax={ariaValueMax}\n          aria-valuenow={ariaValueNow}\n          aria-valuetext={ariaValueText}\n        />\n      </div>\n    );\n  };\n}\n"]}
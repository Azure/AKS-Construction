{"version":3,"file":"CalendarDayGrid.base.js","sourceRoot":"../src/","sources":["components/CalendarDayGrid/CalendarDayGrid.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { getRTL, classNamesFunction } from '@fluentui/utilities';\nimport { FocusZone } from '../../FocusZone';\nimport {\n  getDateRangeArray,\n  getDayGrid,\n  getBoundedDateRange,\n  isRestrictedDate,\n  DAYS_IN_WEEK,\n  compareDates,\n  DateRangeType,\n  DayOfWeek,\n} from '@fluentui/date-time-utilities';\nimport { usePrevious, useId } from '@fluentui/react-hooks';\nimport { CalendarMonthHeaderRow } from './CalendarMonthHeaderRow';\nimport { CalendarGridRow } from './CalendarGridRow';\nimport type { IDay } from '@fluentui/date-time-utilities';\nimport type {\n  ICalendarDayGridProps,\n  ICalendarDayGridStyleProps,\n  ICalendarDayGridStyles,\n} from './CalendarDayGrid.types';\nimport type { IProcessedStyleSet } from '@fluentui/style-utilities';\n\nconst getClassNames = classNamesFunction<ICalendarDayGridStyleProps, ICalendarDayGridStyles>();\n\nexport interface IWeekCorners {\n  [key: string]: string;\n}\n\nexport interface IDayInfo extends IDay {\n  onSelected: () => void;\n  setRef(element: HTMLElement | null): void;\n}\n\nfunction useDayRefs() {\n  const daysRef = React.useRef<Record<string, HTMLElement>>({});\n\n  const getSetRefCallback = (dayKey: string) => (element: HTMLElement | null) => {\n    if (element === null) {\n      delete daysRef.current[dayKey];\n    } else {\n      daysRef.current[dayKey] = element;\n    }\n  };\n\n  return [daysRef, getSetRefCallback] as const;\n}\n\nfunction useWeeks(\n  props: ICalendarDayGridProps,\n  onSelectDate: (date: Date) => void,\n  getSetRefCallback: (dayKey: string) => (element: HTMLElement | null) => void,\n): IDayInfo[][] {\n  /**\n   * Initial parsing of the given props to generate IDayInfo two dimensional array, which contains a representation\n   * of every day in the grid. Convenient for helping with conversions between day refs and Date objects in callbacks.\n   */\n  const weeks = React.useMemo((): IDayInfo[][] => {\n    const weeksGrid = getDayGrid(props);\n\n    const firstVisibleDay = weeksGrid[1][0].originalDate;\n    const lastVisibleDay = weeksGrid[weeksGrid.length - 1][6].originalDate;\n    const markedDays = props.getMarkedDays?.(firstVisibleDay, lastVisibleDay) || [];\n\n    /**\n     * Weeks is a 2D array. Weeks[0] contains the last week of the prior range,\n     * Weeks[weeks.length - 1] contains first week of next range. These are for transition states.\n     *\n     * Weeks[1... weeks.length - 2] contains the actual visible data\n     */\n    const returnValue: IDayInfo[][] = [];\n\n    for (let weekIndex = 0; weekIndex < weeksGrid.length; weekIndex++) {\n      const week: IDayInfo[] = [];\n      for (let dayIndex = 0; dayIndex < DAYS_IN_WEEK; dayIndex++) {\n        const day = weeksGrid[weekIndex][dayIndex];\n        const dayInfo: IDayInfo = {\n          onSelected: () => onSelectDate(day.originalDate),\n          setRef: getSetRefCallback(day.key),\n          ...day,\n          isMarked: day.isMarked || markedDays?.some(markedDay => compareDates(day.originalDate, markedDay)),\n        };\n\n        week.push(dayInfo);\n      }\n      returnValue.push(week);\n    }\n\n    return returnValue;\n    // TODO: this is missing deps on getSetRefCallback and onSelectDate (and depending on the entire\n    // props object may not be a good idea due to likely frequent mutation). It would be easy to\n    // fix getSetRefCallback to not mutate every render, but onSelectDate is passed down from\n    // Calendar and trying to fix it requires a huge cascade of changes.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props]);\n\n  return weeks;\n}\n\n/**\n * Hook to determine whether to animate the CalendarDayGrid forwards or backwards\n * @returns true if the grid should animate backwards; false otherwise\n */\nfunction useAnimateBackwards(weeks: IDayInfo[][]): boolean | undefined {\n  const previousNavigatedDate = usePrevious(weeks[0][0].originalDate);\n\n  if (!previousNavigatedDate || previousNavigatedDate.getTime() === weeks[0][0].originalDate.getTime()) {\n    return undefined;\n  } else if (previousNavigatedDate <= weeks[0][0].originalDate) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction useWeekCornerStyles(props: ICalendarDayGridProps) {\n  /**\n   *\n   * Section for setting the rounded corner styles on individual day cells. Individual day cells need different\n   * corners to be rounded depending on which date range type and where the cell is located in the current grid.\n   * If we just round all of the corners, there isn't a good overlap and we get gaps between contiguous day boxes\n   * in Edge browser.\n   *\n   */\n  const getWeekCornerStyles = (\n    classNames: IProcessedStyleSet<ICalendarDayGridStyles>,\n    initialWeeks: IDayInfo[][],\n  ): IWeekCorners => {\n    const weekCornersStyled: { [key: string]: string } = {};\n    /* need to handle setting all of the corners on arbitrarily shaped blobs\n          __\n       __|A |\n      |B |C |__\n      |D |E |F |\n\n      in this case, A needs top left rounded, top right rounded\n      B needs top left rounded\n      C doesn't need any rounding\n      D needs bottom left rounded\n      E doesn't need any rounding\n      F needs top right rounding\n    */\n\n    // cut off the animation transition weeks\n    const weeks = initialWeeks.slice(1, initialWeeks.length - 1);\n\n    // if there's an item above, lose both top corners. Item below, lose both bottom corners, etc.\n    weeks.forEach((week: IDayInfo[], weekIndex: number) => {\n      week.forEach((day: IDayInfo, dayIndex: number) => {\n        const above =\n          weeks[weekIndex - 1] &&\n          weeks[weekIndex - 1][dayIndex] &&\n          isInSameHoverRange(\n            weeks[weekIndex - 1][dayIndex].originalDate,\n            day.originalDate,\n            weeks[weekIndex - 1][dayIndex].isSelected,\n            day.isSelected,\n          );\n        const below =\n          weeks[weekIndex + 1] &&\n          weeks[weekIndex + 1][dayIndex] &&\n          isInSameHoverRange(\n            weeks[weekIndex + 1][dayIndex].originalDate,\n            day.originalDate,\n            weeks[weekIndex + 1][dayIndex].isSelected,\n            day.isSelected,\n          );\n        const left =\n          weeks[weekIndex][dayIndex - 1] &&\n          isInSameHoverRange(\n            weeks[weekIndex][dayIndex - 1].originalDate,\n            day.originalDate,\n            weeks[weekIndex][dayIndex - 1].isSelected,\n            day.isSelected,\n          );\n        const right =\n          weeks[weekIndex][dayIndex + 1] &&\n          isInSameHoverRange(\n            weeks[weekIndex][dayIndex + 1].originalDate,\n            day.originalDate,\n            weeks[weekIndex][dayIndex + 1].isSelected,\n            day.isSelected,\n          );\n\n        const style = [];\n        style.push(calculateRoundedStyles(classNames, above, below, left, right));\n        style.push(calculateBorderStyles(classNames, above, below, left, right));\n\n        weekCornersStyled[weekIndex + '_' + dayIndex] = style.join(' ');\n      });\n    });\n\n    return weekCornersStyled;\n  };\n\n  const calculateRoundedStyles = (\n    classNames: IProcessedStyleSet<ICalendarDayGridStyles>,\n    above: boolean,\n    below: boolean,\n    left: boolean,\n    right: boolean,\n  ): string => {\n    const style = [];\n    const roundedTopLeft = !above && !left;\n    const roundedTopRight = !above && !right;\n    const roundedBottomLeft = !below && !left;\n    const roundedBottomRight = !below && !right;\n\n    if (roundedTopLeft) {\n      style.push(getRTL() ? classNames.topRightCornerDate : classNames.topLeftCornerDate);\n    }\n    if (roundedTopRight) {\n      style.push(getRTL() ? classNames.topLeftCornerDate : classNames.topRightCornerDate);\n    }\n    if (roundedBottomLeft) {\n      style.push(getRTL() ? classNames.bottomRightCornerDate : classNames.bottomLeftCornerDate);\n    }\n    if (roundedBottomRight) {\n      style.push(getRTL() ? classNames.bottomLeftCornerDate : classNames.bottomRightCornerDate);\n    }\n\n    return style.join(' ');\n  };\n\n  const calculateBorderStyles = (\n    classNames: IProcessedStyleSet<ICalendarDayGridStyles>,\n    above: boolean,\n    below: boolean,\n    left: boolean,\n    right: boolean,\n  ): string => {\n    const style = [];\n\n    if (!above) {\n      style.push(classNames.datesAbove);\n    }\n    if (!below) {\n      style.push(classNames.datesBelow);\n    }\n    if (!left) {\n      style.push(getRTL() ? classNames.datesRight : classNames.datesLeft);\n    }\n    if (!right) {\n      style.push(getRTL() ? classNames.datesLeft : classNames.datesRight);\n    }\n\n    return style.join(' ');\n  };\n\n  const isInSameHoverRange = (date1: Date, date2: Date, date1Selected: boolean, date2Selected: boolean): boolean => {\n    const { dateRangeType, firstDayOfWeek, workWeekDays } = props;\n\n    // The hover state looks weird with non-contiguous days in work week view. In work week, show week hover state\n    const dateRangeHoverType = dateRangeType === DateRangeType.WorkWeek ? DateRangeType.Week : dateRangeType;\n\n    // we do not pass daysToSelectInDayView because we handle setting those styles dyanamically in onMouseOver\n    const dateRange = getDateRangeArray(date1, dateRangeHoverType, firstDayOfWeek, workWeekDays);\n\n    if (date1Selected !== date2Selected) {\n      // if one is selected and the other is not, they can't be in the same range\n      return false;\n    } else if (date1Selected && date2Selected) {\n      // if they're both selected at the same time they must be in the same range\n      return true;\n    }\n\n    // otherwise, both must be unselected, so check the dateRange\n    return dateRange.filter((date: Date) => date.getTime() === date2.getTime()).length > 0;\n  };\n\n  return [getWeekCornerStyles, calculateRoundedStyles] as const;\n}\n\nexport const CalendarDayGridBase: React.FunctionComponent<ICalendarDayGridProps> = props => {\n  const navigatedDayRef = React.useRef<HTMLTableCellElement>(null) as React.MutableRefObject<HTMLTableCellElement>;\n\n  const activeDescendantId = useId();\n\n  const onSelectDate = (selectedDate: Date): void => {\n    const { firstDayOfWeek, minDate, maxDate, workWeekDays, daysToSelectInDayView, restrictedDates } = props;\n    const restrictedDatesOptions = { minDate, maxDate, restrictedDates };\n\n    let dateRange = getDateRangeArray(selectedDate, dateRangeType, firstDayOfWeek, workWeekDays, daysToSelectInDayView);\n    dateRange = getBoundedDateRange(dateRange, minDate, maxDate);\n\n    dateRange = dateRange.filter((d: Date) => {\n      return !isRestrictedDate(d, restrictedDatesOptions);\n    });\n\n    props.onSelectDate?.(selectedDate, dateRange);\n    props.onNavigateDate?.(selectedDate, true);\n  };\n\n  const [daysRef, getSetRefCallback] = useDayRefs();\n\n  const weeks = useWeeks(props, onSelectDate, getSetRefCallback);\n  const animateBackwards = useAnimateBackwards(weeks);\n  const [getWeekCornerStyles, calculateRoundedStyles] = useWeekCornerStyles(props);\n\n  React.useImperativeHandle(\n    props.componentRef,\n    () => ({\n      focus() {\n        navigatedDayRef.current?.focus?.();\n      },\n    }),\n    [],\n  );\n\n  /**\n   *\n   * Section for setting hover/pressed styles. Because we want arbitrary blobs of days to be selectable, to support\n   * highlighting every day in the month for month view, css :hover style isn't enough, so we need mouse callbacks\n   * to set classnames on all relevant child refs to apply the styling\n   *\n   */\n  const getDayInfosInRangeOfDay = (dayToCompare: IDayInfo): IDayInfo[] => {\n    // The hover state looks weird with non-contiguous days in work week view. In work week, show week hover state\n    const dateRangeHoverType = getDateRangeTypeToUse(props.dateRangeType, props.workWeekDays);\n\n    // gets all the dates for the given date range type that are in the same date range as the given day\n    const dateRange = getDateRangeArray(\n      dayToCompare.originalDate,\n      dateRangeHoverType,\n      props.firstDayOfWeek,\n      props.workWeekDays,\n      props.daysToSelectInDayView,\n    ).map((date: Date) => date.getTime());\n\n    // gets all the day refs for the given dates\n    const dayInfosInRange = weeks.reduce((accumulatedValue: IDayInfo[], currentWeek: IDayInfo[]) => {\n      return accumulatedValue.concat(\n        currentWeek.filter((weekDay: IDayInfo) => dateRange.indexOf(weekDay.originalDate.getTime()) !== -1),\n      );\n    }, []);\n\n    return dayInfosInRange;\n  };\n\n  const getRefsFromDayInfos = (dayInfosInRange: IDayInfo[]): (HTMLElement | null)[] => {\n    let dayRefs: (HTMLElement | null)[] = [];\n    dayRefs = dayInfosInRange.map((dayInfo: IDayInfo) => daysRef.current[dayInfo.key]);\n\n    return dayRefs;\n  };\n\n  const {\n    styles,\n    theme,\n    className,\n    dateRangeType,\n    showWeekNumbers,\n    labelledBy,\n    lightenDaysOutsideNavigatedMonth,\n    animationDirection,\n  } = props;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className: className,\n    dateRangeType: dateRangeType,\n    showWeekNumbers: showWeekNumbers,\n    lightenDaysOutsideNavigatedMonth:\n      lightenDaysOutsideNavigatedMonth === undefined ? true : lightenDaysOutsideNavigatedMonth,\n    animationDirection: animationDirection,\n    animateBackwards: animateBackwards,\n  });\n\n  // When the month is highlighted get the corner dates so that styles can be added to them\n  const weekCorners: IWeekCorners = getWeekCornerStyles(classNames, weeks!);\n  const partialWeekProps = {\n    weeks,\n    navigatedDayRef,\n    calculateRoundedStyles,\n    activeDescendantId,\n    classNames,\n    weekCorners,\n    getDayInfosInRangeOfDay,\n    getRefsFromDayInfos,\n  } as const;\n\n  return (\n    <FocusZone className={classNames.wrapper} preventDefaultWhenHandled={true}>\n      <table\n        className={classNames.table}\n        aria-multiselectable=\"false\"\n        aria-labelledby={labelledBy}\n        aria-activedescendant={activeDescendantId}\n        role=\"grid\"\n      >\n        <tbody>\n          <CalendarMonthHeaderRow {...props} classNames={classNames} weeks={weeks} />\n          <CalendarGridRow\n            {...props}\n            {...partialWeekProps}\n            week={weeks[0]}\n            weekIndex={-1}\n            rowClassName={classNames.firstTransitionWeek}\n            ariaRole=\"presentation\"\n            ariaHidden={true}\n          />\n          {weeks!.slice(1, weeks!.length - 1).map((week: IDayInfo[], weekIndex: number) => (\n            <CalendarGridRow\n              {...props}\n              {...partialWeekProps}\n              key={weekIndex}\n              week={week}\n              weekIndex={weekIndex}\n              rowClassName={classNames.weekRow}\n            />\n          ))}\n          <CalendarGridRow\n            {...props}\n            {...partialWeekProps}\n            week={weeks![weeks!.length - 1]}\n            weekIndex={-2}\n            rowClassName={classNames.lastTransitionWeek}\n            ariaRole=\"presentation\"\n            ariaHidden={true}\n          />\n        </tbody>\n      </table>\n    </FocusZone>\n  );\n};\nCalendarDayGridBase.displayName = 'CalendarDayGridBase';\n\n/**\n * When given work week, if the days are non-contiguous, the hover states look really weird. So for non-contiguous\n * work weeks, we'll just show week view instead.\n */\nfunction getDateRangeTypeToUse(dateRangeType: DateRangeType, workWeekDays: DayOfWeek[] | undefined): DateRangeType {\n  if (workWeekDays && dateRangeType === DateRangeType.WorkWeek) {\n    const sortedWWDays = workWeekDays.slice().sort();\n    let isContiguous = true;\n    for (let i = 1; i < sortedWWDays.length; i++) {\n      if (sortedWWDays[i] !== sortedWWDays[i - 1] + 1) {\n        isContiguous = false;\n        break;\n      }\n    }\n\n    if (!isContiguous || workWeekDays.length === 0) {\n      return DateRangeType.Week;\n    }\n  }\n\n  return dateRangeType;\n}\n"]}
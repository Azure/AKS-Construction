{"version":3,"file":"CalendarGridDayCell.js","sourceRoot":"../src/","sources":["components/CalendarDayGrid/CalendarGridDayCell.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { KeyCodes, css, getRTLSafeKeyCode } from '@fluentui/utilities';\nimport { addDays, addWeeks, compareDates, findAvailableDate, DateRangeType } from '@fluentui/date-time-utilities';\nimport type { IAvailableDateOptions } from '@fluentui/date-time-utilities';\nimport type { IDayInfo } from './CalendarDayGrid.base';\nimport type { ICalendarGridRowProps } from './CalendarGridRow';\n\nexport interface ICalendarGridDayCellProps extends ICalendarGridRowProps {\n  day: IDayInfo;\n  dayIndex: number;\n}\n\nexport const CalendarGridDayCell: React.FunctionComponent<ICalendarGridDayCellProps> = props => {\n  const {\n    navigatedDate,\n    dateTimeFormatter,\n    allFocusable,\n    strings,\n    activeDescendantId,\n    navigatedDayRef,\n    calculateRoundedStyles,\n    weeks,\n    classNames,\n    day,\n    dayIndex,\n    weekIndex,\n    weekCorners,\n    ariaHidden,\n    customDayCellRef,\n    dateRangeType,\n    daysToSelectInDayView,\n    onSelectDate,\n    restrictedDates,\n    minDate,\n    maxDate,\n    onNavigateDate,\n    getDayInfosInRangeOfDay,\n    getRefsFromDayInfos,\n  } = props;\n  const cornerStyle = weekCorners?.[weekIndex + '_' + dayIndex] ?? '';\n  const isNavigatedDate = compareDates(navigatedDate, day.originalDate);\n\n  const navigateMonthEdge = (ev: React.KeyboardEvent<HTMLElement>, date: Date): void => {\n    let targetDate: Date | undefined = undefined;\n    let direction = 1; // by default search forward\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.up) {\n      targetDate = addWeeks(date, -1);\n      direction = -1;\n      // eslint-disable-next-line deprecation/deprecation\n    } else if (ev.which === KeyCodes.down) {\n      targetDate = addWeeks(date, 1);\n      // eslint-disable-next-line deprecation/deprecation\n    } else if (ev.which === getRTLSafeKeyCode(KeyCodes.left)) {\n      targetDate = addDays(date, -1);\n      direction = -1;\n      // eslint-disable-next-line deprecation/deprecation\n    } else if (ev.which === getRTLSafeKeyCode(KeyCodes.right)) {\n      targetDate = addDays(date, 1);\n    }\n\n    if (!targetDate) {\n      // if we couldn't find a target date at all, do nothing\n      return;\n    }\n\n    const findAvailableDateOptions: IAvailableDateOptions = {\n      initialDate: date,\n      targetDate,\n      direction,\n      restrictedDates,\n      minDate,\n      maxDate,\n    };\n\n    // target date is restricted, search in whatever direction until finding the next possible date,\n    // stopping at boundaries\n    let nextDate = findAvailableDate(findAvailableDateOptions);\n\n    if (!nextDate) {\n      // if no dates available in initial direction, try going backwards\n      findAvailableDateOptions.direction = -direction;\n      nextDate = findAvailableDate(findAvailableDateOptions);\n    }\n\n    // if the nextDate is still inside the same focusZone area, let the focusZone handle setting the focus so we\n    // don't jump the view unnecessarily\n    const isInCurrentView =\n      weeks &&\n      nextDate &&\n      weeks.slice(1, weeks.length - 1).some((week: IDayInfo[]) => {\n        return week.some((dayToCompare: IDayInfo) => {\n          return compareDates(dayToCompare.originalDate, nextDate!);\n        });\n      });\n    if (isInCurrentView) {\n      return;\n    }\n\n    // else, fire navigation on the date to change the view to show it\n    if (nextDate) {\n      onNavigateDate(nextDate, true);\n      ev.preventDefault();\n    }\n  };\n\n  const onMouseOverDay = (ev: React.MouseEvent<HTMLElement>) => {\n    const dayInfos = getDayInfosInRangeOfDay(day);\n    const dayRefs = getRefsFromDayInfos(dayInfos);\n\n    dayRefs.forEach((dayRef: HTMLElement, index: number) => {\n      if (dayRef) {\n        dayRef.classList.add('ms-CalendarDay-hoverStyle');\n        if (\n          !dayInfos[index].isSelected &&\n          dateRangeType === DateRangeType.Day &&\n          daysToSelectInDayView &&\n          daysToSelectInDayView > 1\n        ) {\n          // remove the static classes first to overwrite them\n          dayRef.classList.remove(\n            classNames.bottomLeftCornerDate!,\n            classNames.bottomRightCornerDate!,\n            classNames.topLeftCornerDate!,\n            classNames.topRightCornerDate!,\n          );\n\n          const classNamesToAdd = calculateRoundedStyles(\n            classNames,\n            false,\n            false,\n            index > 0,\n            index < dayRefs.length - 1,\n          ).trim();\n          if (classNamesToAdd) {\n            dayRef.classList.add(...classNamesToAdd.split(' '));\n          }\n        }\n      }\n    });\n  };\n\n  const onMouseDownDay = (ev: React.MouseEvent<HTMLElement>) => {\n    const dayInfos = getDayInfosInRangeOfDay(day);\n    const dayRefs = getRefsFromDayInfos(dayInfos);\n\n    dayRefs.forEach((dayRef: HTMLElement) => {\n      if (dayRef) {\n        dayRef.classList.add('ms-CalendarDay-pressedStyle');\n      }\n    });\n  };\n\n  const onMouseUpDay = (ev: React.MouseEvent<HTMLElement>) => {\n    const dayInfos = getDayInfosInRangeOfDay(day);\n    const dayRefs = getRefsFromDayInfos(dayInfos);\n\n    dayRefs.forEach((dayRef: HTMLElement) => {\n      if (dayRef) {\n        dayRef.classList.remove('ms-CalendarDay-pressedStyle');\n      }\n    });\n  };\n\n  const onMouseOutDay = (ev: React.MouseEvent<HTMLElement>) => {\n    const dayInfos = getDayInfosInRangeOfDay(day);\n    const dayRefs = getRefsFromDayInfos(dayInfos);\n\n    dayRefs.forEach((dayRef: HTMLElement, index: number) => {\n      if (dayRef) {\n        dayRef.classList.remove('ms-CalendarDay-hoverStyle');\n        dayRef.classList.remove('ms-CalendarDay-pressedStyle');\n        if (\n          !dayInfos[index].isSelected &&\n          dateRangeType === DateRangeType.Day &&\n          daysToSelectInDayView &&\n          daysToSelectInDayView > 1\n        ) {\n          const classNamesToAdd = calculateRoundedStyles(\n            classNames,\n            false,\n            false,\n            index > 0,\n            index < dayRefs.length - 1,\n          ).trim();\n          if (classNamesToAdd) {\n            dayRef.classList.remove(...classNamesToAdd.split(' '));\n          }\n        }\n      }\n    });\n  };\n\n  const onDayKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter) {\n      onSelectDate?.(day.originalDate);\n    } else {\n      navigateMonthEdge(ev, day.originalDate);\n    }\n  };\n\n  let ariaLabel =\n    day.originalDate.getDate() +\n    ', ' +\n    strings.months[day.originalDate.getMonth()] +\n    ', ' +\n    day.originalDate.getFullYear();\n\n  if (day.isMarked) {\n    ariaLabel = ariaLabel + ', ' + strings.dayMarkedAriaLabel;\n  }\n\n  return (\n    <td\n      className={css(\n        classNames.dayCell,\n        weekCorners && cornerStyle,\n        day.isSelected && classNames.daySelected,\n        day.isSelected && 'ms-CalendarDay-daySelected',\n        !day.isInBounds && classNames.dayOutsideBounds,\n        !day.isInMonth && classNames.dayOutsideNavigatedMonth,\n      )}\n      ref={(element: HTMLTableCellElement) => {\n        customDayCellRef?.(element, day.originalDate, classNames);\n        day.setRef(element);\n        isNavigatedDate && (navigatedDayRef.current = element);\n      }}\n      aria-hidden={ariaHidden}\n      aria-disabled={!ariaHidden && !day.isInBounds}\n      onClick={day.isInBounds && !ariaHidden ? day.onSelected : undefined}\n      onMouseOver={!ariaHidden ? onMouseOverDay : undefined}\n      onMouseDown={!ariaHidden ? onMouseDownDay : undefined}\n      onMouseUp={!ariaHidden ? onMouseUpDay : undefined}\n      onMouseOut={!ariaHidden ? onMouseOutDay : undefined}\n      onKeyDown={!ariaHidden ? onDayKeyDown : undefined}\n      role=\"gridcell\"\n      tabIndex={isNavigatedDate ? 0 : undefined}\n      aria-current={day.isSelected ? 'date' : undefined}\n      aria-selected={day.isInBounds ? day.isSelected : undefined}\n      data-is-focusable={!ariaHidden && (allFocusable || (day.isInBounds ? true : undefined))}\n    >\n      <button\n        key={day.key + 'button'}\n        aria-hidden={ariaHidden}\n        className={css(\n          classNames.dayButton,\n          day.isToday && classNames.dayIsToday,\n          day.isToday && 'ms-CalendarDay-dayIsToday',\n        )}\n        aria-label={ariaLabel}\n        id={isNavigatedDate ? activeDescendantId : undefined}\n        disabled={!ariaHidden && !day.isInBounds}\n        type=\"button\"\n        tabIndex={-1}\n        data-is-focusable=\"false\"\n      >\n        <span aria-hidden=\"true\">{dateTimeFormatter.formatDay(day.originalDate)}</span>\n        {day.isMarked && <div aria-hidden=\"true\" className={classNames.dayMarker} />}\n      </button>\n    </td>\n  );\n};\n"]}
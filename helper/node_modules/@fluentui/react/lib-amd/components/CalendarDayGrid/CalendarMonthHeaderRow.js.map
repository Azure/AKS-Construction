{"version":3,"file":"CalendarMonthHeaderRow.js","sourceRoot":"../src/","sources":["components/CalendarDayGrid/CalendarMonthHeaderRow.tsx"],"names":[],"mappings":";;;;IAYO,IAAM,sBAAsB,GAA6D,UAAA,KAAK;QAC3F,IAAA,eAAe,GAA4E,KAAK,gBAAjF,EAAE,OAAO,GAAmE,KAAK,QAAxE,EAAE,cAAc,GAAmD,KAAK,eAAxD,EAAE,YAAY,GAAqC,KAAK,aAA1C,EAAE,WAAW,GAAwB,KAAK,YAA7B,EAAE,KAAK,GAAiB,KAAK,MAAtB,EAAE,UAAU,GAAK,KAAK,WAAV,CAAW;QACzG,IAAM,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QAC5C,IAAM,iBAAiB,GAAG,qBAAS,CAAC,KAAM,CAAC,CAAC,CAAC,EAAE,UAAC,GAAa,IAAK,OAAA,GAAG,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,EAAhC,CAAgC,CAAC,CAAC;QACpG,IAAI,WAAW,KAAK,CAAC,IAAI,iBAAiB,IAAI,CAAC,EAAE;YAC/C,qEAAqE;YACrE,IAAM,uBAAuB,GAAG,CAAC,iBAAiB,GAAG,cAAc,CAAC,GAAG,kCAAY,CAAC;YACpF,SAAS,CAAC,uBAAuB,CAAC,GAAG,OAAO,CAAC,WAAW,CAAC,KAAM,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC;SAChH;QAED,OAAO,CACL;YACG,eAAe,IAAI,4BAAI,SAAS,EAAE,UAAU,CAAC,OAAO,GAAI;YACxD,SAAS,CAAC,GAAG,CAAC,UAAC,GAAW,EAAE,KAAa;gBACxC,IAAM,CAAC,GAAG,CAAC,KAAK,GAAG,cAAc,CAAC,GAAG,kCAAY,CAAC;gBAClD,IAAM,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC9B,OAAO,CACL,4BACE,SAAS,EAAE,eAAG,CAAC,UAAU,CAAC,OAAO,EAAE,UAAU,CAAC,gBAAgB,CAAC,EAC/D,KAAK,EAAC,KAAK,EACX,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,EAC/B,KAAK,EAAE,KAAK,gBACA,KAAK,uBACE,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,IAEjD,SAAS,CAAC,CAAC,CAAC,CACV,CACN,CAAC;YACJ,CAAC,CAAC,CACC,CACN,CAAC;IACJ,CAAC,CAAC;IA/BW,QAAA,sBAAsB,0BA+BjC","sourcesContent":["import * as React from 'react';\nimport { css, findIndex } from '@fluentui/utilities';\nimport { DAYS_IN_WEEK } from '@fluentui/date-time-utilities';\nimport type { ICalendarDayGridProps, ICalendarDayGridStyles } from './CalendarDayGrid.types';\nimport type { IProcessedStyleSet } from '@fluentui/style-utilities';\nimport type { IDayInfo } from './CalendarDayGrid.base';\n\nexport interface ICalendarDayMonthHeaderRowProps extends ICalendarDayGridProps {\n  weeks: IDayInfo[][];\n  classNames: IProcessedStyleSet<ICalendarDayGridStyles>;\n}\n\nexport const CalendarMonthHeaderRow: React.FunctionComponent<ICalendarDayMonthHeaderRowProps> = props => {\n  const { showWeekNumbers, strings, firstDayOfWeek, allFocusable, weeksToShow, weeks, classNames } = props;\n  const dayLabels = strings.shortDays.slice();\n  const firstOfMonthIndex = findIndex(weeks![1], (day: IDayInfo) => day.originalDate.getDate() === 1);\n  if (weeksToShow === 1 && firstOfMonthIndex >= 0) {\n    // if we only show one week, replace the header with short month name\n    const firstOfMonthIndexOffset = (firstOfMonthIndex + firstDayOfWeek) % DAYS_IN_WEEK;\n    dayLabels[firstOfMonthIndexOffset] = strings.shortMonths[weeks![1][firstOfMonthIndex].originalDate.getMonth()];\n  }\n\n  return (\n    <tr>\n      {showWeekNumbers && <th className={classNames.dayCell} />}\n      {dayLabels.map((val: string, index: number) => {\n        const i = (index + firstDayOfWeek) % DAYS_IN_WEEK;\n        const label = strings.days[i];\n        return (\n          <th\n            className={css(classNames.dayCell, classNames.weekDayLabelCell)}\n            scope=\"col\"\n            key={dayLabels[i] + ' ' + index}\n            title={label}\n            aria-label={label}\n            data-is-focusable={allFocusable ? true : undefined}\n          >\n            {dayLabels[i]}\n          </th>\n        );\n      })}\n    </tr>\n  );\n};\n"]}
{"version":3,"file":"Rating.styles.js","sourceRoot":"../src/","sources":["components/Rating/Rating.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { getFocusStyle, hiddenContentStyle, HighContrastSelector, getGlobalClassNames } from '../../Styling';\nimport type { IRatingStyleProps, IRatingStyles } from './Rating.types';\n\nconst GlobalClassNames = {\n  root: 'ms-RatingStar-root',\n  rootIsSmall: 'ms-RatingStar-root--small',\n  rootIsLarge: 'ms-RatingStar-root--large',\n  ratingStar: 'ms-RatingStar-container',\n  ratingStarBack: 'ms-RatingStar-back',\n  ratingStarFront: 'ms-RatingStar-front',\n  ratingButton: 'ms-Rating-button',\n  ratingStarIsSmall: 'ms-Rating--small',\n  ratingStartIsLarge: 'ms-Rating--large',\n  labelText: 'ms-Rating-labelText',\n  ratingFocusZone: 'ms-Rating-focuszone',\n};\n\nfunction _getColorWithHighContrast(color: string, highContrastColor: string) {\n  return {\n    color: color,\n    selectors: {\n      [HighContrastSelector]: {\n        color: highContrastColor,\n      },\n    },\n  };\n}\n\nexport function getStyles(props: IRatingStyleProps): IRatingStyles {\n  const { disabled, readOnly, theme } = props;\n\n  const { semanticColors, palette } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const ratingSmallIconSize = 16;\n  const ratingLargeIconSize = 20;\n  const ratingVerticalPadding = 8;\n  const ratingHorizontalPadding = 2;\n\n  const ratingStarUncheckedColor = palette.neutralSecondary;\n  const ratingStarUncheckedHoverColor = palette.themePrimary;\n  const ratingStarUncheckedHoverSelectedColor = palette.themeDark;\n  const ratingStarCheckedColor = palette.neutralPrimary;\n  const ratingStarDisabledColor = semanticColors.disabledBodySubtext;\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      !disabled &&\n        !readOnly && {\n          selectors: {\n            // This is part 1 of highlighting all stars up to the one the user is hovering over\n            '&:hover': {\n              selectors: {\n                '.ms-RatingStar-back': _getColorWithHighContrast(ratingStarCheckedColor, 'Highlight'),\n              },\n            },\n          },\n        },\n    ],\n    rootIsSmall: [\n      classNames.rootIsSmall,\n      {\n        height: ratingSmallIconSize + ratingVerticalPadding * 2 + 'px',\n      },\n    ],\n    rootIsLarge: [\n      classNames.rootIsLarge,\n      {\n        height: ratingLargeIconSize + ratingVerticalPadding * 2 + 'px',\n      },\n    ],\n    ratingStar: [\n      classNames.ratingStar,\n      {\n        display: 'inline-block',\n        position: 'relative',\n        height: 'inherit',\n      },\n    ],\n    ratingStarBack: [\n      classNames.ratingStarBack,\n      {\n        // TODO: Use a proper semantic color for this\n        color: ratingStarUncheckedColor,\n        width: '100%',\n      },\n      disabled && _getColorWithHighContrast(ratingStarDisabledColor, 'GrayText'),\n    ],\n    ratingStarFront: [\n      classNames.ratingStarFront,\n      {\n        position: 'absolute',\n        height: '100 %',\n        left: '0',\n        top: '0',\n        textAlign: 'center',\n        verticalAlign: 'middle',\n        overflow: 'hidden',\n      },\n      _getColorWithHighContrast(ratingStarCheckedColor, 'Highlight'),\n    ],\n    ratingButton: [\n      getFocusStyle(theme),\n      classNames.ratingButton,\n      {\n        backgroundColor: 'transparent',\n        padding: `${ratingVerticalPadding}px ${ratingHorizontalPadding}px`,\n        boxSizing: 'content-box',\n        margin: '0px',\n        border: 'none',\n        cursor: 'pointer',\n        selectors: {\n          '&:disabled': {\n            cursor: 'default',\n          },\n          '&[disabled]': {\n            cursor: 'default',\n          },\n        },\n      },\n      !disabled &&\n        !readOnly && {\n          selectors: {\n            // This is part 2 of highlighting all stars up to the one the user is hovering over\n            '&:hover ~ .ms-Rating-button': {\n              selectors: {\n                '.ms-RatingStar-back': _getColorWithHighContrast(ratingStarUncheckedColor, 'WindowText'),\n                '.ms-RatingStar-front': _getColorWithHighContrast(ratingStarUncheckedColor, 'WindowText'),\n              },\n            },\n            '&:hover': {\n              selectors: {\n                '.ms-RatingStar-back': {\n                  color: ratingStarUncheckedHoverColor,\n                },\n                '.ms-RatingStar-front': {\n                  color: ratingStarUncheckedHoverSelectedColor,\n                },\n              },\n            },\n          },\n        },\n      disabled && {\n        cursor: 'default',\n      },\n    ],\n    ratingStarIsSmall: [\n      classNames.ratingStarIsSmall,\n      {\n        fontSize: ratingSmallIconSize + 'px',\n        lineHeight: ratingSmallIconSize + 'px',\n        height: ratingSmallIconSize + 'px',\n      },\n    ],\n    ratingStarIsLarge: [\n      classNames.ratingStartIsLarge,\n      {\n        fontSize: ratingLargeIconSize + 'px',\n        lineHeight: ratingLargeIconSize + 'px',\n        height: ratingLargeIconSize + 'px',\n      },\n    ],\n    labelText: [classNames.labelText, hiddenContentStyle],\n    ratingFocusZone: [\n      getFocusStyle(theme),\n      classNames.ratingFocusZone,\n      {\n        display: 'inline-block',\n      },\n    ],\n  };\n}\n"]}
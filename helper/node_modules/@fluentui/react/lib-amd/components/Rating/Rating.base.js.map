{"version":3,"file":"Rating.base.js","sourceRoot":"../src/","sources":["components/Rating/Rating.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { classNamesFunction, css, format, divProperties, getNativeProps, useFocusRects } from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { RatingSize } from './Rating.types';\nimport { useId, useWarnings, useControllableValue, useMergedRefs } from '@fluentui/react-hooks';\nimport type { IRatingProps, IRatingStyleProps, IRatingStyles, IRating, IRatingStarProps } from './Rating.types';\n\nconst getClassNames = classNamesFunction<IRatingStyleProps, IRatingStyles>();\n\nconst RatingStar = (props: IRatingStarProps) => {\n  return (\n    <div className={props.classNames.ratingStar}>\n      <Icon\n        className={props.classNames.ratingStarBack}\n        iconName={props.fillPercentage === 0 || props.fillPercentage === 100 ? props.icon : props.unselectedIcon}\n      />\n      {!props.disabled && (\n        <Icon\n          className={props.classNames.ratingStarFront}\n          iconName={props.icon}\n          style={{ width: props.fillPercentage + '%' }}\n        />\n      )}\n    </div>\n  );\n};\n\nconst useComponentRef = (componentRef: React.Ref<IRating> | undefined, rating: number) => {\n  React.useImperativeHandle(\n    componentRef,\n    () => ({\n      rating,\n    }),\n    [rating],\n  );\n};\n\nconst useDebugWarnings = (props: IRatingProps) => {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: 'Rating',\n      props,\n      controlledUsage: {\n        valueProp: 'rating',\n        defaultValueProp: 'defaultRating',\n        onChangeProp: 'onChange',\n        readOnlyProp: 'readOnly',\n      },\n    });\n  }\n};\n\nconst getClampedRating = (rating: number | undefined, min: number, max: number): number => {\n  return Math.min(Math.max(rating ?? min, min), max);\n};\n\nconst getFillingPercentage = (starNum: number, displayRating: number): number => {\n  const ceilValue = Math.ceil(displayRating);\n  let fillPercentage = 100;\n\n  if (starNum === displayRating) {\n    fillPercentage = 100;\n  } else if (starNum === ceilValue) {\n    fillPercentage = 100 * (displayRating % 1);\n  } else if (starNum > ceilValue) {\n    fillPercentage = 0;\n  }\n  return fillPercentage;\n};\n\nconst getStarId = (id: string, starNum: number) => {\n  return `${id}-star-${starNum - 1}`;\n};\n\nexport const RatingBase: React.FunctionComponent<IRatingProps> = React.forwardRef<HTMLDivElement, IRatingProps>(\n  (props, forwardedRef) => {\n    const id = useId('Rating');\n    const labelId = useId('RatingLabel');\n    const {\n      ariaLabel,\n      ariaLabelFormat,\n      disabled,\n      getAriaLabel,\n      styles,\n      // eslint-disable-next-line deprecation/deprecation\n      min: minFromProps = props.allowZeroStars ? 0 : 1,\n      max = 5,\n      readOnly,\n      size,\n      theme,\n      icon = 'FavoriteStarFill',\n      unselectedIcon = 'FavoriteStar',\n      onRenderStar,\n    } = props;\n\n    // Ensure min is >= 0 to avoid issues elsewhere\n    const min = Math.max(minFromProps, 0);\n\n    const [rating, setRating] = useControllableValue(props.rating, props.defaultRating, props.onChange);\n    /** Rating clamped within valid range. Will be `min` if `rating` is undefined. */\n    const displayRating = getClampedRating(rating, min, max);\n\n    useDebugWarnings(props);\n\n    useComponentRef(props.componentRef, displayRating);\n\n    const rootRef = React.useRef<HTMLDivElement | null>(null);\n    const mergedRootRefs = useMergedRefs(rootRef, forwardedRef);\n    useFocusRects(rootRef);\n\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, divProperties);\n\n    const classNames = getClassNames(styles!, {\n      disabled,\n      readOnly,\n      theme: theme!,\n    });\n\n    const readOnlyAriaLabel = getAriaLabel?.(displayRating, max);\n    const normalModeAriaLabel = ariaLabel ? ariaLabel : readOnlyAriaLabel;\n\n    const stars: JSX.Element[] = [];\n\n    const renderStar = (starProps: IRatingStarProps, renderer?: IRatingProps['onRenderStar']) =>\n      renderer ? renderer(starProps) : <RatingStar {...starProps} />;\n\n    for (let starNum = 1; starNum <= max; starNum++) {\n      const fillPercentage = getFillingPercentage(starNum, displayRating);\n\n      const onSelectStar = (ev: React.SyntheticEvent<HTMLElement>): void => {\n        // Use the actual rating (not display value) here, to ensure that we update if the actual\n        // rating is undefined and the user clicks the first star.\n        if (rating === undefined || Math.ceil(rating) !== starNum) {\n          setRating(starNum, ev);\n        }\n      };\n\n      stars.push(\n        <button\n          className={css(\n            classNames.ratingButton,\n            size === RatingSize.Large ? classNames.ratingStarIsLarge : classNames.ratingStarIsSmall,\n          )}\n          id={getStarId(id, starNum)}\n          key={starNum}\n          {...(starNum === Math.ceil(displayRating) && { 'data-is-current': true })}\n          onFocus={onSelectStar}\n          onClick={onSelectStar} // For Safari & Firefox on OSX\n          disabled={!!(disabled || readOnly)}\n          role=\"radio\"\n          aria-hidden={readOnly ? 'true' : undefined}\n          type=\"button\"\n          aria-checked={starNum === Math.ceil(displayRating)}\n        >\n          <span id={`${labelId}-${starNum}`} className={classNames.labelText}>\n            {format(ariaLabelFormat || '', starNum, max)}\n          </span>\n          {renderStar(\n            {\n              fillPercentage,\n              disabled,\n              classNames,\n              icon: fillPercentage > 0 ? icon : unselectedIcon,\n              starNum,\n              unselectedIcon,\n            },\n            onRenderStar,\n          )}\n        </button>,\n      );\n    }\n\n    const rootSizeClass = size === RatingSize.Large ? classNames.rootIsLarge : classNames.rootIsSmall;\n\n    return (\n      <div\n        ref={mergedRootRefs}\n        className={css('ms-Rating-star', classNames.root, rootSizeClass)}\n        aria-label={!readOnly ? normalModeAriaLabel : undefined}\n        id={id}\n        role={!readOnly ? 'radiogroup' : undefined}\n        {...divProps}\n      >\n        <FocusZone\n          direction={FocusZoneDirection.bidirectional}\n          className={css(classNames.ratingFocusZone, rootSizeClass)}\n          defaultActiveElement={'#' + getStarId(id, Math.ceil(displayRating))}\n          // When in read-only mode, we allow focus (per ARIA standards) and set up ARIA attributes to indicate element\n          // is read-only. https://www.w3.org/TR/wai-aria-1.1/#aria-readonly\n          {...(readOnly && {\n            allowFocusRoot: true,\n            disabled: true,\n            role: 'textbox',\n            'aria-label': readOnlyAriaLabel,\n            'aria-readonly': true,\n            'data-is-focusable': true,\n            tabIndex: 0,\n          })}\n        >\n          {stars}\n        </FocusZone>\n      </div>\n    );\n  },\n);\nRatingBase.displayName = 'RatingBase';\n"]}
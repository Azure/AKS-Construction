{"version":3,"file":"DetailsList.styles.js","sourceRoot":"../src/","sources":["components/DetailsList/DetailsList.styles.ts"],"names":[],"mappings":";;;;IAGA,IAAM,gBAAgB,GAAG;QACvB,IAAI,EAAE,gBAAgB;QACtB,OAAO,EAAE,yBAAyB;QAClC,cAAc,EAAE,+BAA+B;QAC/C,aAAa,EAAE,8BAA8B;QAC7C,OAAO,EAAE,UAAU;QACnB,uBAAuB,EAAE,0BAA0B;QACnD,QAAQ,EAAE,cAAc;KACzB,CAAC;IAEK,IAAM,oBAAoB,GAAG,UAAC,KAA6B;;QACxD,IAAA,KAAK,GAA2D,KAAK,MAAhE,EAAE,SAAS,GAAgD,KAAK,UAArD,EAAE,uBAAuB,GAAuB,KAAK,wBAA5B,EAAE,OAAO,GAAc,KAAK,QAAnB,EAAE,OAAO,GAAK,KAAK,QAAV,CAAW;QACtE,IAAA,cAAc,GAAK,KAAK,eAAV,CAAW;QACjC,IAAM,UAAU,GAAG,6BAAmB,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;QAEhE,OAAO;YACL,IAAI,EAAE;gBACJ,UAAU,CAAC,IAAI;gBACf,KAAK,CAAC,KAAK,CAAC,KAAK;gBACjB;oBACE,QAAQ,EAAE,UAAU;oBACpB,KAAK,EAAE,cAAc,CAAC,QAAQ;oBAC9B,SAAS;wBACP,GAAC,QAAM,UAAU,CAAC,QAAU,IAAG;4BAC7B,SAAS,EAAE,EAAE;4BACb,SAAS,EAAE,YAAY;yBACxB;2BACF;iBACF;gBAED,OAAO,IAAI,UAAU,CAAC,OAAO;gBAE7B,OAAO,IAAI;oBACT,UAAU,CAAC,OAAO;oBAClB;wBACE,SAAS;4BACP,GAAC,MAAI,UAAU,CAAC,QAAU,IAAG;gCAC3B,SAAS,EAAE,EAAE;6BACd;+BACF;qBACF;iBACF;gBAED,uBAAuB,IAAI;oBACzB,UAAU,CAAC,uBAAuB;oBAClC;wBACE,SAAS,EAAE,MAAM;wBACjB,SAAS,EAAE,SAAS;wBACpB,uBAAuB,EAAE,OAAO;qBACjC;iBACF;gBAED,SAAS;aACV;YAED,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,cAAc;oBACvB,QAAQ,EAAE,MAAM;oBAChB,SAAS,EAAE,CAAC;iBACb;aACF;YACD,aAAa,EAAE,UAAU,CAAC,aAAa;YACvC,cAAc,EAAE,UAAU,CAAC,cAAc;SAC1C,CAAC;IACJ,CAAC,CAAC;IAvDW,QAAA,oBAAoB,wBAuD/B","sourcesContent":["import { getGlobalClassNames } from '../../Styling';\nimport type { IDetailsListStyleProps, IDetailsListStyles } from './DetailsList.types';\n\nconst GlobalClassNames = {\n  root: 'ms-DetailsList',\n  compact: 'ms-DetailsList--Compact',\n  contentWrapper: 'ms-DetailsList-contentWrapper',\n  headerWrapper: 'ms-DetailsList-headerWrapper',\n  isFixed: 'is-fixed',\n  isHorizontalConstrained: 'is-horizontalConstrained',\n  listCell: 'ms-List-cell',\n};\n\nexport const getDetailsListStyles = (props: IDetailsListStyleProps): IDetailsListStyles => {\n  const { theme, className, isHorizontalConstrained, compact, isFixed } = props;\n  const { semanticColors } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.small,\n      {\n        position: 'relative',\n        color: semanticColors.listText,\n        selectors: {\n          [`& .${classNames.listCell}`]: {\n            minHeight: 38,\n            wordBreak: 'break-word',\n          },\n        },\n      },\n\n      isFixed && classNames.isFixed,\n\n      compact && [\n        classNames.compact,\n        {\n          selectors: {\n            [`.${classNames.listCell}`]: {\n              minHeight: 32,\n            },\n          },\n        },\n      ],\n\n      isHorizontalConstrained && [\n        classNames.isHorizontalConstrained,\n        {\n          overflowX: 'auto',\n          overflowY: 'visible',\n          WebkitOverflowScrolling: 'touch',\n        },\n      ],\n\n      className,\n    ],\n\n    focusZone: [\n      {\n        display: 'inline-block',\n        minWidth: '100%',\n        minHeight: 1,\n      },\n    ],\n    headerWrapper: classNames.headerWrapper,\n    contentWrapper: classNames.contentWrapper,\n  };\n};\n"]}
{"version":3,"file":"DetailsHeader.base.js","sourceRoot":"../src/","sources":["components/DetailsList/DetailsHeader.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { initializeComponentRef, EventGroup, css, getRTL, getId, KeyCodes, classNamesFunction } from '../../Utilities';\nimport { ColumnDragEndLocation, CheckboxVisibility } from './DetailsList.types';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { Icon, FontIcon } from '../../Icon';\nimport { Layer } from '../../Layer';\nimport { GroupSpacer } from '../GroupedList/GroupSpacer';\nimport { CollapseAllVisibility } from '../../GroupedList';\nimport { DetailsRowCheck } from './DetailsRowCheck';\nimport { SelectionMode, SELECTION_CHANGE } from '../../Selection';\nimport { DragDropHelper } from '../../DragDrop';\nimport { DetailsColumn } from '../../components/DetailsList/DetailsColumn';\nimport { SelectAllVisibility } from './DetailsHeader.types';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport type { IDisposable } from '../../Utilities';\nimport type { IColumn, IDetailsHeaderBaseProps, IColumnDragDropDetails } from './DetailsList.types';\nimport type { IFocusZone } from '../../FocusZone';\nimport type { ITooltipHostProps } from '../../Tooltip';\nimport type { ISelection } from '../../Selection';\nimport type { IDragDropOptions } from '../../DragDrop';\nimport type { IDetailsColumnProps } from '../../components/DetailsList/DetailsColumn';\nimport type {\n  IDropHintDetails,\n  IColumnReorderHeaderProps,\n  IDetailsHeaderState,\n  IDetailsHeaderStyleProps,\n  IDetailsHeaderStyles,\n  IDetailsHeader,\n} from './DetailsHeader.types';\n\nconst getClassNames = classNamesFunction<IDetailsHeaderStyleProps, IDetailsHeaderStyles>();\n\nconst MOUSEDOWN_PRIMARY_BUTTON = 0; // for mouse down event we are using ev.button property, 0 means left button\nconst MOUSEMOVE_PRIMARY_BUTTON = 1; // for mouse move event we are using ev.buttons property, 1 means left button\n\nconst NO_COLUMNS: IColumn[] = [];\n\nexport class DetailsHeaderBase\n  extends React.Component<IDetailsHeaderBaseProps, IDetailsHeaderState>\n  implements IDetailsHeader {\n  public static defaultProps = {\n    selectAllVisibility: SelectAllVisibility.visible,\n    collapseAllVisibility: CollapseAllVisibility.visible,\n    useFastIcons: true,\n  };\n\n  private _classNames: IProcessedStyleSet<IDetailsHeaderStyles>;\n  private _rootElement = React.createRef<HTMLElement>();\n  private _events: EventGroup;\n  private _rootComponent = React.createRef<IFocusZone>();\n  private _id: string;\n  private _draggedColumnIndex = -1;\n  private _dropHintDetails: { [key: number]: IDropHintDetails } = {};\n  private _dragDropHelper: DragDropHelper;\n  private _currentDropHintIndex: number;\n  private _subscriptionObject?: IDisposable;\n  private _onDropIndexInfo: {\n    sourceIndex: number;\n    targetIndex: number;\n  };\n\n  constructor(props: IDetailsHeaderBaseProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this._events = new EventGroup(this);\n\n    this.state = {\n      columnResizeDetails: undefined,\n      isAllCollapsed: this.props.isAllCollapsed,\n      isAllSelected: !!this.props.selection && this.props.selection.isAllSelected(),\n    };\n\n    this._onDropIndexInfo = {\n      sourceIndex: -1,\n      targetIndex: -1,\n    };\n    this._id = getId('header');\n    this._currentDropHintIndex = -1;\n\n    // The drag drop handler won't do any work until subscribe() is called,\n    // so always set it up for convenience\n    this._dragDropHelper = new DragDropHelper({\n      selection: {\n        getSelection: () => {\n          return;\n        },\n      } as ISelection,\n      minimumPixelsForDrag: this.props.minimumPixelsForDrag,\n    });\n  }\n\n  public componentDidMount(): void {\n    const { selection } = this.props;\n\n    this._events.on(selection, SELECTION_CHANGE, this._onSelectionChanged);\n\n    // this._rootElement.current will be null in tests using react-test-renderer\n    if (this._rootElement.current) {\n      // We need to use native on this to prevent MarqueeSelection from handling the event before us.\n      this._events.on(this._rootElement.current, 'mousedown', this._onRootMouseDown);\n\n      this._events.on(this._rootElement.current, 'keydown', this._onRootKeyDown);\n\n      if (this._getColumnReorderProps()) {\n        this._subscriptionObject = this._dragDropHelper.subscribe(\n          this._rootElement.current,\n          this._events,\n          this._getHeaderDragDropOptions(),\n        );\n      }\n    }\n  }\n\n  public componentDidUpdate(prevProps: IDetailsHeaderBaseProps): void {\n    if (this._getColumnReorderProps()) {\n      if (!this._subscriptionObject && this._rootElement.current) {\n        this._subscriptionObject = this._dragDropHelper.subscribe(\n          this._rootElement.current,\n          this._events,\n          this._getHeaderDragDropOptions(),\n        );\n      }\n    } else if (this._subscriptionObject) {\n      this._subscriptionObject.dispose();\n      delete this._subscriptionObject;\n    }\n\n    if (this.props !== prevProps && this._onDropIndexInfo.sourceIndex >= 0 && this._onDropIndexInfo.targetIndex >= 0) {\n      const { columns: previousColumns = NO_COLUMNS } = prevProps;\n      const { columns = NO_COLUMNS } = this.props;\n      if (previousColumns[this._onDropIndexInfo.sourceIndex].key === columns[this._onDropIndexInfo.targetIndex].key) {\n        this._onDropIndexInfo = {\n          sourceIndex: -1,\n          targetIndex: -1,\n        };\n      }\n    }\n\n    if (this.props.isAllCollapsed !== prevProps.isAllCollapsed) {\n      this.setState({ isAllCollapsed: this.props.isAllCollapsed });\n    }\n  }\n\n  public componentWillUnmount(): void {\n    if (this._subscriptionObject) {\n      this._subscriptionObject.dispose();\n      delete this._subscriptionObject;\n    }\n\n    this._dragDropHelper.dispose();\n\n    this._events.dispose();\n  }\n\n  public render(): JSX.Element {\n    const {\n      columns = NO_COLUMNS,\n      ariaLabel,\n      ariaLabelForToggleAllGroupsButton,\n      ariaLabelForSelectAllCheckbox,\n      selectAllVisibility,\n      ariaLabelForSelectionColumn,\n      indentWidth,\n      onColumnClick,\n      onColumnContextMenu,\n      onRenderColumnHeaderTooltip = this._onRenderColumnHeaderTooltip,\n      styles,\n      selectionMode,\n      theme,\n      onRenderDetailsCheckbox,\n      groupNestingDepth,\n      useFastIcons,\n      checkboxVisibility,\n      className,\n    } = this.props;\n    const { isAllSelected, columnResizeDetails, isSizing, isAllCollapsed } = this.state;\n    const showCheckbox = selectAllVisibility !== SelectAllVisibility.none;\n    const isCheckboxHidden = selectAllVisibility === SelectAllVisibility.hidden;\n    const isCheckboxAlwaysVisible = checkboxVisibility === CheckboxVisibility.always;\n\n    const columnReorderProps = this._getColumnReorderProps();\n    const frozenColumnCountFromStart =\n      columnReorderProps && columnReorderProps.frozenColumnCountFromStart\n        ? columnReorderProps.frozenColumnCountFromStart\n        : 0;\n    const frozenColumnCountFromEnd =\n      columnReorderProps && columnReorderProps.frozenColumnCountFromEnd\n        ? columnReorderProps.frozenColumnCountFromEnd\n        : 0;\n\n    this._classNames = getClassNames(styles, {\n      theme: theme!,\n      isAllSelected,\n      isSelectAllHidden: selectAllVisibility === SelectAllVisibility.hidden,\n      isResizingColumn: !!columnResizeDetails && isSizing,\n      isSizing,\n      isAllCollapsed,\n      isCheckboxHidden,\n      className,\n    });\n\n    const classNames = this._classNames;\n    const IconComponent = useFastIcons ? FontIcon : Icon;\n    const showGroupExpander =\n      groupNestingDepth! > 0 && this.props.collapseAllVisibility === CollapseAllVisibility.visible;\n    const columnIndexOffset = 1 + (showCheckbox ? 1 : 0) + (showGroupExpander ? 1 : 0);\n\n    const isRTL = getRTL(theme);\n    return (\n      <FocusZone\n        role=\"row\"\n        aria-label={ariaLabel}\n        className={classNames.root}\n        componentRef={this._rootComponent}\n        elementRef={this._rootElement}\n        onMouseMove={this._onRootMouseMove}\n        data-automationid=\"DetailsHeader\"\n        direction={FocusZoneDirection.horizontal}\n      >\n        {showCheckbox\n          ? [\n              <div\n                key=\"__checkbox\"\n                className={classNames.cellIsCheck}\n                aria-labelledby={`${this._id}-checkTooltip`}\n                onClick={!isCheckboxHidden ? this._onSelectAllClicked : undefined}\n                role={'columnheader'}\n              >\n                {onRenderColumnHeaderTooltip(\n                  {\n                    hostClassName: classNames.checkTooltip,\n                    id: `${this._id}-checkTooltip`,\n                    setAriaDescribedBy: false,\n                    content: ariaLabelForSelectAllCheckbox,\n                    children: (\n                      <DetailsRowCheck\n                        id={`${this._id}-check`}\n                        aria-label={\n                          selectionMode === SelectionMode.multiple\n                            ? ariaLabelForSelectAllCheckbox\n                            : ariaLabelForSelectionColumn\n                        }\n                        data-is-focusable={!isCheckboxHidden || undefined}\n                        isHeader={true}\n                        selected={isAllSelected}\n                        anySelected={false}\n                        canSelect={!isCheckboxHidden}\n                        className={classNames.check}\n                        onRenderDetailsCheckbox={onRenderDetailsCheckbox}\n                        useFastIcons={useFastIcons}\n                        isVisible={isCheckboxAlwaysVisible}\n                      />\n                    ),\n                  },\n                  this._onRenderColumnHeaderTooltip,\n                )}\n              </div>,\n              !this.props.onRenderColumnHeaderTooltip ? (\n                ariaLabelForSelectAllCheckbox && !isCheckboxHidden ? (\n                  <label\n                    key=\"__checkboxLabel\"\n                    id={`${this._id}-checkTooltip`}\n                    className={classNames.accessibleLabel}\n                    aria-hidden={true}\n                  >\n                    {ariaLabelForSelectAllCheckbox}\n                  </label>\n                ) : ariaLabelForSelectionColumn && isCheckboxHidden ? (\n                  <label\n                    key=\"__checkboxLabel\"\n                    id={`${this._id}-checkTooltip`}\n                    className={classNames.accessibleLabel}\n                    aria-hidden={true}\n                  >\n                    {ariaLabelForSelectionColumn}\n                  </label>\n                ) : null\n              ) : null,\n            ]\n          : null}\n        {showGroupExpander ? (\n          <div\n            className={classNames.cellIsGroupExpander}\n            onClick={this._onToggleCollapseAll}\n            data-is-focusable={true}\n            aria-label={ariaLabelForToggleAllGroupsButton}\n            aria-expanded={!isAllCollapsed}\n            role=\"columnheader\"\n          >\n            <IconComponent\n              className={classNames.collapseButton}\n              iconName={isRTL ? 'ChevronLeftMed' : 'ChevronRightMed'}\n            />\n            {/* Use this span in addition to aria-label, otherwise VoiceOver ignores the column */}\n            <span className={classNames.accessibleLabel}>{ariaLabelForToggleAllGroupsButton}</span>\n          </div>\n        ) : null}\n        <GroupSpacer indentWidth={indentWidth} role=\"gridcell\" count={groupNestingDepth! - 1} />\n        {columns.map((column: IColumn, columnIndex: number) => {\n          const _isDraggable = columnReorderProps\n            ? columnIndex >= frozenColumnCountFromStart && columnIndex < columns.length - frozenColumnCountFromEnd\n            : false;\n          return [\n            columnReorderProps &&\n              (_isDraggable || columnIndex === columns.length - frozenColumnCountFromEnd) &&\n              this._renderDropHint(columnIndex),\n            <DetailsColumn\n              column={column}\n              styles={column.styles}\n              key={column.key}\n              columnIndex={columnIndexOffset + columnIndex}\n              parentId={this._id}\n              isDraggable={_isDraggable}\n              updateDragInfo={this._updateDragInfo}\n              dragDropHelper={this._dragDropHelper}\n              onColumnClick={onColumnClick}\n              onColumnContextMenu={onColumnContextMenu}\n              // Do not render tooltips by default, but allow for override via props.\n              onRenderColumnHeaderTooltip={this.props.onRenderColumnHeaderTooltip}\n              isDropped={this._onDropIndexInfo.targetIndex === columnIndex}\n              cellStyleProps={this.props.cellStyleProps}\n              useFastIcons={useFastIcons}\n            />,\n            this._renderColumnDivider(columnIndex),\n          ];\n        })}\n        {columnReorderProps && frozenColumnCountFromEnd === 0 && this._renderDropHint(columns.length)}\n        {isSizing && (\n          <Layer>\n            <div\n              className={classNames.sizingOverlay}\n              onMouseMove={this._onSizerMouseMove}\n              onMouseUp={this._onSizerMouseUp}\n            />\n          </Layer>\n        )}\n      </FocusZone>\n    );\n  }\n\n  /** Set focus to the active thing in the focus area. */\n  public focus(): boolean {\n    return !!this._rootComponent.current?.focus();\n  }\n\n  /**\n   * Gets column reorder props from this.props. If the calling code is part of setting up or\n   * handling drag/drop events, it's safe to assume that this method's return value is defined\n   * (because drag/drop handling will only be set up if reorder props are given).\n   */\n  private _getColumnReorderProps(): IColumnReorderHeaderProps | undefined {\n    const { columnReorderOptions, columnReorderProps } = this.props;\n    return columnReorderProps || (columnReorderOptions && { ...columnReorderOptions, onColumnDragEnd: undefined });\n  }\n\n  private _getHeaderDragDropOptions(): IDragDropOptions {\n    const options = {\n      selectionIndex: 1,\n      context: { data: this, index: 0 },\n      canDrag: () => false,\n      canDrop: () => true,\n      onDragStart: () => undefined,\n      updateDropState: this._updateDroppingState,\n      onDrop: this._onDrop,\n      onDragEnd: () => undefined,\n      onDragOver: this._onDragOver,\n    };\n    return options;\n  }\n\n  private _updateDroppingState = (newValue: boolean, event: DragEvent): void => {\n    if (this._draggedColumnIndex >= 0 && event.type !== 'drop' && !newValue) {\n      this._resetDropHints();\n    }\n  };\n\n  private _isValidCurrentDropHintIndex() {\n    return this._currentDropHintIndex >= 0;\n  }\n\n  private _onDragOver = (item: any, event: DragEvent): void => {\n    if (this._draggedColumnIndex >= 0) {\n      event.stopPropagation();\n      this._computeDropHintToBeShown(event.clientX);\n    }\n  };\n\n  private _onDrop = (item?: any, event?: DragEvent): void => {\n    // Safe to assume this is defined since we're handling a drop event\n    const columnReorderProps = this._getColumnReorderProps()!;\n\n    // Target index will not get changed if draggeditem is after target item.\n    if (this._draggedColumnIndex >= 0 && event) {\n      const targetIndex =\n        this._draggedColumnIndex > this._currentDropHintIndex\n          ? this._currentDropHintIndex\n          : this._currentDropHintIndex - 1;\n      const isValidDrop = this._isValidCurrentDropHintIndex();\n      event.stopPropagation();\n      if (isValidDrop) {\n        this._onDropIndexInfo.sourceIndex = this._draggedColumnIndex;\n        this._onDropIndexInfo.targetIndex = targetIndex;\n\n        if (columnReorderProps.onColumnDrop) {\n          const dragDropDetails: IColumnDragDropDetails = {\n            draggedIndex: this._draggedColumnIndex,\n            targetIndex: targetIndex,\n          };\n          columnReorderProps.onColumnDrop(dragDropDetails);\n          /* eslint-disable deprecation/deprecation */\n        } else if (columnReorderProps.handleColumnReorder) {\n          columnReorderProps.handleColumnReorder(this._draggedColumnIndex, targetIndex);\n          /* eslint-enable deprecation/deprecation */\n        }\n      }\n    }\n\n    this._resetDropHints();\n    this._dropHintDetails = {};\n    this._draggedColumnIndex = -1;\n  };\n\n  /**\n   * @returns whether or not the \"Select All\" checkbox column is hidden.\n   */\n  private _isCheckboxColumnHidden(): boolean {\n    const { selectionMode, checkboxVisibility } = this.props;\n\n    return selectionMode === SelectionMode.none || checkboxVisibility === CheckboxVisibility.hidden;\n  }\n\n  private _updateDragInfo = (props: { itemIndex: number }, event?: MouseEvent) => {\n    // Safe to assume this is defined since we're handling a drag event\n    const columnReorderProps = this._getColumnReorderProps()!;\n    const itemIndex = props.itemIndex;\n    if (itemIndex >= 0) {\n      // Column index is set based on the checkbox\n      this._draggedColumnIndex = this._isCheckboxColumnHidden() ? itemIndex - 1 : itemIndex - 2;\n      this._getDropHintPositions();\n      if (columnReorderProps.onColumnDragStart) {\n        columnReorderProps.onColumnDragStart(true);\n      }\n    } else if (event && this._draggedColumnIndex >= 0) {\n      this._resetDropHints();\n      this._draggedColumnIndex = -1;\n      this._dropHintDetails = {};\n      if (columnReorderProps.onColumnDragEnd) {\n        const columnDragEndLocation = this._isEventOnHeader(event);\n        columnReorderProps.onColumnDragEnd({ dropLocation: columnDragEndLocation }, event);\n      }\n    }\n  };\n\n  private _resetDropHints(): void {\n    if (this._currentDropHintIndex >= 0) {\n      this._updateDropHintElement(this._dropHintDetails[this._currentDropHintIndex].dropHintElementRef, 'none');\n      this._currentDropHintIndex = -1;\n    }\n  }\n\n  private _updateDropHintElement(element: HTMLElement, displayProperty: string) {\n    (element.childNodes[1] as HTMLElement).style.display = displayProperty;\n    (element.childNodes[0] as HTMLElement).style.display = displayProperty;\n  }\n\n  private _getDropHintPositions = (): void => {\n    const { columns = NO_COLUMNS } = this.props;\n    // Safe to assume this is defined since we're handling a drag/drop event\n    const columnReorderProps = this._getColumnReorderProps()!;\n    let prevX = 0;\n    let prevMid = 0;\n    let prevRef: HTMLElement;\n    const frozenColumnCountFromStart = columnReorderProps.frozenColumnCountFromStart || 0;\n    const frozenColumnCountFromEnd = columnReorderProps.frozenColumnCountFromEnd || 0;\n\n    for (let i = frozenColumnCountFromStart; i < columns.length - frozenColumnCountFromEnd + 1; i++) {\n      if (this._rootElement.current) {\n        const dropHintElement = this._rootElement.current.querySelectorAll('#columnDropHint_' + i)[0] as HTMLElement;\n        if (dropHintElement) {\n          if (i === frozenColumnCountFromStart) {\n            prevX = dropHintElement.offsetLeft;\n            prevMid = dropHintElement.offsetLeft;\n            prevRef = dropHintElement;\n          } else {\n            const newMid = (dropHintElement.offsetLeft + prevX!) / 2;\n            this._dropHintDetails[i - 1] = {\n              originX: prevX,\n              startX: prevMid!,\n              endX: newMid,\n              dropHintElementRef: prevRef!,\n            };\n            prevMid = newMid;\n            prevRef = dropHintElement;\n            prevX = dropHintElement.offsetLeft;\n            if (i === columns.length - frozenColumnCountFromEnd) {\n              this._dropHintDetails[i] = {\n                originX: prevX,\n                startX: prevMid!,\n                endX: dropHintElement.offsetLeft,\n                dropHintElementRef: prevRef,\n              };\n            }\n          }\n        }\n      }\n    }\n  };\n\n  /**\n   * Based on the given cursor position, finds the nearest drop hint and updates the state to make it visible\n   */\n  private _computeDropHintToBeShown = (clientX: number): void => {\n    const isRtl = getRTL(this.props.theme);\n    if (this._rootElement.current) {\n      const clientRect = this._rootElement.current.getBoundingClientRect();\n      const headerOriginX = clientRect.left;\n      const eventXRelativePosition = clientX - headerOriginX;\n      const currentDropHintIndex = this._currentDropHintIndex;\n      if (this._isValidCurrentDropHintIndex()) {\n        if (\n          _liesBetween(\n            isRtl,\n            eventXRelativePosition,\n            this._dropHintDetails[currentDropHintIndex!].startX,\n            this._dropHintDetails[currentDropHintIndex!].endX,\n          )\n        ) {\n          return;\n        }\n      }\n      const { columns = NO_COLUMNS } = this.props;\n      // Safe to assume this is defined since we're handling a drag/drop event\n      const columnReorderProps = this._getColumnReorderProps()!;\n      const frozenColumnCountFromStart = columnReorderProps.frozenColumnCountFromStart || 0;\n      const frozenColumnCountFromEnd = columnReorderProps.frozenColumnCountFromEnd || 0;\n\n      const currentIndex: number = frozenColumnCountFromStart;\n      const lastValidColumn = columns.length - frozenColumnCountFromEnd;\n      let indexToUpdate = -1;\n      if (_isBefore(isRtl, eventXRelativePosition, this._dropHintDetails[currentIndex].endX)) {\n        indexToUpdate = currentIndex;\n      } else if (_isAfter(isRtl, eventXRelativePosition, this._dropHintDetails[lastValidColumn].startX)) {\n        indexToUpdate = lastValidColumn;\n      } else if (this._isValidCurrentDropHintIndex()) {\n        if (\n          this._dropHintDetails[currentDropHintIndex! + 1] &&\n          _liesBetween(\n            isRtl,\n            eventXRelativePosition,\n            this._dropHintDetails[currentDropHintIndex! + 1].startX,\n            this._dropHintDetails[currentDropHintIndex! + 1].endX,\n          )\n        ) {\n          indexToUpdate = currentDropHintIndex! + 1;\n        } else if (\n          this._dropHintDetails[currentDropHintIndex! - 1] &&\n          _liesBetween(\n            isRtl,\n            eventXRelativePosition,\n            this._dropHintDetails[currentDropHintIndex! - 1].startX,\n            this._dropHintDetails[currentDropHintIndex! - 1].endX,\n          )\n        ) {\n          indexToUpdate = currentDropHintIndex! - 1;\n        }\n      }\n      if (indexToUpdate === -1) {\n        let startIndex = frozenColumnCountFromStart;\n        let endIndex = lastValidColumn;\n        while (startIndex < endIndex) {\n          const middleIndex = Math.ceil((endIndex + startIndex!) / 2);\n          if (\n            _liesBetween(\n              isRtl,\n              eventXRelativePosition,\n              this._dropHintDetails[middleIndex].startX,\n              this._dropHintDetails[middleIndex].endX,\n            )\n          ) {\n            indexToUpdate = middleIndex;\n            break;\n          } else if (_isBefore(isRtl, eventXRelativePosition, this._dropHintDetails[middleIndex].originX)) {\n            endIndex = middleIndex;\n          } else if (_isAfter(isRtl, eventXRelativePosition, this._dropHintDetails[middleIndex].originX)) {\n            startIndex = middleIndex;\n          }\n        }\n      }\n\n      if (indexToUpdate === this._draggedColumnIndex || indexToUpdate === this._draggedColumnIndex + 1) {\n        if (this._isValidCurrentDropHintIndex()) {\n          this._resetDropHints();\n        }\n      } else if (currentDropHintIndex !== indexToUpdate && indexToUpdate >= 0) {\n        this._resetDropHints();\n        this._updateDropHintElement(this._dropHintDetails[indexToUpdate].dropHintElementRef, 'inline-block');\n        this._currentDropHintIndex = indexToUpdate;\n      }\n    }\n  };\n\n  private _isEventOnHeader(event: MouseEvent): ColumnDragEndLocation | undefined {\n    if (this._rootElement.current) {\n      const clientRect = this._rootElement.current.getBoundingClientRect();\n      if (\n        event.clientX > clientRect.left &&\n        event.clientX < clientRect.right &&\n        event.clientY > clientRect.top &&\n        event.clientY < clientRect.bottom\n      ) {\n        return ColumnDragEndLocation.header;\n      }\n    }\n  }\n\n  private _renderColumnSizer = ({ columnIndex }: IDetailsColumnProps): JSX.Element | null => {\n    const { columns = NO_COLUMNS } = this.props;\n    const column = columns[columnIndex];\n    const { columnResizeDetails } = this.state;\n    const classNames = this._classNames;\n\n    return column.isResizable ? (\n      <div\n        key={`${column.key}_sizer`}\n        aria-hidden={true}\n        role=\"button\"\n        data-is-focusable={false}\n        onClick={_stopPropagation}\n        data-sizer-index={columnIndex}\n        onBlur={this._onSizerBlur}\n        className={css(\n          classNames.cellSizer,\n          columnIndex < columns.length - 1 ? classNames.cellSizerStart : classNames.cellSizerEnd,\n          {\n            [classNames.cellIsResizing]: columnResizeDetails && columnResizeDetails.columnIndex === columnIndex,\n          },\n        )}\n        onDoubleClick={this._onSizerDoubleClick.bind(this, columnIndex)}\n      />\n    ) : null;\n  };\n\n  private _renderColumnDivider(columnIndex: number): JSX.Element | null {\n    const { columns = NO_COLUMNS } = this.props;\n    const column = columns[columnIndex];\n    const { onRenderDivider } = column;\n    return onRenderDivider\n      ? onRenderDivider({ column, columnIndex }, this._renderColumnSizer)\n      : this._renderColumnSizer({ column, columnIndex });\n  }\n\n  private _renderDropHint(dropHintIndex: number): JSX.Element {\n    const classNames = this._classNames;\n    const IconComponent = this.props.useFastIcons ? FontIcon : Icon;\n    return (\n      <div key={'dropHintKey'} className={classNames.dropHintStyle} id={`columnDropHint_${dropHintIndex}`}>\n        <div\n          role=\"presentation\"\n          key={`dropHintCircleKey`}\n          className={classNames.dropHintCaretStyle}\n          data-is-focusable={false}\n          data-sizer-index={dropHintIndex}\n          aria-hidden={true}\n        >\n          <IconComponent iconName={'CircleShapeSolid'} />\n        </div>\n        <div\n          key={`dropHintLineKey`}\n          aria-hidden={true}\n          data-is-focusable={false}\n          data-sizer-index={dropHintIndex}\n          className={classNames.dropHintLineStyle}\n        />\n      </div>\n    );\n  }\n\n  private _onRenderColumnHeaderTooltip = (tooltipHostProps: ITooltipHostProps): JSX.Element => {\n    return <span className={tooltipHostProps.hostClassName}>{tooltipHostProps.children}</span>;\n  };\n\n  /**\n   * double click on the column sizer will auto ajust column width\n   * to fit the longest content among current rendered rows.\n   *\n   * @param columnIndex - index of the column user double clicked\n   * @param ev - mouse double click event\n   */\n  private _onSizerDoubleClick(columnIndex: number, ev: React.MouseEvent<HTMLElement>): void {\n    const { onColumnAutoResized, columns = NO_COLUMNS } = this.props;\n    if (onColumnAutoResized) {\n      onColumnAutoResized(columns[columnIndex], columnIndex);\n    }\n  }\n\n  /**\n   * Called when the select all toggle is clicked.\n   */\n  private _onSelectAllClicked = (): void => {\n    const { selection } = this.props;\n\n    if (selection) {\n      selection.toggleAllSelected();\n    }\n  };\n\n  private _onRootMouseDown = (ev: MouseEvent): void => {\n    const columnIndexAttr = (ev.target as HTMLElement).getAttribute('data-sizer-index');\n    const columnIndex = Number(columnIndexAttr);\n    const { columns = NO_COLUMNS } = this.props;\n\n    if (columnIndexAttr === null || ev.button !== MOUSEDOWN_PRIMARY_BUTTON) {\n      // Ignore anything except the primary button.\n      return;\n    }\n\n    this.setState({\n      columnResizeDetails: {\n        columnIndex: columnIndex,\n        columnMinWidth: columns[columnIndex].calculatedWidth!,\n        originX: ev.clientX,\n      },\n    });\n\n    ev.preventDefault();\n    ev.stopPropagation();\n  };\n\n  private _onRootMouseMove = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { columnResizeDetails, isSizing } = this.state;\n\n    if (columnResizeDetails && !isSizing && ev.clientX !== columnResizeDetails.originX) {\n      this.setState({ isSizing: true });\n    }\n  };\n\n  private _onRootKeyDown = (ev: KeyboardEvent): void => {\n    const { columnResizeDetails, isSizing } = this.state;\n    const { columns = NO_COLUMNS, onColumnResized } = this.props;\n\n    const columnIndexAttr = (ev.target as HTMLElement).getAttribute('data-sizer-index');\n\n    if (!columnIndexAttr || isSizing) {\n      return;\n    }\n\n    const columnIndex = Number(columnIndexAttr);\n\n    if (!columnResizeDetails) {\n      // eslint-disable-next-line deprecation/deprecation\n      if (ev.which === KeyCodes.enter) {\n        this.setState({\n          columnResizeDetails: {\n            columnIndex: columnIndex,\n            columnMinWidth: columns[columnIndex].calculatedWidth!,\n          },\n        });\n\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    } else {\n      let increment: number | undefined;\n\n      // eslint-disable-next-line deprecation/deprecation\n      if (ev.which === KeyCodes.enter) {\n        this.setState({\n          columnResizeDetails: undefined,\n        });\n\n        ev.preventDefault();\n        ev.stopPropagation();\n        // eslint-disable-next-line deprecation/deprecation\n      } else if (ev.which === KeyCodes.left) {\n        increment = getRTL(this.props.theme) ? 1 : -1;\n        // eslint-disable-next-line deprecation/deprecation\n      } else if (ev.which === KeyCodes.right) {\n        increment = getRTL(this.props.theme) ? -1 : 1;\n      }\n\n      if (increment) {\n        if (!ev.shiftKey) {\n          increment *= 10;\n        }\n\n        this.setState({\n          columnResizeDetails: {\n            ...columnResizeDetails,\n            columnMinWidth: columnResizeDetails.columnMinWidth + increment,\n          },\n        });\n\n        if (onColumnResized) {\n          onColumnResized(columns[columnIndex], columnResizeDetails.columnMinWidth + increment, columnIndex);\n        }\n\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    }\n  };\n\n  /**\n   * mouse move event handler in the header\n   * it will set isSizing state to true when user clicked on the sizer and move the mouse.\n   *\n   * @param ev - mouse move event\n   */\n  private _onSizerMouseMove = (ev: React.MouseEvent<HTMLElement>): void => {\n    const {\n      // use buttons property here since ev.button in some edge case is not upding well during the move.\n      // but firefox doesn't support it, so we set the default value when it is not defined.\n      buttons,\n    } = ev;\n    const { onColumnIsSizingChanged, onColumnResized, columns = NO_COLUMNS } = this.props;\n    const { columnResizeDetails } = this.state;\n\n    if (buttons !== undefined && buttons !== MOUSEMOVE_PRIMARY_BUTTON) {\n      // cancel mouse down event and return early when the primary button is not pressed\n      this._onSizerMouseUp(ev);\n      return;\n    }\n\n    if (ev.clientX !== columnResizeDetails!.originX) {\n      if (onColumnIsSizingChanged) {\n        onColumnIsSizingChanged(columns[columnResizeDetails!.columnIndex], true);\n      }\n    }\n\n    if (onColumnResized) {\n      let movement = ev.clientX - columnResizeDetails!.originX!;\n\n      if (getRTL(this.props.theme)) {\n        movement = -movement;\n      }\n\n      onColumnResized(\n        columns[columnResizeDetails!.columnIndex],\n        columnResizeDetails!.columnMinWidth + movement,\n        columnResizeDetails!.columnIndex,\n      );\n    }\n  };\n\n  private _onSizerBlur = (ev: React.FocusEvent<HTMLElement>): void => {\n    const { columnResizeDetails } = this.state;\n\n    if (columnResizeDetails) {\n      this.setState({\n        columnResizeDetails: undefined,\n        isSizing: false,\n      });\n    }\n  };\n\n  /**\n   * mouse up event handler in the header\n   * clear the resize related state.\n   * This is to ensure we can catch double click event\n   *\n   * @param ev - mouse up event\n   */\n  private _onSizerMouseUp = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { columns = NO_COLUMNS, onColumnIsSizingChanged } = this.props;\n    const { columnResizeDetails } = this.state;\n\n    this.setState({\n      columnResizeDetails: undefined,\n      isSizing: false,\n    });\n\n    if (onColumnIsSizingChanged) {\n      onColumnIsSizingChanged(columns[columnResizeDetails!.columnIndex], false);\n    }\n  };\n\n  private _onSelectionChanged(): void {\n    const isAllSelected = !!this.props.selection && this.props.selection.isAllSelected();\n\n    if (this.state.isAllSelected !== isAllSelected) {\n      this.setState({\n        isAllSelected: isAllSelected,\n      });\n    }\n  }\n\n  private _onToggleCollapseAll = (): void => {\n    const { onToggleCollapseAll } = this.props;\n    const newCollapsed = !this.state.isAllCollapsed;\n    this.setState({\n      isAllCollapsed: newCollapsed,\n    });\n    if (onToggleCollapseAll) {\n      onToggleCollapseAll(newCollapsed);\n    }\n  };\n}\n\nfunction _liesBetween(rtl: boolean, target: number, left: number, right: number): boolean {\n  return rtl ? target <= left && target >= right : target >= left && target <= right;\n}\nfunction _isBefore(rtl: boolean, a: number, b: number): boolean {\n  return rtl ? a >= b : a <= b;\n}\nfunction _isAfter(rtl: boolean, a: number, b: number): boolean {\n  return rtl ? a <= b : a >= b;\n}\n\nfunction _stopPropagation(ev: React.MouseEvent<HTMLElement>): void {\n  ev.stopPropagation();\n}\n"]}
{"version":3,"file":"DetailsList.base.js","sourceRoot":"../src/","sources":["components/DetailsList/DetailsList.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport {\n  initializeComponentRef,\n  FocusRects,\n  Async,\n  KeyCodes,\n  elementContains,\n  getRTLSafeKeyCode,\n  classNamesFunction,\n  memoizeFunction,\n} from '../../Utilities';\nimport {\n  CheckboxVisibility,\n  ColumnActionsMode,\n  ConstrainMode,\n  DetailsListLayoutMode,\n  ColumnDragEndLocation,\n  IColumnDragDropDetails,\n} from '../DetailsList/DetailsList.types';\nimport { DetailsHeader } from '../DetailsList/DetailsHeader';\nimport { SelectAllVisibility } from '../DetailsList/DetailsHeader.types';\nimport { DetailsRowBase } from '../DetailsList/DetailsRow.base';\nimport { DetailsRow } from '../DetailsList/DetailsRow';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { Selection, SelectionMode, SelectionZone } from '../../Selection';\n\nimport { DragDropHelper } from '../../DragDrop';\nimport { GroupedList } from '../../GroupedList';\nimport { List, ScrollToMode } from '../../List';\nimport { withViewport } from '../../utilities/decorators/withViewport';\nimport { GetGroupCount } from '../../utilities/groupedList/GroupedListUtility';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles';\nimport { CHECK_CELL_WIDTH as CHECKBOX_WIDTH } from './DetailsRowCheck.styles';\n// For every group level there is a GroupSpacer added. Importing this const to have the source value in one place.\nimport { SPACER_WIDTH as GROUP_EXPAND_WIDTH } from '../GroupedList/GroupSpacer';\nimport { composeComponentAs, composeRenderFunction, getId } from '@fluentui/utilities';\nimport { useConst } from '@fluentui/react-hooks';\nimport type { IRenderFunction } from '../../Utilities';\nimport type {\n  IColumn,\n  IDetailsList,\n  IDetailsListProps,\n  IDetailsListStyles,\n  IDetailsListStyleProps,\n} from '../DetailsList/DetailsList.types';\nimport type {\n  IDetailsHeader,\n  IDetailsHeaderProps,\n  IColumnReorderHeaderProps,\n} from '../DetailsList/DetailsHeader.types';\nimport type { IDetailsFooterProps } from '../DetailsList/DetailsFooter.types';\nimport type { IDetailsRowProps } from '../DetailsList/DetailsRow.types';\nimport type { IFocusZone, IFocusZoneProps } from '../../FocusZone';\nimport type { IObjectWithKey, ISelection } from '../../Selection';\nimport type { IGroupedList, IGroupDividerProps, IGroupRenderProps, IGroup } from '../../GroupedList';\nimport type { IListProps } from '../../List';\n\nconst getClassNames = classNamesFunction<IDetailsListStyleProps, IDetailsListStyles>();\n\nexport interface IDetailsListState {\n  focusedItemIndex: number;\n  lastWidth?: number;\n  lastSelectionMode?: SelectionMode;\n  adjustedColumns: IColumn[];\n  isCollapsed?: boolean;\n  isSizing?: boolean;\n  isSomeGroupExpanded?: boolean;\n  /**\n   * A unique object used to force-update the List when it changes.\n   */\n  version: {};\n  getDerivedStateFromProps(nextProps: IDetailsListProps, previousState: IDetailsListState): IDetailsListState;\n}\n\nconst MIN_COLUMN_WIDTH = 100; // this is the global min width\n\nconst DEFAULT_RENDERED_WINDOWS_AHEAD = 2;\nconst DEFAULT_RENDERED_WINDOWS_BEHIND = 2;\n\ntype IDetailsListInnerProps = Omit<IDetailsListProps, 'selection'> &\n  IDetailsListState & {\n    selection: ISelection;\n    dragDropHelper: DragDropHelper | undefined;\n    rootRef: React.RefObject<HTMLDivElement>;\n    listRef: React.RefObject<List>;\n    groupedListRef: React.RefObject<IGroupedList>;\n    focusZoneRef: React.RefObject<IFocusZone>;\n    headerRef: React.RefObject<IDetailsHeader>;\n    selectionZoneRef: React.RefObject<SelectionZone>;\n    onGroupExpandStateChanged: (isSomeGroupExpanded: boolean) => void;\n    onColumnIsSizingChanged: (column: IColumn, isSizing: boolean) => void;\n    onRowDidMount: (row: DetailsRowBase) => void;\n    onRowWillUnmount: (row: DetailsRowBase) => void;\n    onColumnResized: (resizingColumn: IColumn, newWidth: number, resizingColumnIndex: number) => void;\n    onColumnAutoResized: (column: IColumn, columnIndex: number) => void;\n    onToggleCollapse: (collapsed: boolean) => void;\n    onActiveRowChanged: (el?: HTMLElement, ev?: React.FocusEvent<HTMLElement>) => void;\n    onBlur: (event: React.FocusEvent<HTMLElement>) => void;\n    onRenderDefaultRow: (detailsRowProps: IDetailsRowProps) => JSX.Element;\n  };\n\n/**\n * Hooks-based implementation of DetailsList.\n * Since many existing consumers of DetailsList expect `ref` to return a `DetailsList`,\n * this inner component handles rendering while the outer maintains compatibility.\n */\nconst DetailsListInner: React.ComponentType<IDetailsListInnerProps> = (\n  props: IDetailsListInnerProps,\n): JSX.Element | null => {\n  const { selection } = props;\n\n  const {\n    ariaLabelForListHeader,\n    ariaLabelForSelectAllCheckbox,\n    ariaLabelForSelectionColumn,\n    className,\n    checkboxVisibility,\n    compact,\n    constrainMode,\n    dragDropEvents,\n    groups,\n    groupProps,\n    indentWidth,\n    items,\n    isPlaceholderData,\n    isHeaderVisible,\n    layoutMode,\n    onItemInvoked,\n    onItemContextMenu,\n    onColumnHeaderClick,\n    onColumnHeaderContextMenu,\n    selectionMode = selection.mode,\n    selectionPreservedOnEmptyClick,\n    selectionZoneProps,\n    // eslint-disable-next-line deprecation/deprecation\n    ariaLabel,\n    ariaLabelForGrid,\n    rowElementEventMap,\n    // eslint-disable-next-line deprecation/deprecation\n    shouldApplyApplicationRole = false,\n    getKey,\n    listProps,\n    usePageCache,\n    onShouldVirtualize,\n    viewport,\n    minimumPixelsForDrag,\n    getGroupHeight,\n    styles,\n    theme,\n    cellStyleProps = DEFAULT_CELL_STYLE_PROPS,\n    onRenderCheckbox,\n    useFastIcons,\n    dragDropHelper,\n    adjustedColumns,\n    isCollapsed,\n    isSizing,\n    isSomeGroupExpanded,\n    version,\n    rootRef,\n    listRef,\n    focusZoneRef,\n    columnReorderOptions,\n    groupedListRef,\n    headerRef,\n    onGroupExpandStateChanged,\n    onColumnIsSizingChanged,\n    onRowDidMount,\n    onRowWillUnmount,\n    disableSelectionZone,\n    isSelectedOnFocus = true,\n    onColumnResized,\n    onColumnAutoResized,\n    onToggleCollapse,\n    onActiveRowChanged,\n    onBlur,\n    rowElementEventMap: eventsToRegister,\n    onRenderMissingItem,\n    onRenderItemColumn,\n    onRenderField,\n    getCellValueKey,\n    getRowAriaLabel,\n    getRowAriaDescribedBy,\n    checkButtonAriaLabel,\n    checkButtonGroupAriaLabel,\n    checkboxCellClassName,\n    useReducedRowRenderer,\n    enableUpdateAnimations,\n    enterModalSelectionOnTouch,\n    onRenderDefaultRow,\n    selectionZoneRef,\n    focusZoneProps,\n  } = props;\n\n  const defaultRole = 'grid';\n  const role = props.role ? props.role : defaultRole;\n\n  const rowId = getId('row');\n\n  const groupNestingDepth = getGroupNestingDepth(groups);\n  const groupedDetailsListIndexMap = useGroupedDetailsListIndexMap(groups);\n\n  const additionalListProps = React.useMemo((): IListProps => {\n    return {\n      renderedWindowsAhead: isSizing ? 0 : DEFAULT_RENDERED_WINDOWS_AHEAD,\n      renderedWindowsBehind: isSizing ? 0 : DEFAULT_RENDERED_WINDOWS_BEHIND,\n      getKey,\n      version,\n      ...listProps,\n    };\n  }, [isSizing, getKey, version, listProps]);\n\n  let selectAllVisibility = SelectAllVisibility.none; // for SelectionMode.none\n  if (selectionMode === SelectionMode.single) {\n    selectAllVisibility = SelectAllVisibility.hidden;\n  }\n  if (selectionMode === SelectionMode.multiple) {\n    // if isCollapsedGroupSelectVisible is false, disable select all when the list has all collapsed groups\n    let isCollapsedGroupSelectVisible =\n      groupProps && groupProps.headerProps && groupProps.headerProps.isCollapsedGroupSelectVisible;\n    if (isCollapsedGroupSelectVisible === undefined) {\n      isCollapsedGroupSelectVisible = true;\n    }\n    const isSelectAllVisible = isCollapsedGroupSelectVisible || !groups || isSomeGroupExpanded;\n    selectAllVisibility = isSelectAllVisible ? SelectAllVisibility.visible : SelectAllVisibility.hidden;\n  }\n\n  if (checkboxVisibility === CheckboxVisibility.hidden) {\n    selectAllVisibility = SelectAllVisibility.none;\n  }\n\n  const defaultOnRenderDetailsHeader = React.useCallback(\n    (detailsHeaderProps: IDetailsHeaderProps): JSX.Element | null => {\n      return <DetailsHeader {...detailsHeaderProps} />;\n    },\n    [],\n  );\n\n  const defaultOnRenderDetailsFooter = React.useCallback((): JSX.Element | null => {\n    return null;\n  }, []);\n\n  const propsOnRenderDetailsHeader = props.onRenderDetailsHeader;\n\n  const onRenderDetailsHeader = React.useMemo(() => {\n    return propsOnRenderDetailsHeader\n      ? composeRenderFunction(propsOnRenderDetailsHeader, defaultOnRenderDetailsHeader)\n      : defaultOnRenderDetailsHeader;\n  }, [propsOnRenderDetailsHeader, defaultOnRenderDetailsHeader]);\n\n  const propsOnRenderDetailsFooter = props.onRenderDetailsFooter;\n\n  const onRenderDetailsFooter = React.useMemo(() => {\n    return propsOnRenderDetailsFooter\n      ? composeRenderFunction(propsOnRenderDetailsFooter, defaultOnRenderDetailsFooter)\n      : defaultOnRenderDetailsFooter;\n  }, [propsOnRenderDetailsFooter, defaultOnRenderDetailsFooter]);\n\n  const detailsFooterProps = React.useMemo((): IDetailsFooterProps => {\n    return {\n      columns: adjustedColumns,\n      groupNestingDepth,\n      selection,\n      selectionMode,\n      viewport,\n      checkboxVisibility,\n      indentWidth,\n      cellStyleProps,\n    };\n  }, [\n    adjustedColumns,\n    groupNestingDepth,\n    selection,\n    selectionMode,\n    viewport,\n    checkboxVisibility,\n    indentWidth,\n    cellStyleProps,\n  ]);\n\n  const columnReorderOnDragEnd = columnReorderOptions && columnReorderOptions.onDragEnd;\n\n  const onColumnDragEnd = React.useCallback(\n    (\n      {\n        dropLocation,\n      }: {\n        dropLocation?: ColumnDragEndLocation;\n      },\n      event: MouseEvent,\n    ): void => {\n      let finalDropLocation: ColumnDragEndLocation = ColumnDragEndLocation.outside;\n      if (columnReorderOnDragEnd) {\n        if (dropLocation && dropLocation !== ColumnDragEndLocation.header) {\n          finalDropLocation = dropLocation;\n        } else if (rootRef.current) {\n          const clientRect = rootRef.current.getBoundingClientRect();\n          if (\n            event.clientX > clientRect.left &&\n            event.clientX < clientRect.right &&\n            event.clientY > clientRect.top &&\n            event.clientY < clientRect.bottom\n          ) {\n            finalDropLocation = ColumnDragEndLocation.surface;\n          }\n        }\n        columnReorderOnDragEnd(finalDropLocation);\n      }\n    },\n    [columnReorderOnDragEnd, rootRef],\n  );\n\n  const columnReorderProps = React.useMemo((): IColumnReorderHeaderProps | undefined => {\n    if (columnReorderOptions) {\n      return {\n        ...columnReorderOptions,\n        onColumnDragEnd,\n      };\n    }\n  }, [columnReorderOptions, onColumnDragEnd]);\n\n  const rowCount =\n    (isHeaderVisible ? 1 : 0) +\n    (props.onRenderDetailsFooter ? 1 : 0) +\n    GetGroupCount(groups) +\n    (items ? items.length : 0);\n  const colCount =\n    (selectAllVisibility !== SelectAllVisibility.none ? 1 : 0) +\n    (adjustedColumns ? adjustedColumns.length : 0) +\n    (groups ? 1 : 0);\n\n  const classNames = React.useMemo(() => {\n    return getClassNames(styles, {\n      theme: theme!,\n      compact,\n      isFixed: layoutMode === DetailsListLayoutMode.fixedColumns,\n      isHorizontalConstrained: constrainMode === ConstrainMode.horizontalConstrained,\n      className,\n    });\n  }, [styles, theme, compact, layoutMode, constrainMode, className]);\n\n  const onRenderDetailsGroupFooter = groupProps && groupProps.onRenderFooter;\n\n  const finalOnRenderDetailsGroupFooter = React.useMemo(() => {\n    return onRenderDetailsGroupFooter\n      ? (groupFooterProps: IGroupDividerProps, defaultRender?: IRenderFunction<IGroupDividerProps>) => {\n          return onRenderDetailsGroupFooter(\n            {\n              ...groupFooterProps,\n              columns: adjustedColumns,\n              groupNestingDepth,\n              indentWidth,\n              selection,\n              selectionMode,\n              viewport,\n              checkboxVisibility,\n              cellStyleProps,\n            },\n            defaultRender,\n          );\n        }\n      : undefined;\n  }, [\n    onRenderDetailsGroupFooter,\n    adjustedColumns,\n    groupNestingDepth,\n    indentWidth,\n    selection,\n    selectionMode,\n    viewport,\n    checkboxVisibility,\n    cellStyleProps,\n  ]);\n\n  const onRenderDetailsGroupHeader = groupProps && groupProps.onRenderHeader;\n\n  const finalOnRenderDetailsGroupHeader = React.useMemo(() => {\n    return onRenderDetailsGroupHeader\n      ? (groupHeaderProps: IGroupDividerProps, defaultRender?: IRenderFunction<IGroupDividerProps>) => {\n          const { groupIndex } = groupHeaderProps;\n          const groupKey: string | undefined =\n            groupIndex !== undefined ? groupHeaderProps.groups?.[groupIndex]?.key : undefined;\n          const totalRowCount: number =\n            groupKey !== undefined && groupedDetailsListIndexMap[groupKey]\n              ? groupedDetailsListIndexMap[groupKey].totalRowCount\n              : 0;\n\n          return onRenderDetailsGroupHeader(\n            {\n              ...groupHeaderProps,\n              columns: adjustedColumns,\n              groupNestingDepth,\n              indentWidth,\n              selection,\n              selectionMode: checkboxVisibility !== CheckboxVisibility.hidden ? selectionMode : SelectionMode.none,\n              viewport,\n              checkboxVisibility,\n              cellStyleProps,\n              ariaColSpan: adjustedColumns.length,\n              ariaLevel: undefined,\n              ariaPosInSet: undefined,\n              ariaSetSize: undefined,\n              ariaRowCount: undefined,\n              ariaRowIndex: groupIndex !== undefined ? totalRowCount + (isHeaderVisible ? 1 : 0) : undefined,\n            },\n            defaultRender,\n          );\n        }\n      : (groupHeaderProps: IGroupDividerProps, defaultRender: IRenderFunction<IGroupDividerProps>) => {\n          const { groupIndex } = groupHeaderProps;\n          const groupKey: string | undefined =\n            groupIndex !== undefined ? groupHeaderProps.groups?.[groupIndex]?.key : undefined;\n          const totalRowCount: number =\n            groupKey !== undefined && groupedDetailsListIndexMap[groupKey]\n              ? groupedDetailsListIndexMap[groupKey].totalRowCount\n              : 0;\n\n          return defaultRender({\n            ...groupHeaderProps,\n            ariaColSpan: adjustedColumns.length,\n            ariaLevel: undefined,\n            ariaPosInSet: undefined,\n            ariaSetSize: undefined,\n            ariaRowCount: undefined,\n            ariaRowIndex: groupIndex !== undefined ? totalRowCount + (isHeaderVisible ? 1 : 0) : undefined,\n          });\n        };\n  }, [\n    onRenderDetailsGroupHeader,\n    adjustedColumns,\n    groupNestingDepth,\n    indentWidth,\n    isHeaderVisible,\n    selection,\n    selectionMode,\n    viewport,\n    checkboxVisibility,\n    cellStyleProps,\n    groupedDetailsListIndexMap,\n  ]);\n\n  const finalGroupProps = React.useMemo((): IGroupRenderProps | undefined => {\n    return {\n      ...groupProps,\n      role: role === defaultRole ? 'rowgroup' : 'presentation',\n      onRenderFooter: finalOnRenderDetailsGroupFooter,\n      onRenderHeader: finalOnRenderDetailsGroupHeader,\n      // pass through custom group header checkbox label\n      headerProps: {\n        ...groupProps?.headerProps,\n        selectAllButtonProps: {\n          'aria-label': checkButtonGroupAriaLabel,\n          ...groupProps?.headerProps?.selectAllButtonProps,\n        },\n      },\n    };\n  }, [groupProps, finalOnRenderDetailsGroupFooter, finalOnRenderDetailsGroupHeader, checkButtonGroupAriaLabel, role]);\n\n  const sumColumnWidths = useConst(() =>\n    memoizeFunction((columns: IColumn[]) => {\n      let totalWidth: number = 0;\n\n      columns.forEach((column: IColumn) => (totalWidth += column.calculatedWidth || column.minWidth));\n\n      return totalWidth;\n    }),\n  );\n\n  const collapseAllVisibility = groupProps && groupProps.collapseAllVisibility;\n\n  const rowWidth = React.useMemo(() => {\n    return sumColumnWidths(adjustedColumns);\n  }, [adjustedColumns, sumColumnWidths]);\n\n  const onRenderCell = React.useCallback(\n    (nestingDepth: number, item: any, index: number, group?: IGroup): React.ReactNode => {\n      const finalOnRenderRow = props.onRenderRow\n        ? composeRenderFunction(props.onRenderRow, onRenderDefaultRow)\n        : onRenderDefaultRow;\n\n      const groupKey: string | undefined = group ? group.key : undefined;\n      const numOfGroupHeadersBeforeItem: number =\n        groupKey && groupedDetailsListIndexMap[groupKey]\n          ? groupedDetailsListIndexMap[groupKey].numOfGroupHeadersBeforeItem\n          : 0;\n\n      const rowRole = role === defaultRole ? undefined : 'presentation';\n\n      // add tabindex=\"0\" to first row if no header exists, to ensure the focuszone is in the tab order\n      const rowFocusZoneProps = isHeaderVisible || index > 0 ? {} : { tabIndex: 0 };\n\n      const rowProps: IDetailsRowProps = {\n        item: item,\n        itemIndex: index,\n        flatIndexOffset: (isHeaderVisible ? 2 : 1) + numOfGroupHeadersBeforeItem,\n        compact,\n        columns: adjustedColumns,\n        groupNestingDepth: nestingDepth,\n        id: `${rowId}-${index}`,\n        selectionMode,\n        selection,\n        onDidMount: onRowDidMount,\n        onWillUnmount: onRowWillUnmount,\n        onRenderItemColumn,\n        onRenderField,\n        getCellValueKey,\n        eventsToRegister,\n        dragDropEvents,\n        dragDropHelper,\n        viewport,\n        checkboxVisibility,\n        collapseAllVisibility,\n        getRowAriaLabel,\n        getRowAriaDescribedBy,\n        checkButtonAriaLabel,\n        checkboxCellClassName,\n        useReducedRowRenderer,\n        indentWidth,\n        cellStyleProps,\n        onRenderDetailsCheckbox: onRenderCheckbox,\n        enableUpdateAnimations,\n        rowWidth,\n        useFastIcons,\n        role: rowRole,\n        isGridRow: true,\n        focusZoneProps: rowFocusZoneProps,\n      };\n\n      if (!item) {\n        if (onRenderMissingItem) {\n          return onRenderMissingItem(index, rowProps);\n        }\n\n        return null;\n      }\n\n      return finalOnRenderRow(rowProps);\n    },\n    [\n      compact,\n      adjustedColumns,\n      selectionMode,\n      selection,\n      rowId,\n      onRowDidMount,\n      onRowWillUnmount,\n      onRenderItemColumn,\n      onRenderField,\n      getCellValueKey,\n      eventsToRegister,\n      dragDropEvents,\n      dragDropHelper,\n      viewport,\n      checkboxVisibility,\n      collapseAllVisibility,\n      getRowAriaLabel,\n      getRowAriaDescribedBy,\n      isHeaderVisible,\n      checkButtonAriaLabel,\n      checkboxCellClassName,\n      useReducedRowRenderer,\n      indentWidth,\n      cellStyleProps,\n      onRenderCheckbox,\n      enableUpdateAnimations,\n      useFastIcons,\n      onRenderDefaultRow,\n      onRenderMissingItem,\n      props.onRenderRow,\n      rowWidth,\n      role,\n      groupedDetailsListIndexMap,\n    ],\n  );\n\n  const onRenderListCell = React.useCallback(\n    (nestingDepth: number): ((item: any, itemIndex: number) => React.ReactNode) => {\n      return (item: any, itemIndex: number): React.ReactNode => {\n        return onRenderCell(nestingDepth, item, itemIndex);\n      };\n    },\n    [onRenderCell],\n  );\n\n  const isRightArrow = React.useCallback(\n    (event: React.KeyboardEvent<HTMLElement>) => {\n      // eslint-disable-next-line deprecation/deprecation\n      return event.which === getRTLSafeKeyCode(KeyCodes.right, theme);\n    },\n    [theme],\n  );\n\n  const focusZoneInnerProps: IFocusZoneProps = {\n    ...focusZoneProps,\n    componentRef: focusZoneProps && focusZoneProps.componentRef ? focusZoneProps.componentRef : focusZoneRef,\n    className: classNames.focusZone,\n    direction: focusZoneProps ? focusZoneProps.direction : FocusZoneDirection.vertical,\n    shouldEnterInnerZone:\n      focusZoneProps && focusZoneProps.shouldEnterInnerZone ? focusZoneProps.shouldEnterInnerZone : isRightArrow,\n    onActiveElementChanged:\n      focusZoneProps && focusZoneProps.onActiveElementChanged\n        ? focusZoneProps.onActiveElementChanged\n        : onActiveRowChanged,\n    shouldRaiseClicksOnEnter: false,\n    onBlur: focusZoneProps && focusZoneProps.onBlur ? focusZoneProps.onBlur : onBlur,\n  };\n\n  const FinalGroupedList =\n    groups && groupProps?.groupedListAs ? composeComponentAs(groupProps.groupedListAs, GroupedList) : GroupedList;\n\n  const list = groups ? (\n    <FinalGroupedList\n      focusZoneProps={focusZoneInnerProps}\n      componentRef={groupedListRef}\n      groups={groups}\n      groupProps={finalGroupProps}\n      items={items}\n      onRenderCell={onRenderCell}\n      role=\"presentation\"\n      selection={selection}\n      selectionMode={checkboxVisibility !== CheckboxVisibility.hidden ? selectionMode : SelectionMode.none}\n      dragDropEvents={dragDropEvents}\n      dragDropHelper={dragDropHelper}\n      eventsToRegister={rowElementEventMap}\n      listProps={additionalListProps}\n      onGroupExpandStateChanged={onGroupExpandStateChanged}\n      usePageCache={usePageCache}\n      onShouldVirtualize={onShouldVirtualize}\n      getGroupHeight={getGroupHeight}\n      compact={compact}\n    />\n  ) : (\n    <FocusZone {...focusZoneInnerProps}>\n      <List\n        ref={listRef}\n        role=\"presentation\"\n        items={items}\n        onRenderCell={onRenderListCell(0)}\n        usePageCache={usePageCache}\n        onShouldVirtualize={onShouldVirtualize}\n        {...additionalListProps}\n      />\n    </FocusZone>\n  );\n\n  const onHeaderKeyDown = React.useCallback(\n    (ev: React.KeyboardEvent<HTMLElement>): void => {\n      // eslint-disable-next-line deprecation/deprecation\n      if (ev.which === KeyCodes.down) {\n        if (focusZoneRef.current && focusZoneRef.current.focus()) {\n          // select the first item in list after down arrow key event\n          // only if nothing was selected; otherwise start with the already-selected item\n          if (isSelectedOnFocus && selection.getSelectedIndices().length === 0) {\n            selection.setIndexSelected(0, true, false);\n          }\n\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n      }\n    },\n    [selection, focusZoneRef, isSelectedOnFocus],\n  );\n\n  const onContentKeyDown = React.useCallback(\n    (ev: React.KeyboardEvent<HTMLElement>): void => {\n      // eslint-disable-next-line deprecation/deprecation\n      if (ev.which === KeyCodes.up && !ev.altKey) {\n        if (headerRef.current && headerRef.current.focus()) {\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n      }\n    },\n    [headerRef],\n  );\n\n  return (\n    <div\n      ref={rootRef}\n      className={classNames.root}\n      data-automationid=\"DetailsList\"\n      data-is-scrollable=\"false\"\n      {...(shouldApplyApplicationRole ? { role: 'application' } : {})}\n    >\n      <FocusRects />\n      <div\n        role={role}\n        // ariaLabel is a legacy prop that used to be applied on the root node, which has poor AT support\n        // it is now treated as a fallback to ariaLabelForGrid for legacy support\n        aria-label={ariaLabelForGrid || ariaLabel}\n        aria-rowcount={isPlaceholderData ? 0 : rowCount}\n        aria-colcount={colCount}\n        aria-busy={isPlaceholderData}\n      >\n        <div onKeyDown={onHeaderKeyDown} role=\"presentation\" className={classNames.headerWrapper}>\n          {isHeaderVisible &&\n            onRenderDetailsHeader(\n              {\n                componentRef: headerRef,\n                selectionMode: selectionMode,\n                layoutMode: layoutMode!,\n                selection: selection,\n                columns: adjustedColumns,\n                onColumnClick: onColumnHeaderClick,\n                onColumnContextMenu: onColumnHeaderContextMenu,\n                onColumnResized: onColumnResized,\n                onColumnIsSizingChanged: onColumnIsSizingChanged,\n                onColumnAutoResized: onColumnAutoResized,\n                groupNestingDepth: groupNestingDepth,\n                isAllCollapsed: isCollapsed,\n                onToggleCollapseAll: onToggleCollapse,\n                ariaLabel: ariaLabelForListHeader,\n                ariaLabelForSelectAllCheckbox: ariaLabelForSelectAllCheckbox,\n                ariaLabelForSelectionColumn: ariaLabelForSelectionColumn,\n                selectAllVisibility: selectAllVisibility,\n                collapseAllVisibility: groupProps && groupProps.collapseAllVisibility,\n                viewport: viewport,\n                columnReorderProps: columnReorderProps,\n                minimumPixelsForDrag: minimumPixelsForDrag,\n                cellStyleProps: cellStyleProps,\n                checkboxVisibility,\n                indentWidth,\n                onRenderDetailsCheckbox: onRenderCheckbox,\n                rowWidth: sumColumnWidths(adjustedColumns),\n                useFastIcons,\n              },\n              onRenderDetailsHeader,\n            )}\n        </div>\n        <div onKeyDown={onContentKeyDown} role=\"presentation\" className={classNames.contentWrapper}>\n          {!disableSelectionZone ? (\n            <SelectionZone\n              ref={selectionZoneRef}\n              selection={selection}\n              selectionPreservedOnEmptyClick={selectionPreservedOnEmptyClick}\n              selectionMode={selectionMode}\n              isSelectedOnFocus={isSelectedOnFocus}\n              selectionClearedOnEscapePress={isSelectedOnFocus}\n              toggleWithoutModifierPressed={!isSelectedOnFocus}\n              onItemInvoked={onItemInvoked}\n              onItemContextMenu={onItemContextMenu}\n              enterModalOnTouch={enterModalSelectionOnTouch}\n              {...(selectionZoneProps || {})}\n            >\n              {list}\n            </SelectionZone>\n          ) : (\n            list\n          )}\n        </div>\n        {onRenderDetailsFooter({\n          ...detailsFooterProps,\n        })}\n      </div>\n    </div>\n  );\n};\n\n@withViewport\nexport class DetailsListBase extends React.Component<IDetailsListProps, IDetailsListState> implements IDetailsList {\n  public static defaultProps = {\n    layoutMode: DetailsListLayoutMode.justified,\n    selectionMode: SelectionMode.multiple,\n    constrainMode: ConstrainMode.horizontalConstrained,\n    checkboxVisibility: CheckboxVisibility.onHover,\n    isHeaderVisible: true,\n    compact: false,\n    useFastIcons: true,\n  };\n\n  // References\n  private _async: Async;\n  private _root = React.createRef<HTMLDivElement>();\n  private _header = React.createRef<IDetailsHeader>();\n  private _groupedList = React.createRef<IGroupedList>();\n  private _list = React.createRef<List>();\n  private _focusZone = React.createRef<IFocusZone>();\n  private _selectionZone = React.createRef<SelectionZone>();\n\n  private _selection: ISelection;\n  private _activeRows: { [key: string]: DetailsRowBase };\n  private _dragDropHelper: DragDropHelper | undefined;\n  private _initialFocusedIndex: number | undefined;\n\n  private _columnOverrides: {\n    [key: string]: IColumn;\n  };\n\n  public static getDerivedStateFromProps(\n    nextProps: IDetailsListProps,\n    previousState: IDetailsListState,\n  ): IDetailsListState {\n    return previousState.getDerivedStateFromProps(nextProps, previousState);\n  }\n\n  constructor(props: IDetailsListProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this._async = new Async(this);\n\n    this._activeRows = {};\n    this._columnOverrides = {};\n\n    this.state = {\n      focusedItemIndex: -1,\n      lastWidth: 0,\n      adjustedColumns: this._getAdjustedColumns(props, undefined),\n      isSizing: false,\n      isCollapsed: props.groupProps && props.groupProps.isAllGroupsCollapsed,\n      isSomeGroupExpanded: props.groupProps && !props.groupProps.isAllGroupsCollapsed,\n      version: {},\n      getDerivedStateFromProps: this._getDerivedStateFromProps,\n    };\n\n    this._selection =\n      props.selection ||\n      new Selection({\n        onSelectionChanged: undefined,\n        getKey: props.getKey,\n        selectionMode: props.selectionMode,\n      });\n\n    if (!this.props.disableSelectionZone) {\n      this._selection.setItems(props.items as IObjectWithKey[], false);\n    }\n\n    this._dragDropHelper = props.dragDropEvents\n      ? new DragDropHelper({\n          selection: this._selection,\n          minimumPixelsForDrag: props.minimumPixelsForDrag,\n        })\n      : undefined;\n    this._initialFocusedIndex = props.initialFocusedIndex;\n  }\n\n  public scrollToIndex(index: number, measureItem?: (itemIndex: number) => number, scrollToMode?: ScrollToMode): void {\n    this._list.current && this._list.current.scrollToIndex(index, measureItem, scrollToMode);\n    this._groupedList.current && this._groupedList.current.scrollToIndex(index, measureItem, scrollToMode);\n  }\n\n  public focusIndex(\n    index: number,\n    forceIntoFirstElement: boolean = false,\n    measureItem?: (itemIndex: number) => number,\n    scrollToMode?: ScrollToMode,\n  ): void {\n    const item = this.props.items[index];\n    if (item) {\n      this.scrollToIndex(index, measureItem, scrollToMode);\n\n      const itemKey = this._getItemKey(item, index);\n      const row = this._activeRows[itemKey];\n      if (row) {\n        this._setFocusToRow(row, forceIntoFirstElement);\n      }\n    }\n  }\n\n  public getStartItemIndexInView(): number {\n    if (this._list && this._list.current) {\n      return this._list.current.getStartItemIndexInView();\n    } else if (this._groupedList && this._groupedList.current) {\n      return this._groupedList.current.getStartItemIndexInView();\n    }\n    return 0;\n  }\n\n  public updateColumn(column: IColumn, options: { width?: number; newColumnIndex?: number }) {\n    const NO_COLUMNS: IColumn[] = [];\n\n    const { columns = NO_COLUMNS, selectionMode, checkboxVisibility, columnReorderOptions } = this.props;\n    const { width, newColumnIndex } = options;\n    const index = columns.findIndex(col => col.key === column.key);\n\n    if (width) {\n      this._onColumnResized(column, width, index!);\n    }\n\n    if (newColumnIndex !== undefined && columnReorderOptions) {\n      const isCheckboxColumnHidden =\n        selectionMode === SelectionMode.none || checkboxVisibility === CheckboxVisibility.hidden;\n\n      const showCheckbox = checkboxVisibility !== CheckboxVisibility.hidden;\n      const columnIndex = (showCheckbox ? 2 : 1) + index!;\n\n      const draggedIndex = isCheckboxColumnHidden ? columnIndex - 1 : columnIndex - 2;\n      const targetIndex = isCheckboxColumnHidden ? newColumnIndex - 1 : newColumnIndex - 2;\n\n      const frozenColumnCountFromStart = columnReorderOptions.frozenColumnCountFromStart ?? 0;\n      const frozenColumnCountFromEnd = columnReorderOptions.frozenColumnCountFromEnd ?? 0;\n      const isValidTargetIndex =\n        targetIndex >= frozenColumnCountFromStart && targetIndex < columns.length - frozenColumnCountFromEnd;\n\n      if (isValidTargetIndex) {\n        if (columnReorderOptions.onColumnDrop) {\n          const dragDropDetails: IColumnDragDropDetails = {\n            draggedIndex: draggedIndex,\n            targetIndex: targetIndex,\n          };\n          columnReorderOptions.onColumnDrop(dragDropDetails);\n          /* eslint-disable deprecation/deprecation */\n        } else if (columnReorderOptions.handleColumnReorder) {\n          columnReorderOptions.handleColumnReorder(draggedIndex, targetIndex);\n          /* eslint-enable deprecation/deprecation */\n        }\n      }\n    }\n  }\n\n  public componentWillUnmount(): void {\n    if (this._dragDropHelper) {\n      // TODO If the DragDropHelper was passed via props, this will dispose it, which is incorrect behavior.\n      this._dragDropHelper.dispose();\n    }\n    this._async.dispose();\n  }\n\n  public componentDidUpdate(prevProps: IDetailsListProps, prevState: IDetailsListState) {\n    this._notifyColumnsResized();\n\n    if (this._initialFocusedIndex !== undefined) {\n      const item = this.props.items[this._initialFocusedIndex];\n      if (item) {\n        const itemKey = this._getItemKey(item, this._initialFocusedIndex);\n        const row = this._activeRows[itemKey];\n        if (row) {\n          this._setFocusToRowIfPending(row);\n        }\n      }\n    }\n\n    if (\n      this.props.items !== prevProps.items &&\n      this.props.items.length > 0 &&\n      this.state.focusedItemIndex !== -1 &&\n      !elementContains(this._root.current, document.activeElement as HTMLElement, false)\n    ) {\n      // Item set has changed and previously-focused item is gone.\n      // Set focus to item at index of previously-focused item if it is in range,\n      // else set focus to the last item.\n      const index =\n        this.state.focusedItemIndex < this.props.items.length\n          ? this.state.focusedItemIndex\n          : this.props.items.length - 1;\n      const item = this.props.items[index];\n      const itemKey = this._getItemKey(item, this.state.focusedItemIndex);\n      const row = this._activeRows[itemKey];\n      if (row) {\n        this._setFocusToRow(row);\n      } else {\n        this._initialFocusedIndex = index;\n      }\n    }\n    if (this.props.onDidUpdate) {\n      this.props.onDidUpdate(this);\n    }\n  }\n\n  public render(): JSX.Element {\n    return (\n      <DetailsListInner\n        {...this.props}\n        {...this.state}\n        selection={this._selection}\n        dragDropHelper={this._dragDropHelper}\n        rootRef={this._root}\n        listRef={this._list}\n        groupedListRef={this._groupedList}\n        focusZoneRef={this._focusZone}\n        headerRef={this._header}\n        selectionZoneRef={this._selectionZone}\n        onGroupExpandStateChanged={this._onGroupExpandStateChanged}\n        onColumnIsSizingChanged={this._onColumnIsSizingChanged}\n        onRowDidMount={this._onRowDidMount}\n        onRowWillUnmount={this._onRowWillUnmount}\n        onColumnResized={this._onColumnResized}\n        onColumnAutoResized={this._onColumnAutoResized}\n        onToggleCollapse={this._onToggleCollapse}\n        onActiveRowChanged={this._onActiveRowChanged}\n        onBlur={this._onBlur}\n        onRenderDefaultRow={this._onRenderRow}\n      />\n    );\n  }\n\n  public forceUpdate(): void {\n    super.forceUpdate();\n    this._forceListUpdates();\n  }\n\n  protected _onRenderRow = (\n    props: IDetailsRowProps,\n    defaultRender?: IRenderFunction<IDetailsRowProps>,\n  ): JSX.Element => {\n    return <DetailsRow {...props} />;\n  };\n\n  private _getDerivedStateFromProps = (\n    nextProps: IDetailsListProps,\n    previousState: IDetailsListState,\n  ): IDetailsListState => {\n    const {\n      checkboxVisibility,\n      items,\n      setKey,\n      selectionMode = this._selection.mode,\n      columns,\n      viewport,\n      compact,\n      dragDropEvents,\n    } = this.props;\n\n    const { isAllGroupsCollapsed = undefined } = this.props.groupProps || {};\n    const newViewportWidth = (nextProps.viewport && nextProps.viewport.width) || 0;\n    const oldViewportWidth = (viewport && viewport.width) || 0;\n    const shouldResetSelection = nextProps.setKey !== setKey || nextProps.setKey === undefined;\n    let shouldForceUpdates = false;\n\n    if (nextProps.layoutMode !== this.props.layoutMode) {\n      shouldForceUpdates = true;\n    }\n\n    let nextState = previousState;\n\n    if (shouldResetSelection) {\n      this._initialFocusedIndex = nextProps.initialFocusedIndex;\n      // reset focusedItemIndex when setKey changes\n      nextState = {\n        ...nextState,\n        focusedItemIndex: this._initialFocusedIndex !== undefined ? this._initialFocusedIndex : -1,\n      };\n    }\n\n    if (!this.props.disableSelectionZone && nextProps.items !== items) {\n      this._selection.setItems(nextProps.items, shouldResetSelection);\n    }\n\n    if (\n      nextProps.checkboxVisibility !== checkboxVisibility ||\n      nextProps.columns !== columns ||\n      newViewportWidth !== oldViewportWidth ||\n      nextProps.compact !== compact\n    ) {\n      shouldForceUpdates = true;\n    }\n\n    nextState = {\n      ...nextState,\n      ...this._adjustColumns(nextProps, nextState, true),\n    };\n\n    if (nextProps.selectionMode !== selectionMode) {\n      shouldForceUpdates = true;\n    }\n\n    if (\n      isAllGroupsCollapsed === undefined &&\n      nextProps.groupProps &&\n      nextProps.groupProps.isAllGroupsCollapsed !== undefined\n    ) {\n      nextState = {\n        ...nextState,\n        isCollapsed: nextProps.groupProps.isAllGroupsCollapsed,\n        isSomeGroupExpanded: !nextProps.groupProps.isAllGroupsCollapsed,\n      };\n    }\n\n    if (nextProps.dragDropEvents !== dragDropEvents) {\n      this._dragDropHelper && this._dragDropHelper.dispose();\n      this._dragDropHelper = nextProps.dragDropEvents\n        ? new DragDropHelper({\n            selection: this._selection,\n            minimumPixelsForDrag: nextProps.minimumPixelsForDrag,\n          })\n        : undefined;\n      shouldForceUpdates = true;\n    }\n\n    if (shouldForceUpdates) {\n      nextState = {\n        ...nextState,\n        version: {},\n      };\n    }\n\n    return nextState;\n  };\n\n  private _onGroupExpandStateChanged = (isSomeGroupExpanded: boolean): void => {\n    this.setState({ isSomeGroupExpanded: isSomeGroupExpanded });\n  };\n\n  private _onColumnIsSizingChanged = (column: IColumn, isSizing: boolean): void => {\n    this.setState({ isSizing: isSizing });\n  };\n\n  private _getGroupNestingDepth(): number {\n    const { groups } = this.props;\n    let level = 0;\n    let groupsInLevel = groups;\n\n    while (groupsInLevel && groupsInLevel.length > 0) {\n      level++;\n      groupsInLevel = groupsInLevel[0].children;\n    }\n\n    return level;\n  }\n\n  private _onRowDidMount = (row: DetailsRowBase): void => {\n    const { item, itemIndex } = row.props;\n    const itemKey = this._getItemKey(item, itemIndex);\n    this._activeRows[itemKey] = row; // this is used for column auto resize\n\n    this._setFocusToRowIfPending(row);\n\n    const { onRowDidMount } = this.props;\n    if (onRowDidMount) {\n      onRowDidMount(item, itemIndex);\n    }\n  };\n\n  private _setFocusToRowIfPending(row: DetailsRowBase): void {\n    const { itemIndex } = row.props;\n    if (this._initialFocusedIndex !== undefined && itemIndex === this._initialFocusedIndex) {\n      this._setFocusToRow(row);\n      delete this._initialFocusedIndex;\n    }\n  }\n\n  private _setFocusToRow(row: DetailsRowBase, forceIntoFirstElement: boolean = false): void {\n    if (this._selectionZone.current) {\n      this._selectionZone.current.ignoreNextFocus();\n    }\n    this._async.setTimeout((): void => {\n      row.focus(forceIntoFirstElement);\n    }, 0);\n  }\n\n  private _onRowWillUnmount = (row: DetailsRowBase): void => {\n    const { onRowWillUnmount } = this.props;\n\n    const { item, itemIndex } = row.props;\n    const itemKey = this._getItemKey(item, itemIndex);\n    delete this._activeRows[itemKey];\n\n    if (onRowWillUnmount) {\n      onRowWillUnmount(item, itemIndex);\n    }\n  };\n\n  private _onToggleCollapse = (collapsed: boolean): void => {\n    this.setState({\n      isCollapsed: collapsed,\n    });\n    if (this._groupedList.current) {\n      this._groupedList.current.toggleCollapseAll(collapsed);\n    }\n  };\n\n  private _forceListUpdates(): void {\n    if (this._groupedList.current) {\n      this._groupedList.current.forceUpdate();\n    }\n    if (this._list.current) {\n      this._list.current.forceUpdate();\n    }\n  }\n\n  private _notifyColumnsResized(): void {\n    this.state.adjustedColumns.forEach(column => {\n      if (column.onColumnResize) {\n        column.onColumnResize(column.currentWidth);\n      }\n    });\n  }\n\n  private _adjustColumns(\n    newProps: IDetailsListProps,\n    previousState: IDetailsListState,\n    forceUpdate?: boolean,\n    resizingColumnIndex?: number,\n  ): IDetailsListState {\n    const adjustedColumns = this._getAdjustedColumns(newProps, previousState, forceUpdate, resizingColumnIndex);\n    const { viewport } = this.props;\n    const viewportWidth = viewport && viewport.width ? viewport.width : 0;\n\n    return {\n      ...previousState,\n      adjustedColumns: adjustedColumns,\n      lastWidth: viewportWidth,\n    };\n  }\n\n  /** Returns adjusted columns, given the viewport size and layout mode. */\n  private _getAdjustedColumns(\n    newProps: IDetailsListProps,\n    previousState: IDetailsListState | undefined,\n    forceUpdate?: boolean,\n    resizingColumnIndex?: number,\n  ): IColumn[] {\n    const { items: newItems, layoutMode, selectionMode, viewport } = newProps;\n    const viewportWidth = viewport && viewport.width ? viewport.width : 0;\n    let { columns: newColumns } = newProps;\n\n    const columns = this.props ? this.props.columns : [];\n    const lastWidth = previousState ? previousState.lastWidth : -1;\n    const lastSelectionMode = previousState ? previousState.lastSelectionMode : undefined;\n\n    if (\n      !forceUpdate &&\n      lastWidth === viewportWidth &&\n      lastSelectionMode === selectionMode &&\n      (!columns || newColumns === columns)\n    ) {\n      return newColumns || [];\n    }\n\n    newColumns = newColumns || buildColumns(newItems, true);\n\n    let adjustedColumns: IColumn[];\n\n    if (layoutMode === DetailsListLayoutMode.fixedColumns) {\n      adjustedColumns = this._getFixedColumns(newColumns, viewportWidth, newProps);\n\n      // Preserve adjusted column calculated widths.\n      adjustedColumns.forEach(column => {\n        this._rememberCalculatedWidth(column, column.calculatedWidth!);\n      });\n    } else {\n      adjustedColumns = this._getJustifiedColumns(newColumns, viewportWidth, newProps);\n\n      adjustedColumns.forEach(column => {\n        this._getColumnOverride(column.key).currentWidth = column.calculatedWidth;\n      });\n    }\n\n    return adjustedColumns;\n  }\n\n  /** Builds a set of columns based on the given columns mixed with the current overrides. */\n  private _getFixedColumns(newColumns: IColumn[], viewportWidth: number, props: IDetailsListProps): IColumn[] {\n    const { selectionMode = this._selection.mode, checkboxVisibility, flexMargin, skipViewportMeasures } = this.props;\n    let remainingWidth = viewportWidth - (flexMargin || 0);\n    let sumProportionalWidth = 0;\n\n    newColumns.forEach((col: IColumn) => {\n      if (skipViewportMeasures || !col.flexGrow) {\n        remainingWidth -= col.maxWidth || col.minWidth || MIN_COLUMN_WIDTH;\n      } else {\n        remainingWidth -= col.minWidth || MIN_COLUMN_WIDTH;\n        sumProportionalWidth += col.flexGrow;\n      }\n\n      remainingWidth -= getPaddedWidth(col, props, true);\n    });\n\n    const rowCheckWidth =\n      selectionMode !== SelectionMode.none && checkboxVisibility !== CheckboxVisibility.hidden ? CHECKBOX_WIDTH : 0;\n    const groupExpandWidth = this._getGroupNestingDepth() * GROUP_EXPAND_WIDTH;\n    remainingWidth -= rowCheckWidth + groupExpandWidth;\n\n    let widthFraction = remainingWidth / sumProportionalWidth;\n\n    // Shrinks proportional columns to their max width and adds the remaining width to distribute to other columns.\n    if (!skipViewportMeasures) {\n      newColumns.forEach((column: IColumn) => {\n        const newColumn: IColumn = { ...column, ...this._columnOverrides[column.key] };\n\n        if (newColumn.flexGrow && newColumn.maxWidth) {\n          const fullWidth = newColumn.flexGrow * widthFraction + newColumn.minWidth;\n          const shrinkWidth = fullWidth - newColumn.maxWidth;\n\n          if (shrinkWidth > 0) {\n            remainingWidth += shrinkWidth;\n            sumProportionalWidth -= (shrinkWidth / (fullWidth - newColumn.minWidth)) * newColumn.flexGrow;\n          }\n        }\n      });\n    }\n\n    widthFraction = remainingWidth > 0 ? remainingWidth / sumProportionalWidth : 0;\n\n    return newColumns.map(column => {\n      const newColumn: IColumn = { ...column, ...this._columnOverrides[column.key] };\n\n      // Delay computation until viewport width is available.\n      if (!skipViewportMeasures && newColumn.flexGrow && remainingWidth <= 0) {\n        return newColumn;\n      }\n\n      if (!newColumn.calculatedWidth) {\n        if (!skipViewportMeasures && newColumn.flexGrow) {\n          // Assigns the proportion of the remaining extra width after all columns have met minimum widths.\n          newColumn.calculatedWidth = newColumn.minWidth + newColumn.flexGrow * widthFraction;\n          newColumn.calculatedWidth = Math.min(newColumn.calculatedWidth, newColumn.maxWidth || Number.MAX_VALUE);\n        } else {\n          newColumn.calculatedWidth = newColumn.maxWidth || newColumn.minWidth || MIN_COLUMN_WIDTH;\n        }\n      }\n\n      return newColumn;\n    });\n  }\n\n  /** Builds a set of columns to fix within the viewport width. */\n  private _getJustifiedColumns(newColumns: IColumn[], viewportWidth: number, props: IDetailsListProps): IColumn[] {\n    const { selectionMode = this._selection.mode, checkboxVisibility, skipViewportMeasures } = props;\n    const rowCheckWidth =\n      selectionMode !== SelectionMode.none && checkboxVisibility !== CheckboxVisibility.hidden ? CHECKBOX_WIDTH : 0;\n    const groupExpandWidth = this._getGroupNestingDepth() * GROUP_EXPAND_WIDTH;\n    let totalWidth = 0; // offset because we have one less inner padding.\n    const availableWidth = viewportWidth - (rowCheckWidth + groupExpandWidth);\n    const adjustedColumns: IColumn[] = newColumns.map((column, i) => {\n      const baseColumn = {\n        ...column,\n        calculatedWidth: column.minWidth || MIN_COLUMN_WIDTH,\n      };\n\n      const newColumn = {\n        ...baseColumn,\n        ...this._columnOverrides[column.key],\n      };\n\n      totalWidth += getPaddedWidth(newColumn, props);\n\n      return newColumn;\n    });\n\n    if (skipViewportMeasures) {\n      return adjustedColumns;\n    }\n\n    let lastIndex = adjustedColumns.length - 1;\n\n    // Shrink or remove collapsable columns.\n    while (lastIndex >= 0 && totalWidth > availableWidth) {\n      const column = adjustedColumns[lastIndex];\n\n      const minWidth = column.minWidth || MIN_COLUMN_WIDTH;\n      const overflowWidth = totalWidth - availableWidth;\n\n      // eslint-disable-next-line deprecation/deprecation\n      if (column.calculatedWidth! - minWidth >= overflowWidth || !(column.isCollapsible || column.isCollapsable)) {\n        const originalWidth = column.calculatedWidth!;\n        column.calculatedWidth = Math.max(column.calculatedWidth! - overflowWidth, minWidth);\n        totalWidth -= originalWidth - column.calculatedWidth;\n      } else {\n        totalWidth -= getPaddedWidth(column, props);\n        adjustedColumns.splice(lastIndex, 1);\n      }\n      lastIndex--;\n    }\n\n    // Then expand columns starting at the beginning, until we've filled the width.\n    for (let i = 0; i < adjustedColumns.length && totalWidth < availableWidth; i++) {\n      const column = adjustedColumns[i];\n      const isLast = i === adjustedColumns.length - 1;\n      const overrides = this._columnOverrides[column.key];\n      if (overrides && overrides.calculatedWidth && !isLast) {\n        continue;\n      }\n\n      const spaceLeft = availableWidth - totalWidth;\n      let increment: number;\n      if (isLast) {\n        increment = spaceLeft;\n      } else {\n        const maxWidth = column.maxWidth;\n        const minWidth = column.minWidth || maxWidth || MIN_COLUMN_WIDTH;\n        increment = maxWidth ? Math.min(spaceLeft, maxWidth - minWidth) : spaceLeft;\n      }\n\n      column.calculatedWidth = (column.calculatedWidth as number) + increment;\n      totalWidth += increment;\n    }\n\n    return adjustedColumns;\n  }\n\n  private _onColumnResized = (resizingColumn: IColumn, newWidth: number, resizingColumnIndex: number): void => {\n    const newCalculatedWidth = Math.max(resizingColumn.minWidth || MIN_COLUMN_WIDTH, newWidth);\n    if (this.props.onColumnResize) {\n      this.props.onColumnResize(resizingColumn, newCalculatedWidth, resizingColumnIndex);\n    }\n\n    this._rememberCalculatedWidth(resizingColumn, newCalculatedWidth);\n\n    this.setState({\n      ...this._adjustColumns(this.props, this.state, true, resizingColumnIndex),\n      version: {},\n    });\n  };\n\n  private _rememberCalculatedWidth(column: IColumn, newCalculatedWidth: number): void {\n    const overrides = this._getColumnOverride(column.key);\n    overrides.calculatedWidth = newCalculatedWidth;\n    overrides.currentWidth = newCalculatedWidth;\n  }\n\n  private _getColumnOverride(key: string): IColumn {\n    return (this._columnOverrides[key] = this._columnOverrides[key] || {});\n  }\n\n  /**\n   * Callback function when double clicked on the details header column resizer\n   * which will measure the column cells of all the active rows and resize the\n   * column to the max cell width.\n   *\n   * @param column - double clicked column definition\n   * @param columnIndex - double clicked column index\n   * TODO: min width 100 should be changed to const value and should be consistent with the\n   * value used on _onSizerMove method in DetailsHeader\n   */\n  private _onColumnAutoResized = (column: IColumn, columnIndex: number): void => {\n    let max = 0;\n    let count = 0;\n    const totalCount = Object.keys(this._activeRows).length;\n\n    for (const key in this._activeRows) {\n      if (this._activeRows.hasOwnProperty(key)) {\n        const currentRow = this._activeRows[key];\n        currentRow.measureCell(columnIndex, (width: number) => {\n          max = Math.max(max, width);\n          count++;\n          if (count === totalCount) {\n            this._onColumnResized(column, max, columnIndex);\n          }\n        });\n      }\n    }\n  };\n\n  /**\n   * Call back function when an element in FocusZone becomes active. It will translate it into item\n   * and call onActiveItemChanged callback if specified.\n   *\n   * @param row - element that became active in Focus Zone\n   * @param focus - event from Focus Zone\n   */\n  private _onActiveRowChanged = (el?: HTMLElement, ev?: React.FocusEvent<HTMLElement>): void => {\n    const { items, onActiveItemChanged } = this.props;\n\n    if (!el) {\n      return;\n    }\n\n    // Check and assign index only if the event was raised from any DetailsRow element\n    if (el.getAttribute('data-item-index')) {\n      const index = Number(el.getAttribute('data-item-index'));\n      if (index >= 0) {\n        if (onActiveItemChanged) {\n          onActiveItemChanged(items[index], index, ev);\n        }\n        this.setState({\n          focusedItemIndex: index,\n        });\n      }\n    }\n  };\n\n  private _onBlur = (event: React.FocusEvent<HTMLElement>): void => {\n    this.setState({\n      focusedItemIndex: -1,\n    });\n  };\n\n  private _getItemKey(item: any, itemIndex: number): string | number {\n    const { getKey } = this.props;\n\n    let itemKey: string | number | undefined = undefined;\n    if (item) {\n      itemKey = item.key;\n    }\n\n    if (getKey) {\n      itemKey = getKey(item, itemIndex);\n    }\n\n    if (!itemKey) {\n      itemKey = itemIndex;\n    }\n\n    return itemKey;\n  }\n}\n\nexport function buildColumns(\n  items: any[],\n  canResizeColumns?: boolean,\n  onColumnClick?: (ev: React.MouseEvent<HTMLElement>, column: IColumn) => void,\n  sortedColumnKey?: string,\n  isSortedDescending?: boolean,\n  groupedColumnKey?: string,\n  isMultiline?: boolean,\n  columnActionsMode?: ColumnActionsMode,\n) {\n  const columns: IColumn[] = [];\n\n  if (items && items.length) {\n    const firstItem = items[0];\n\n    for (const propName in firstItem) {\n      if (firstItem.hasOwnProperty(propName)) {\n        columns.push({\n          key: propName,\n          name: propName,\n          fieldName: propName,\n          minWidth: MIN_COLUMN_WIDTH,\n          maxWidth: 300,\n          isCollapsible: !!columns.length,\n          isMultiline: isMultiline === undefined ? false : isMultiline,\n          isSorted: sortedColumnKey === propName,\n          isSortedDescending: !!isSortedDescending,\n          isRowHeader: false,\n          columnActionsMode: columnActionsMode ?? ColumnActionsMode.clickable,\n          isResizable: canResizeColumns,\n          onColumnClick: onColumnClick,\n          isGrouped: groupedColumnKey === propName,\n        });\n      }\n    }\n  }\n\n  return columns;\n}\n\nfunction getPaddedWidth(column: IColumn, props: IDetailsListProps, paddingOnly?: true): number {\n  const { cellStyleProps = DEFAULT_CELL_STYLE_PROPS } = props;\n\n  return (\n    (paddingOnly ? 0 : column.calculatedWidth!) +\n    cellStyleProps.cellLeftPadding +\n    cellStyleProps.cellRightPadding +\n    (column.isPadded ? cellStyleProps.cellExtraRightPadding : 0)\n  );\n}\n\nfunction getGroupNestingDepth(groups: IDetailsListProps['groups']): number {\n  let level = 0;\n  let groupsInLevel = groups;\n\n  while (groupsInLevel && groupsInLevel.length > 0) {\n    level++;\n    groupsInLevel = groupsInLevel[0].children;\n  }\n\n  return level;\n}\n\ninterface IGroupedDetailsListIndexMap {\n  [key: string]: { numOfGroupHeadersBeforeItem: number; totalRowCount: number };\n}\n\nfunction useGroupedDetailsListIndexMap(groups: IDetailsListProps['groups']) {\n  return React.useMemo((): IGroupedDetailsListIndexMap => {\n    const indexMap: IGroupedDetailsListIndexMap = {};\n    if (groups) {\n      let rowCount = 1;\n      let numGroupHeaders = 1;\n      for (const group of groups) {\n        const { key } = group;\n        indexMap[key] = { numOfGroupHeadersBeforeItem: numGroupHeaders, totalRowCount: rowCount };\n        numGroupHeaders++;\n        rowCount += group.count + 1;\n      }\n    }\n    return indexMap;\n  }, [groups]);\n}\n"]}
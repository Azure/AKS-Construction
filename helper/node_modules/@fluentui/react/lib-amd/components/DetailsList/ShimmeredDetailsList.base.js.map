{"version":3,"file":"ShimmeredDetailsList.base.js","sourceRoot":"../src/","sources":["components/DetailsList/ShimmeredDetailsList.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport { classNamesFunction, css } from '../../Utilities';\nimport { SelectionMode } from '../../Selection';\nimport { DetailsList } from './DetailsList';\nimport { Shimmer, ShimmerElementsGroup, ShimmerElementType } from '../../Shimmer';\nimport { CheckboxVisibility } from './DetailsList.types';\n\nimport { DEFAULT_CELL_STYLE_PROPS, DEFAULT_ROW_HEIGHTS } from './DetailsRow.styles';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport type { IDetailsRowProps } from './DetailsRow.types';\nimport type { IShimmerElement } from '../../Shimmer';\nimport type {\n  IShimmeredDetailsListProps,\n  IShimmeredDetailsListStyleProps,\n  IShimmeredDetailsListStyles,\n} from './ShimmeredDetailsList.types';\n\nconst getClassNames = classNamesFunction<IShimmeredDetailsListStyleProps, IShimmeredDetailsListStyles>();\n\nconst SHIMMER_INITIAL_ITEMS = 10;\nconst DEFAULT_SHIMMER_HEIGHT = 7;\nconst SHIMMER_LINE_VS_CELL_WIDTH_RATIO = 0.95;\n\nexport class ShimmeredDetailsListBase extends React.Component<IShimmeredDetailsListProps, {}> {\n  private _shimmerItems: null[];\n  private _classNames: IProcessedStyleSet<IShimmeredDetailsListStyles>;\n\n  constructor(props: IShimmeredDetailsListProps) {\n    super(props);\n\n    this._shimmerItems = props.shimmerLines ? new Array(props.shimmerLines) : new Array(SHIMMER_INITIAL_ITEMS);\n  }\n\n  public render(): JSX.Element {\n    const {\n      detailsListStyles,\n      enableShimmer,\n      items,\n      listProps,\n      onRenderCustomPlaceholder,\n      removeFadingOverlay,\n      shimmerLines,\n      styles,\n      theme,\n      ariaLabelForGrid,\n      ariaLabelForShimmer,\n      ...restProps\n    } = this.props;\n\n    const listClassName = listProps && listProps.className;\n\n    this._classNames = getClassNames(styles, {\n      theme: theme!,\n    });\n\n    const newListProps = {\n      ...listProps,\n      // Adds to the optional listProp className a fading out overlay className only when `enableShimmer` toggled on\n      // and the overlay is not disabled by `removeFadingOverlay` prop.\n      className: enableShimmer && !removeFadingOverlay ? css(this._classNames.root, listClassName) : listClassName,\n    };\n\n    return (\n      <DetailsList\n        {...restProps}\n        styles={detailsListStyles}\n        items={enableShimmer ? this._shimmerItems : items}\n        isPlaceholderData={enableShimmer}\n        ariaLabelForGrid={(enableShimmer && ariaLabelForShimmer) || ariaLabelForGrid}\n        onRenderMissingItem={this._onRenderShimmerPlaceholder}\n        listProps={newListProps}\n      />\n    );\n  }\n\n  private _onRenderShimmerPlaceholder = (index: number, rowProps: IDetailsRowProps): React.ReactNode => {\n    const { onRenderCustomPlaceholder } = this.props;\n\n    const placeholderElements: React.ReactNode = onRenderCustomPlaceholder\n      ? onRenderCustomPlaceholder(rowProps, index, this._renderDefaultShimmerPlaceholder)\n      : this._renderDefaultShimmerPlaceholder(rowProps);\n\n    return <Shimmer customElementsGroup={placeholderElements} />;\n  };\n\n  private _renderDefaultShimmerPlaceholder = (rowProps: IDetailsRowProps): React.ReactNode => {\n    const { columns, compact, selectionMode, checkboxVisibility, cellStyleProps = DEFAULT_CELL_STYLE_PROPS } = rowProps;\n\n    const { rowHeight, compactRowHeight } = DEFAULT_ROW_HEIGHTS;\n    // 1px to take into account the border-bottom of DetailsRow.\n    const gapHeight: number = compact ? compactRowHeight : rowHeight + 1;\n\n    const shimmerElementsRow: JSX.Element[] = [];\n\n    const showCheckbox = selectionMode !== SelectionMode.none && checkboxVisibility !== CheckboxVisibility.hidden;\n\n    if (showCheckbox) {\n      shimmerElementsRow.push(\n        <ShimmerElementsGroup\n          key={'checkboxGap'}\n          shimmerElements={[{ type: ShimmerElementType.gap, width: '40px', height: gapHeight }]}\n        />,\n      );\n    }\n\n    columns.forEach((column, columnIdx) => {\n      const shimmerElements: IShimmerElement[] = [];\n      const groupWidth: number =\n        cellStyleProps.cellLeftPadding +\n        cellStyleProps.cellRightPadding +\n        column.calculatedWidth! +\n        (column.isPadded ? cellStyleProps.cellExtraRightPadding : 0);\n\n      shimmerElements.push({\n        type: ShimmerElementType.gap,\n        width: cellStyleProps.cellLeftPadding,\n        height: gapHeight,\n      });\n\n      if (column.isIconOnly) {\n        shimmerElements.push({\n          type: ShimmerElementType.line,\n          width: column.calculatedWidth!,\n          height: column.calculatedWidth!,\n        });\n        shimmerElements.push({\n          type: ShimmerElementType.gap,\n          width: cellStyleProps.cellRightPadding,\n          height: gapHeight,\n        });\n      } else {\n        shimmerElements.push({\n          type: ShimmerElementType.line,\n          width: column.calculatedWidth! * SHIMMER_LINE_VS_CELL_WIDTH_RATIO,\n          height: DEFAULT_SHIMMER_HEIGHT,\n        });\n        shimmerElements.push({\n          type: ShimmerElementType.gap,\n          width:\n            cellStyleProps.cellRightPadding +\n            (column.calculatedWidth! - column.calculatedWidth! * SHIMMER_LINE_VS_CELL_WIDTH_RATIO) +\n            (column.isPadded ? cellStyleProps.cellExtraRightPadding : 0),\n          height: gapHeight,\n        });\n      }\n      shimmerElementsRow.push(\n        <ShimmerElementsGroup key={columnIdx} width={`${groupWidth}px`} shimmerElements={shimmerElements} />,\n      );\n    });\n    // When resizing the window from narrow to wider, we need to cover the exposed Shimmer wave\n    // until the column resizing logic is done.\n    shimmerElementsRow.push(\n      <ShimmerElementsGroup\n        key={'endGap'}\n        width={'100%'}\n        shimmerElements={[{ type: ShimmerElementType.gap, width: '100%', height: gapHeight }]}\n      />,\n    );\n    return <div style={{ display: 'flex' }}>{shimmerElementsRow}</div>;\n  };\n}\n"]}
{"version":3,"file":"DetailsColumn.styles.js","sourceRoot":"../src/","sources":["components/DetailsList/DetailsColumn.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { getFocusStyle, getGlobalClassNames, hiddenContentStyle, FontWeights } from '../../Styling';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles';\nimport { getCellStyles } from './DetailsHeader.styles';\nimport type { IDetailsColumnStyleProps, IDetailsColumnStyles } from './DetailsColumn.types';\nimport type { IStyle } from '../../Styling';\n\nconst GlobalClassNames = {\n  isActionable: 'is-actionable',\n  cellIsCheck: 'ms-DetailsHeader-cellIsCheck',\n  collapseButton: 'ms-DetailsHeader-collapseButton',\n  isCollapsed: 'is-collapsed',\n  isAllSelected: 'is-allSelected',\n  isSelectAllHidden: 'is-selectAllHidden',\n  isResizingColumn: 'is-resizingColumn',\n  isEmpty: 'is-empty',\n  isIconVisible: 'is-icon-visible',\n  cellSizer: 'ms-DetailsHeader-cellSizer',\n  isResizing: 'is-resizing',\n  dropHintCircleStyle: 'ms-DetailsHeader-dropHintCircleStyle',\n  dropHintLineStyle: 'ms-DetailsHeader-dropHintLineStyle',\n  cellTitle: 'ms-DetailsHeader-cellTitle',\n  cellName: 'ms-DetailsHeader-cellName',\n  filterChevron: 'ms-DetailsHeader-filterChevron',\n  gripperBarVerticalStyle: 'ms-DetailsColumn-gripperBar',\n  nearIcon: 'ms-DetailsColumn-nearIcon',\n};\n\nexport const getDetailsColumnStyles = (props: IDetailsColumnStyleProps): IDetailsColumnStyles => {\n  const {\n    theme,\n    headerClassName,\n    iconClassName,\n    isActionable,\n    isEmpty,\n    isIconVisible,\n    isPadded,\n    isIconOnly,\n    cellStyleProps = DEFAULT_CELL_STYLE_PROPS,\n    transitionDurationDrag,\n    transitionDurationDrop,\n  } = props;\n\n  const { semanticColors, palette, fonts } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const colors = {\n    iconForegroundColor: semanticColors.bodySubtext,\n    headerForegroundColor: semanticColors.bodyText,\n    headerBackgroundColor: semanticColors.bodyBackground,\n    dropdownChevronForegroundColor: palette.neutralSecondary,\n    resizerColor: palette.neutralTertiaryAlt,\n  };\n\n  const nearIconStyle: IStyle = {\n    color: colors.iconForegroundColor,\n    opacity: 1,\n    paddingLeft: 8,\n  };\n\n  const borderWhileDragging: IStyle = {\n    outline: `1px solid ${palette.themePrimary}`,\n  };\n\n  const borderAfterDragOrDrop: IStyle = {\n    outlineColor: 'transparent',\n  };\n\n  return {\n    root: [\n      getCellStyles(props),\n      fonts.small,\n      isActionable && [\n        classNames.isActionable,\n        {\n          selectors: {\n            ':hover': {\n              color: semanticColors.bodyText,\n              background: semanticColors.listHeaderBackgroundHovered,\n            },\n            ':active': {\n              background: semanticColors.listHeaderBackgroundPressed,\n            },\n          },\n        },\n      ],\n      isEmpty && [\n        classNames.isEmpty,\n        {\n          textOverflow: 'clip',\n        },\n      ],\n      isIconVisible && classNames.isIconVisible,\n      isPadded && {\n        paddingRight: cellStyleProps.cellExtraRightPadding + cellStyleProps.cellRightPadding,\n      },\n      {\n        selectors: {\n          ':hover i[data-icon-name=\"GripperBarVertical\"]': {\n            display: 'block',\n          },\n        },\n      },\n      headerClassName,\n    ],\n\n    gripperBarVerticalStyle: {\n      display: 'none',\n      position: 'absolute',\n      textAlign: 'left',\n      color: palette.neutralTertiary,\n      left: 1,\n    },\n\n    nearIcon: [classNames.nearIcon, nearIconStyle],\n\n    sortIcon: [\n      nearIconStyle,\n      {\n        paddingLeft: 4,\n        position: 'relative',\n        top: 1,\n      },\n    ],\n\n    iconClassName: [\n      {\n        color: colors.iconForegroundColor,\n        opacity: 1,\n      },\n      iconClassName,\n    ],\n\n    filterChevron: [\n      classNames.filterChevron,\n      {\n        color: colors.dropdownChevronForegroundColor,\n        paddingLeft: 6,\n        verticalAlign: 'middle',\n        fontSize: fonts.small.fontSize,\n      },\n    ],\n\n    cellTitle: [\n      classNames.cellTitle,\n      getFocusStyle(theme),\n      {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        alignItems: 'stretch',\n        boxSizing: 'border-box',\n        overflow: 'hidden',\n        padding: `0 ${cellStyleProps.cellRightPadding}px 0 ${cellStyleProps.cellLeftPadding}px`,\n        ...(isIconOnly\n          ? {\n              alignContent: 'flex-end',\n              maxHeight: '100%',\n              flexWrap: 'wrap-reverse',\n            }\n          : {}),\n      },\n    ],\n\n    cellName: [\n      classNames.cellName,\n      {\n        flex: '0 1 auto',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        fontWeight: FontWeights.semibold,\n        fontSize: fonts.medium.fontSize,\n      },\n      isIconOnly && {\n        selectors: {\n          [`.${classNames.nearIcon}`]: {\n            paddingLeft: 0,\n          },\n        },\n      },\n    ],\n\n    cellTooltip: {\n      display: 'block',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n    },\n\n    accessibleLabel: hiddenContentStyle,\n\n    borderWhileDragging: borderWhileDragging,\n\n    noBorderWhileDragging: [borderAfterDragOrDrop, { transition: `outline ${transitionDurationDrag}ms ease` }],\n\n    borderAfterDropping: borderWhileDragging,\n\n    noBorderAfterDropping: [borderAfterDragOrDrop, { transition: `outline  ${transitionDurationDrop}ms ease` }],\n  };\n};\n"]}
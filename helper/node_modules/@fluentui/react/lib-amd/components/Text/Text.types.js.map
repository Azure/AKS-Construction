{"version":3,"file":"Text.types.js","sourceRoot":"../src/","sources":["components/Text/Text.types.tsx"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport type {\n  IComponentStyles,\n  IHTMLSlot,\n  ISlotProp,\n  IComponent,\n  IStyleableComponentProps,\n  ISlottableProps,\n} from '@fluentui/foundation-legacy';\nimport type { IFontStyles } from '../../Styling';\n\n/**\n * {@docCategory Text}\n */\nexport type ITextComponent = IComponent<ITextProps, ITextTokens, ITextStyles>;\n\n// The following two types are redundant with ITextComponent but are needed until TS function return widening issue\n// is resolved: https://github.com/Microsoft/TypeScript/issues/241\n// For now, these helper types can be used to provide return type safety when specifying tokens and styles functions.\n\n/**\n * {@docCategory Text}\n */\nexport type ITextTokenReturnType = ReturnType<Extract<ITextComponent['tokens'], Function>>;\n\n/**\n * {@docCategory Text}\n */\nexport type ITextStylesReturnType = ReturnType<Extract<ITextComponent['styles'], Function>>;\n\n/**\n * {@docCategory Text}\n */\nexport type ITextSlot = ISlotProp<ITextProps, string>;\n\n/**\n * {@docCategory Text}\n */\nexport interface ITextSlots {\n  root?: IHTMLSlot;\n}\n\n/**\n * Inputs to the component\n * {@docCategory Text}\n */\nexport interface ITextProps\n  extends ISlottableProps<ITextSlots>,\n    IStyleableComponentProps<ITextProps, ITextTokens, ITextStyles>,\n    React.HTMLAttributes<HTMLElement> {\n  /**\n   * Optionally render the component as another component type or primitive.\n   */\n  as?: React.ElementType<React.HTMLAttributes<HTMLElement>>;\n\n  /**\n   * Optional font type for Text.\n   */\n  variant?: keyof IFontStyles;\n\n  /**\n   * Whether the text is displayed as a block element.\n   *\n   * Note that in order for ellipsis on overflow to work properly,\n   * `block` and `nowrap` should be set to true.\n   */\n  block?: boolean;\n\n  /**\n   * Whether the text is not wrapped.\n   *\n   * Note that in order for ellipsis on overflow to work properly,\n   * `block` and `nowrap` should be set to true.\n   */\n  nowrap?: boolean;\n}\n\n/**\n * {@docCategory Text}\n */\nexport interface ITextTokens {}\n\n/**\n * {@docCategory Text}\n */\nexport type ITextStyles = IComponentStyles<ITextSlots>;\n"]}
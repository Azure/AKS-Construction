{"version":3,"file":"SearchBox.base.js","sourceRoot":"../src/","sources":["components/SearchBox/SearchBox.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { KeyCodes, classNamesFunction, getNativeProps, inputProperties } from '../../Utilities';\nimport { useControllableValue, useId, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport { IconButton } from '../../Button';\nimport { Icon } from '../../Icon';\nimport type { ISearchBoxProps, ISearchBoxStyleProps, ISearchBoxStyles, ISearchBox } from './SearchBox.types';\nimport type { IButtonProps, IButtonStyles } from '../../Button';\nimport type { IIconProps } from '../../Icon';\n\nconst COMPONENT_NAME = 'SearchBox';\nconst iconButtonStyles: Partial<IButtonStyles> = { root: { height: 'auto' }, icon: { fontSize: '12px' } };\nconst iconButtonProps: IIconProps = { iconName: 'Clear' };\nconst defaultClearButtonProps: IButtonProps = { ariaLabel: 'Clear text' };\n\nconst getClassNames = classNamesFunction<ISearchBoxStyleProps, ISearchBoxStyles>();\n\nconst useComponentRef = (\n  componentRef: React.Ref<ISearchBox> | undefined,\n  inputElementRef: React.RefObject<HTMLInputElement>,\n  hasFocus: boolean,\n) => {\n  React.useImperativeHandle(\n    componentRef,\n    () => ({\n      focus: () => inputElementRef.current?.focus(),\n      hasFocus: () => hasFocus,\n    }),\n    [inputElementRef, hasFocus],\n  );\n};\n\nexport const SearchBoxBase: React.FunctionComponent<ISearchBoxProps> = React.forwardRef<\n  HTMLDivElement,\n  ISearchBoxProps\n>((props, forwardedRef) => {\n  const {\n    ariaLabel,\n    className,\n    defaultValue = '',\n    disabled,\n    underlined,\n    styles,\n    // eslint-disable-next-line deprecation/deprecation\n    labelText,\n    // eslint-disable-next-line deprecation/deprecation\n    placeholder = labelText,\n    theme,\n    clearButtonProps = defaultClearButtonProps,\n    disableAnimation = false,\n    showIcon = false,\n    onClear: customOnClear,\n    onBlur: customOnBlur,\n    onEscape: customOnEscape,\n    onSearch: customOnSearch,\n    onKeyDown: customOnKeyDown,\n    iconProps,\n    role,\n    onChange,\n    // eslint-disable-next-line deprecation/deprecation\n    onChanged,\n  } = props;\n\n  const [hasFocus, setHasFocus] = React.useState(false);\n\n  const prevChangeTimestamp = React.useRef<number | undefined>();\n  const [uncastValue, setValue] = useControllableValue(\n    props.value,\n    defaultValue,\n    (ev: React.ChangeEvent<HTMLInputElement> | undefined, newValue: string) => {\n      if (ev && ev.timeStamp === prevChangeTimestamp.current) {\n        // For historical reasons, SearchBox handles both onInput and onChange (we can't modify this\n        // outside a major version due to potential to break partners' tests and possibly apps).\n        // Only call props.onChange for one of the events.\n        return;\n      }\n      prevChangeTimestamp.current = ev?.timeStamp;\n      onChange?.(ev, newValue);\n      onChanged?.(newValue);\n    },\n  );\n  const value = String(uncastValue);\n\n  const rootElementRef = React.useRef<HTMLDivElement>(null);\n  const inputElementRef = React.useRef<HTMLInputElement>(null);\n  const mergedRootRef = useMergedRefs(rootElementRef, forwardedRef);\n  const id = useId(COMPONENT_NAME, props.id);\n\n  const { onClick: customOnClearClick } = clearButtonProps;\n\n  const classNames = getClassNames(styles!, {\n    theme: theme!,\n    className,\n    underlined,\n    hasFocus,\n    disabled,\n    hasInput: value.length > 0,\n    disableAnimation,\n    showIcon,\n  });\n\n  const nativeProps = getNativeProps<React.InputHTMLAttributes<HTMLInputElement>>(props, inputProperties, [\n    'className',\n    'placeholder',\n    'onFocus',\n    'onBlur',\n    'value',\n    'role',\n  ]);\n\n  const onClear = React.useCallback(\n    (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement> | React.KeyboardEvent<HTMLElement>) => {\n      customOnClear?.(ev);\n      if (!ev.defaultPrevented) {\n        setValue('');\n        inputElementRef.current?.focus();\n        ev.stopPropagation();\n        ev.preventDefault();\n      }\n    },\n    [customOnClear, setValue],\n  );\n\n  const onClearClick = React.useCallback(\n    (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => {\n      customOnClearClick?.(ev);\n      if (!ev.defaultPrevented) {\n        onClear(ev);\n      }\n    },\n    [customOnClearClick, onClear],\n  );\n\n  const onFocusCapture = (ev: React.FocusEvent<HTMLElement>) => {\n    setHasFocus(true);\n    props.onFocus?.(ev as React.FocusEvent<HTMLInputElement>);\n  };\n\n  const onClickFocus = () => {\n    if (inputElementRef.current) {\n      inputElementRef.current.focus();\n      inputElementRef.current.selectionStart = inputElementRef.current.selectionEnd = 0;\n    }\n  };\n\n  const onBlur = React.useCallback(\n    (ev: React.FocusEvent<HTMLInputElement>): void => {\n      setHasFocus(false);\n      customOnBlur?.(ev);\n    },\n    [customOnBlur],\n  );\n\n  const onInputChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(ev.target.value, ev);\n  };\n\n  const onKeyDown = (ev: React.KeyboardEvent<HTMLInputElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    switch (ev.which) {\n      case KeyCodes.escape:\n        customOnEscape?.(ev);\n        // Only call onClear if the search box has a value to clear. Otherwise, allow the Esc key\n        // to propagate from the empty search box to a parent element such as a dialog, etc.\n        if (value && !ev.defaultPrevented) {\n          onClear(ev);\n        }\n        break;\n\n      case KeyCodes.enter:\n        if (customOnSearch) {\n          customOnSearch(value);\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n        break;\n\n      default:\n        // REVIEW: Why aren't we calling customOnKeyDown for Escape or Enter?\n        customOnKeyDown?.(ev);\n        // REVIEW: Why are we calling stopPropagation if customOnKeyDown called preventDefault?\n        // customOnKeyDown should call stopPropagation if it needs it.\n        if (ev.defaultPrevented) {\n          ev.stopPropagation();\n        }\n        break;\n    }\n  };\n\n  useDebugWarning(props);\n  useComponentRef(props.componentRef, inputElementRef, hasFocus);\n\n  return (\n    <div role={role} ref={mergedRootRef} className={classNames.root} onFocusCapture={onFocusCapture}>\n      <div className={classNames.iconContainer} onClick={onClickFocus} aria-hidden>\n        <Icon iconName=\"Search\" {...iconProps} className={classNames.icon} />\n      </div>\n      <input\n        {...nativeProps}\n        id={id}\n        className={classNames.field}\n        placeholder={placeholder}\n        onChange={onInputChange}\n        onInput={onInputChange}\n        onBlur={onBlur}\n        onKeyDown={onKeyDown}\n        value={value}\n        disabled={disabled}\n        role=\"searchbox\"\n        aria-label={ariaLabel}\n        ref={inputElementRef}\n      />\n      {value!.length > 0 && (\n        <div className={classNames.clearButton}>\n          <IconButton\n            onBlur={onBlur}\n            styles={iconButtonStyles}\n            iconProps={iconButtonProps}\n            {...clearButtonProps}\n            onClick={onClearClick}\n          />\n        </div>\n      )}\n    </div>\n  );\n});\nSearchBoxBase.displayName = COMPONENT_NAME;\n\nfunction useDebugWarning(props: ISearchBoxProps) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: COMPONENT_NAME,\n      props,\n      deprecations: { labelText: 'placeholder' },\n    });\n  }\n}\n"]}
{"version":3,"file":"GroupedList.base.js","sourceRoot":"../src/","sources":["components/GroupedList/GroupedList.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { initializeComponentRef, classNamesFunction, KeyCodes, getRTLSafeKeyCode, css } from '../../Utilities';\nimport { GroupedListSection } from './GroupedListSection';\nimport { List, ScrollToMode } from '../../List';\nimport { SelectionMode } from '../../Selection';\nimport { DEFAULT_ROW_HEIGHTS } from '../DetailsList/DetailsRow.styles';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport type {\n  IGroupedList,\n  IGroupedListProps,\n  IGroup,\n  IGroupedListStyleProps,\n  IGroupedListStyles,\n} from './GroupedList.types';\nimport type { IListProps } from '../../List';\nimport type { IGroupHeaderProps } from './GroupHeader';\nimport type { IGroupShowAllProps } from './GroupShowAll.styles';\nimport type { IGroupFooterProps } from './GroupFooter.types';\n\nconst getClassNames = classNamesFunction<IGroupedListStyleProps, IGroupedListStyles>();\nconst { rowHeight: ROW_HEIGHT, compactRowHeight: COMPACT_ROW_HEIGHT } = DEFAULT_ROW_HEIGHTS;\n\nexport interface IGroupedListState {\n  selectionMode?: IGroupedListProps['selectionMode'];\n  compact?: IGroupedListProps['compact'];\n  groups?: IGroup[];\n  items?: IGroupedListProps['items'];\n  listProps?: IGroupedListProps['listProps'];\n  version: {};\n}\n\nexport class GroupedListBase extends React.Component<IGroupedListProps, IGroupedListState> implements IGroupedList {\n  public static defaultProps = {\n    selectionMode: SelectionMode.multiple,\n    isHeaderVisible: true,\n    groupProps: {},\n    compact: false,\n  };\n\n  private _classNames: IProcessedStyleSet<IGroupedListStyles>;\n\n  private _list = React.createRef<List>();\n\n  private _isSomeGroupExpanded: boolean;\n\n  public static getDerivedStateFromProps(\n    nextProps: IGroupedListProps,\n    previousState: IGroupedListState,\n  ): IGroupedListState {\n    const { groups, selectionMode, compact, items, listProps } = nextProps;\n    const listVersion = listProps && listProps.version;\n\n    let nextState = {\n      ...previousState,\n      selectionMode,\n      compact,\n      groups,\n      listProps,\n      items,\n    };\n\n    let shouldForceUpdates = false;\n\n    const previousListVersion = previousState.listProps && previousState.listProps.version;\n\n    if (\n      listVersion !== previousListVersion ||\n      items !== previousState.items ||\n      groups !== previousState.groups ||\n      selectionMode !== previousState.selectionMode ||\n      compact !== previousState.compact\n    ) {\n      // If there are any props not passed explicitly to `List` which have an impact on the behavior of `onRenderCell`,\n      // these need to 'force-update' this component by revving the version. Otherwise, the List might render with stale\n      // data.\n      shouldForceUpdates = true;\n    }\n\n    if (shouldForceUpdates) {\n      nextState = {\n        ...nextState,\n        version: {},\n      };\n    }\n\n    return nextState;\n  }\n\n  constructor(props: IGroupedListProps) {\n    super(props);\n\n    initializeComponentRef(this);\n\n    this._isSomeGroupExpanded = this._computeIsSomeGroupExpanded(props.groups);\n\n    const { listProps: { version = {} } = {} } = props;\n\n    this.state = {\n      groups: props.groups,\n      items: props.items,\n      listProps: props.listProps,\n      version,\n    };\n  }\n\n  public scrollToIndex(index: number, measureItem?: (itemIndex: number) => number, scrollToMode?: ScrollToMode): void {\n    if (this._list.current) {\n      this._list.current.scrollToIndex(index, measureItem, scrollToMode);\n    }\n  }\n\n  public getStartItemIndexInView(): number {\n    return this._list.current!.getStartItemIndexInView() || 0;\n  }\n\n  public componentDidMount() {\n    const { groupProps, groups = [] } = this.props;\n\n    if (groupProps && groupProps.isAllGroupsCollapsed) {\n      this._setGroupsCollapsedState(groups, groupProps.isAllGroupsCollapsed);\n    }\n  }\n\n  public render(): JSX.Element {\n    const {\n      className,\n      usePageCache,\n      onShouldVirtualize,\n      theme,\n      role = 'treegrid',\n      styles,\n      compact,\n      focusZoneProps = {},\n      rootListProps = {},\n    } = this.props;\n    const { groups, version } = this.state;\n\n    this._classNames = getClassNames(styles, {\n      theme: theme!,\n      className,\n      compact: compact,\n    });\n\n    const { shouldEnterInnerZone = this._isInnerZoneKeystroke } = focusZoneProps;\n\n    return (\n      <FocusZone\n        direction={FocusZoneDirection.vertical}\n        data-automationid=\"GroupedList\"\n        data-is-scrollable=\"false\"\n        role=\"presentation\"\n        {...focusZoneProps}\n        shouldEnterInnerZone={shouldEnterInnerZone}\n        className={css(this._classNames.root, focusZoneProps.className)}\n      >\n        {!groups ? (\n          this._renderGroup(undefined, 0)\n        ) : (\n          <List\n            ref={this._list}\n            role={role}\n            items={groups}\n            onRenderCell={this._renderGroup}\n            getItemCountForPage={this._returnOne}\n            getPageHeight={this._getPageHeight}\n            getPageSpecification={this._getPageSpecification}\n            usePageCache={usePageCache}\n            onShouldVirtualize={onShouldVirtualize}\n            version={version}\n            {...rootListProps}\n          />\n        )}\n      </FocusZone>\n    );\n  }\n\n  public forceUpdate() {\n    super.forceUpdate();\n    this._forceListUpdates();\n  }\n\n  public toggleCollapseAll(allCollapsed: boolean): void {\n    const { groups = [] } = this.state;\n    const { groupProps } = this.props;\n    const onToggleCollapseAll = groupProps && groupProps.onToggleCollapseAll;\n\n    if (groups.length > 0) {\n      if (onToggleCollapseAll) {\n        onToggleCollapseAll(allCollapsed);\n      }\n\n      this._setGroupsCollapsedState(groups, allCollapsed);\n\n      this._updateIsSomeGroupExpanded();\n\n      this.forceUpdate();\n    }\n  }\n\n  private _setGroupsCollapsedState(groups: IGroup[], isCollapsed: boolean): void {\n    for (let groupIndex = 0; groupIndex < groups.length; groupIndex++) {\n      groups[groupIndex].isCollapsed = isCollapsed;\n    }\n  }\n\n  private _renderGroup = (group: IGroup | undefined, groupIndex: number): React.ReactNode => {\n    const {\n      dragDropEvents,\n      dragDropHelper,\n      eventsToRegister,\n      groupProps,\n      items,\n      listProps,\n      onRenderCell,\n      selectionMode,\n      selection,\n      viewport,\n      onShouldVirtualize,\n      groups,\n      compact,\n    } = this.props;\n\n    // override group header/footer props as needed\n    const dividerProps = {\n      onToggleSelectGroup: this._onToggleSelectGroup,\n      onToggleCollapse: this._onToggleCollapse,\n      onToggleSummarize: this._onToggleSummarize,\n    };\n\n    const headerProps: IGroupHeaderProps = { ...groupProps!.headerProps, ...dividerProps };\n    const showAllProps: IGroupShowAllProps = { ...groupProps!.showAllProps, ...dividerProps };\n    const footerProps: IGroupFooterProps = { ...groupProps!.footerProps, ...dividerProps };\n    const groupNestingDepth = this._getGroupNestingDepth();\n\n    if (!groupProps!.showEmptyGroups && group && group.count === 0) {\n      return null;\n    }\n\n    const finalListProps: IListProps = {\n      ...(listProps || {}),\n      version: this.state.version,\n    };\n\n    return (\n      <GroupedListSection\n        key={this._getGroupKey(group, groupIndex)}\n        dragDropEvents={dragDropEvents}\n        dragDropHelper={dragDropHelper}\n        eventsToRegister={eventsToRegister}\n        footerProps={footerProps}\n        getGroupItemLimit={groupProps && groupProps.getGroupItemLimit}\n        group={group}\n        groupIndex={groupIndex}\n        groupNestingDepth={groupNestingDepth}\n        groupProps={groupProps}\n        headerProps={headerProps}\n        listProps={finalListProps}\n        items={items}\n        onRenderCell={onRenderCell}\n        onRenderGroupHeader={groupProps!.onRenderHeader}\n        onRenderGroupShowAll={groupProps!.onRenderShowAll}\n        onRenderGroupFooter={groupProps!.onRenderFooter}\n        selectionMode={selectionMode}\n        selection={selection}\n        showAllProps={showAllProps}\n        viewport={viewport}\n        onShouldVirtualize={onShouldVirtualize}\n        groupedListClassNames={this._classNames}\n        groups={groups}\n        compact={compact}\n      />\n    );\n  };\n\n  private _returnOne(): number {\n    return 1;\n  }\n\n  private _getDefaultGroupItemLimit = (group: IGroup): number => {\n    return group.children && group.children.length > 0 ? group.children.length : group.count;\n  };\n\n  private _getGroupItemLimit = (group: IGroup): number => {\n    const { groupProps } = this.props;\n    const getGroupItemLimit =\n      groupProps && groupProps.getGroupItemLimit ? groupProps.getGroupItemLimit : this._getDefaultGroupItemLimit;\n\n    return getGroupItemLimit(group);\n  };\n\n  private _getGroupHeight = (group: IGroup): number => {\n    const rowHeight = this.props.compact ? COMPACT_ROW_HEIGHT : ROW_HEIGHT;\n\n    return rowHeight + (group.isCollapsed ? 0 : rowHeight * this._getGroupItemLimit(group));\n  };\n\n  private _getPageHeight: IListProps['getPageHeight'] = (itemIndex: number) => {\n    const { groups } = this.state;\n    const { getGroupHeight = this._getGroupHeight } = this.props;\n    const pageGroup = groups && groups[itemIndex];\n\n    if (pageGroup) {\n      return getGroupHeight(pageGroup, itemIndex);\n    } else {\n      return 0;\n    }\n  };\n\n  private _getGroupKey(group: IGroup | undefined, index: number): string {\n    return 'group-' + (group && group.key ? group.key : String(index));\n  }\n\n  private _getGroupNestingDepth(): number {\n    const { groups } = this.state;\n    let level = 0;\n    let groupsInLevel = groups;\n\n    while (groupsInLevel && groupsInLevel.length > 0) {\n      level++;\n      groupsInLevel = groupsInLevel[0].children;\n    }\n\n    return level;\n  }\n\n  private _onToggleCollapse = (group: IGroup): void => {\n    const { groupProps } = this.props;\n    const onToggleCollapse = groupProps && groupProps.headerProps && groupProps.headerProps.onToggleCollapse;\n\n    if (group) {\n      if (onToggleCollapse) {\n        onToggleCollapse(group);\n      }\n\n      group.isCollapsed = !group.isCollapsed;\n      this._updateIsSomeGroupExpanded();\n      this.forceUpdate();\n    }\n  };\n\n  private _onToggleSelectGroup = (group: IGroup): void => {\n    const { selection, selectionMode } = this.props;\n\n    if (group && selection && selectionMode === SelectionMode.multiple) {\n      selection.toggleRangeSelected(group.startIndex, group.count);\n    }\n  };\n\n  private _isInnerZoneKeystroke = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\n    // eslint-disable-next-line deprecation/deprecation\n    return ev.which === getRTLSafeKeyCode(KeyCodes.right);\n  };\n\n  private _forceListUpdates(groups?: IGroup[]): void {\n    this.setState({\n      version: {},\n    });\n  }\n\n  private _onToggleSummarize = (group: IGroup): void => {\n    const { groupProps } = this.props;\n    const onToggleSummarize = groupProps && groupProps.showAllProps && groupProps.showAllProps.onToggleSummarize;\n\n    if (onToggleSummarize) {\n      onToggleSummarize(group);\n    } else {\n      if (group) {\n        group.isShowingAll = !group.isShowingAll;\n      }\n\n      this.forceUpdate();\n    }\n  };\n\n  private _getPageSpecification = (\n    itemIndex: number,\n  ): {\n    key?: string;\n  } => {\n    const groups = this.state.groups;\n    const pageGroup = groups && groups[itemIndex];\n    return {\n      key: pageGroup && pageGroup.key,\n    };\n  };\n\n  private _computeIsSomeGroupExpanded(groups: IGroup[] | undefined): boolean {\n    return !!(\n      groups &&\n      groups.some(group => (group.children ? this._computeIsSomeGroupExpanded(group.children) : !group.isCollapsed))\n    );\n  }\n\n  private _updateIsSomeGroupExpanded(): void {\n    const { groups } = this.state;\n    const { onGroupExpandStateChanged } = this.props;\n\n    const newIsSomeGroupExpanded = this._computeIsSomeGroupExpanded(groups);\n    if (this._isSomeGroupExpanded !== newIsSomeGroupExpanded) {\n      if (onGroupExpandStateChanged) {\n        onGroupExpandStateChanged(newIsSomeGroupExpanded);\n      }\n      this._isSomeGroupExpanded = newIsSomeGroupExpanded;\n    }\n  }\n}\n"]}
import * as React from 'react';
import { ScrollToMode } from '../../List';
import type { IGroupedList, IGroup } from './GroupedList.types';
import type { IGroupedListV2Props } from './GroupedListV2.types';
export interface IGroupedListV2State {
    selectionMode?: IGroupedListV2Props['selectionMode'];
    compact?: IGroupedListV2Props['compact'];
    groups?: IGroup[];
    items?: IGroupedListV2Props['items'];
    listProps?: IGroupedListV2Props['listProps'];
    version: {};
    groupExpandedVersion: {};
}
export declare const GroupedListV2FC: React.FC<IGroupedListV2Props>;
export declare class GroupedListV2Wrapper extends React.Component<IGroupedListV2Props, IGroupedListV2State> implements IGroupedList {
    static displayName: string;
    private _list;
    static getDerivedStateFromProps(nextProps: IGroupedListV2Props, previousState: IGroupedListV2State): IGroupedListV2State;
    constructor(props: IGroupedListV2Props);
    scrollToIndex(index: number, measureItem?: (itemIndex: number) => number, scrollToMode?: ScrollToMode): void;
    getStartItemIndexInView(): number;
    render(): JSX.Element;
    forceUpdate(): void;
    toggleCollapseAll(allCollapsed: boolean): void;
    private _forceListUpdate;
}

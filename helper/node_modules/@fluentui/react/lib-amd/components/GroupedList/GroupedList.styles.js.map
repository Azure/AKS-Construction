{"version":3,"file":"GroupedList.styles.js","sourceRoot":"../src/","sources":["components/GroupedList/GroupedList.styles.ts"],"names":[],"mappings":";;;;IAGA,IAAM,gBAAgB,GAAG;QACvB,IAAI,EAAE,gBAAgB;QACtB,OAAO,EAAE,yBAAyB;QAClC,KAAK,EAAE,sBAAsB;QAC7B,IAAI,EAAE,SAAS;QACf,QAAQ,EAAE,cAAc;KACzB,CAAC;IAEF,IAAM,OAAO,GAAG;QACd,aAAa,EAAE,0CAA0C;KAC1D,CAAC;IAEK,IAAM,SAAS,GAAG,UAAC,KAA6B;;QAC7C,IAAA,KAAK,GAAyB,KAAK,MAA9B,EAAE,SAAS,GAAc,KAAK,UAAnB,EAAE,OAAO,GAAK,KAAK,QAAV,CAAW;QACpC,IAAA,OAAO,GAAK,KAAK,QAAV,CAAW;QAC1B,IAAM,UAAU,GAAG,6BAAmB,CAAC,gBAAgB,EAAE,KAAM,CAAC,CAAC;QAEjE,OAAO;YACL,IAAI,EAAE;gBACJ,UAAU,CAAC,IAAI;gBACf,KAAK,CAAC,KAAK,CAAC,KAAK;gBACjB;oBACE,QAAQ,EAAE,UAAU;oBACpB,SAAS;wBACP,GAAC,MAAI,UAAU,CAAC,QAAU,IAAG;4BAC3B,SAAS,EAAE,EAAE,EAAE,wCAAwC;yBACxD;2BACF;iBACF;gBACD,OAAO,IAAI;oBACT,UAAU,CAAC,OAAO;oBAClB;wBACE,SAAS;4BACP,GAAC,MAAI,UAAU,CAAC,QAAU,IAAG;gCAC3B,SAAS,EAAE,EAAE,EAAE,wCAAwC;6BACxD;+BACF;qBACF;iBACF;gBACD,SAAS;aACV;YACD,KAAK,EAAE;gBACL,UAAU,CAAC,KAAK;gBAChB;oBACE,UAAU,EAAE,sBAAoB,4BAAkB,CAAC,cAAc,SAAI,OAAO,CAAC,aAAe;iBAC7F;aACF;YACD,eAAe,EAAE;gBACf,eAAe,EAAE,OAAO,CAAC,YAAY;aACtC;SACF,CAAC;IACJ,CAAC,CAAC;IAvCW,QAAA,SAAS,aAuCpB","sourcesContent":["import { getGlobalClassNames, AnimationVariables } from '../../Styling';\nimport type { IGroupedListStyleProps, IGroupedListStyles } from './GroupedList.types';\n\nconst GlobalClassNames = {\n  root: 'ms-GroupedList',\n  compact: 'ms-GroupedList--Compact',\n  group: 'ms-GroupedList-group',\n  link: 'ms-Link',\n  listCell: 'ms-List-cell',\n};\n\nconst beziers = {\n  easeInOutSine: 'cubic-bezier(0.445, 0.050, 0.550, 0.950)',\n};\n\nexport const getStyles = (props: IGroupedListStyleProps): IGroupedListStyles => {\n  const { theme, className, compact } = props;\n  const { palette } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme!);\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.small,\n      {\n        position: 'relative',\n        selectors: {\n          [`.${classNames.listCell}`]: {\n            minHeight: 38, // be consistent with DetailsList styles\n          },\n        },\n      },\n      compact && [\n        classNames.compact,\n        {\n          selectors: {\n            [`.${classNames.listCell}`]: {\n              minHeight: 32, // be consistent with DetailsList styles\n            },\n          },\n        },\n      ],\n      className,\n    ],\n    group: [\n      classNames.group,\n      {\n        transition: `background-color ${AnimationVariables.durationValue2} ${beziers.easeInOutSine}`,\n      },\n    ],\n    groupIsDropping: {\n      backgroundColor: palette.neutralLight,\n    },\n  };\n};\n"]}
{"version":3,"file":"ExtendedSelectedItem.js","sourceRoot":"../src/","sources":["components/SelectedItemsList/SelectedPeopleList/Items/ExtendedSelectedItem.tsx"],"names":[],"mappings":";;;;IAOA,IAAM,MAAM,GAAQ,YAAY,CAAC;IAMjC;QAA0C,gDAAiE;QAGzG,8BAAY,KAA+B;YAA3C,YACE,kBAAM,KAAK,CAAC,SAKb;YARS,aAAO,GAAG,KAAK,CAAC,SAAS,EAAkB,CAAC;YAKpD,kCAAsB,CAAC,KAAI,CAAC,CAAC;YAC7B,iDAAiD;YACjD,KAAI,CAAC,KAAK,GAAG,EAAE,qBAAqB,EAAE,KAAK,EAAE,CAAC;;QAChD,CAAC;QAEM,qCAAM,GAAb;;YACQ,IAAA,KAA+E,IAAI,CAAC,KAAK,EAAvF,IAAI,UAAA,EAAE,YAAY,kBAAA,EAAE,YAAY,kBAAA,EAAE,qBAAqB,2BAAA,EAAE,KAAK,WAAA,EAAE,QAAQ,cAAe,CAAC;YAChG,IAAM,MAAM,GAAG,iBAAK,EAAE,CAAC;YACvB,OAAO,CACL,6BACE,GAAG,EAAE,IAAI,CAAC,OAAO,EACjB,SAAS,EAAE,eAAG,CACZ,4BAA4B,EAC5B,MAAM,CAAC,gBAAgB,YACrB,GAAC,cAAc,GAAG,MAAM,CAAC,0BAA0B,IAAG,QAAQ,iBAC9D,GAAC,aAAa,GAAG,MAAM,CAAC,eAAe,IAAG,CAAC,IAAI,CAAC,OAAO,MAC1D,uBACkB,IAAI,2BACA,IAAI,0BACL,KAAK,EAC3B,IAAI,EAAE,UAAU,qBACC,sBAAsB,GAAG,MAAM;gBAEhD,6BAAK,MAAM,EAAE,CAAC,IAAI,CAAC,SAAS,IAAI,YAAY,KAAK,SAAS;oBACxD,oBAAC,mBAAU,IACT,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,EAC9C,SAAS,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAC3D,SAAS,EAAE,eAAG,CAAC,4BAA4B,EAAE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,YAAY,CAAC,EACtF,SAAS,EAAE,qBAAqB,GAChC,CACE;gBACN,6BAAK,SAAS,EAAE,eAAG,CAAC,MAAM,CAAC,cAAc,CAAC;oBACxC,6BAAK,SAAS,EAAE,eAAG,CAAC,uBAAuB,EAAE,MAAM,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,sBAAsB,GAAG,MAAM;wBACnG,oBAAC,iBAAO,uBACF,IAAI,IACR,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAC1C,mBAAmB,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,EACjD,IAAI,EAAE,qBAAW,CAAC,MAAM,IACxB,CACE;oBACN,oBAAC,mBAAU,IACT,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,EAC9C,SAAS,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAC9D,SAAS,EAAE,eAAG,CAAC,4BAA4B,EAAE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,YAAY,CAAC,EACtF,SAAS,EAAE,qBAAqB,GAChC,CACE,CACF,CACP,CAAC;QACJ,CAAC;QAEO,iDAAkB,GAA1B,UACE,MAAgC;YAEhC,OAAO,UAAC,EAA2D;gBACjE,EAAE,CAAC,eAAe,EAAE,CAAC;gBACrB,EAAE,CAAC,cAAc,EAAE,CAAC;gBACpB,IAAI,MAAM,EAAE;oBACV,MAAM,EAAE,CAAC;iBACV;YACH,CAAC,CAAC;QACJ,CAAC;QACH,2BAAC;IAAD,CAAC,AApED,CAA0C,KAAK,CAAC,SAAS,GAoExD;IApEY,oDAAoB","sourcesContent":["import * as React from 'react';\nimport { IconButton } from '../../../../Button';\nimport { css, getId, initializeComponentRef } from '../../../../Utilities';\nimport { Persona, PersonaSize } from '../../../../Persona';\nimport * as stylesImport from './ExtendedSelectedItem.scss';\nimport type { ISelectedPeopleItemProps } from '../SelectedPeopleList';\n\nconst styles: any = stylesImport;\n\nexport interface IPeoplePickerItemState {\n  contextualMenuVisible: boolean;\n}\n\nexport class ExtendedSelectedItem extends React.Component<ISelectedPeopleItemProps, IPeoplePickerItemState> {\n  protected persona = React.createRef<HTMLDivElement>();\n\n  constructor(props: ISelectedPeopleItemProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    // eslint-disable-next-line react/no-unused-state\n    this.state = { contextualMenuVisible: false };\n  }\n\n  public render(): JSX.Element {\n    const { item, onExpandItem, onRemoveItem, removeButtonAriaLabel, index, selected } = this.props;\n    const itemId = getId();\n    return (\n      <div\n        ref={this.persona}\n        className={css(\n          'ms-PickerPersona-container',\n          styles.personaContainer,\n          { ['is-selected ' + styles.personaContainerIsSelected]: selected },\n          { ['is-invalid ' + styles.validationError]: !item.isValid },\n        )}\n        data-is-focusable={true}\n        data-is-sub-focuszone={true}\n        data-selection-index={index}\n        role={'listitem'}\n        aria-labelledby={'selectedItemPersona-' + itemId}\n      >\n        <div hidden={!item.canExpand || onExpandItem === undefined}>\n          <IconButton\n            onClick={this._onClickIconButton(onExpandItem)}\n            iconProps={{ iconName: 'Add', style: { fontSize: '14px' } }}\n            className={css('ms-PickerItem-removeButton', styles.expandButton, styles.actionButton)}\n            ariaLabel={removeButtonAriaLabel}\n          />\n        </div>\n        <div className={css(styles.personaWrapper)}>\n          <div className={css('ms-PickerItem-content', styles.itemContent)} id={'selectedItemPersona-' + itemId}>\n            <Persona\n              {...item}\n              onRenderCoin={this.props.renderPersonaCoin}\n              onRenderPrimaryText={this.props.renderPrimaryText}\n              size={PersonaSize.size32}\n            />\n          </div>\n          <IconButton\n            onClick={this._onClickIconButton(onRemoveItem)}\n            iconProps={{ iconName: 'Cancel', style: { fontSize: '14px' } }}\n            className={css('ms-PickerItem-removeButton', styles.removeButton, styles.actionButton)}\n            ariaLabel={removeButtonAriaLabel}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private _onClickIconButton(\n    action: (() => void) | undefined,\n  ): (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => void {\n    return (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>): void => {\n      ev.stopPropagation();\n      ev.preventDefault();\n      if (action) {\n        action();\n      }\n    };\n  }\n}\n"]}
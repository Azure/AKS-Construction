{"version":3,"file":"withContainsFocus.js","sourceRoot":"../src/","sources":["utilities/decorators/withContainsFocus.tsx"],"names":[],"mappings":";;;;IAIA,SAAgB,iBAAiB,CAC/B,iBAAoF;QAEpF;YAAgD,sDAG/C;YAKC,oCAAY,KAAa;gBAAzB,YACE,kBAAM,KAAK,CAAC,SAWb;gBATC,KAAI,CAAC,KAAK,GAAG;oBACX,aAAa,EAAE,KAAK;iBACrB,CAAC;gBAEF,KAAI,CAAC,MAAM,GAAG,IAAI,iBAAK,CAAC,KAAI,CAAC,CAAC;gBAC9B,KAAI,CAAC,wBAAwB,GAAG,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAI,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;gBACjF,KAAI,CAAC,2BAA2B,GAAG,KAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;gBAC/E,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;gBACjD,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;YACjD,CAAC;YAEM,yDAAoB,GAA3B;gBACE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;YACxB,CAAC;YAEM,2CAAM,GAAb;gBACU,IAAA,aAAa,GAAK,IAAI,CAAC,KAAK,cAAf,CAAgB;gBAErC,OAAO,CACL,6BAAK,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,MAAM,EAAE,IAAI,CAAC,WAAW;oBACvD,oBAAC,iBAAiB,qBAChB,GAAG,EAAE,IAAI,CAAC,2BAA2B,EACrC,aAAa,EAAE,aAAa,IACvB,IAAI,CAAC,KAAa,EACvB,CACE,CACP,CAAC;YACJ,CAAC;YAEM,gDAAW,GAAlB;gBACE,IAAI,CAAC,0BAA0B,CAAC,WAAW,EAAE,CAAC;YAChD,CAAC;YAEO,iDAAY,GAApB,UAAqB,EAAoC;gBACvD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAC9B,IAAI,CAAC,wBAAwB,EAAE,CAAC;YAClC,CAAC;YAEO,gDAAW,GAAnB,UAAoB,EAAoC;gBACtD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;gBAC/B,IAAI,CAAC,wBAAwB,EAAE,CAAC;YAClC,CAAC;YAEO,sDAAiB,GAAzB;gBACE,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,KAAK,IAAI,CAAC,iBAAiB,EAAE;oBACvD,IAAI,CAAC,QAAQ,CAAC,EAAE,aAAa,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;iBAC1D;YACH,CAAC;YACH,iCAAC;QAAD,CAAC,AA3DM,CAAyC,6BAAa,GA2D3D;IACJ,CAAC;IA/DD,8CA+DC","sourcesContent":["import * as React from 'react';\nimport { BaseDecorator } from './BaseDecorator';\nimport { Async } from '../../Utilities';\n\nexport function withContainsFocus<TProps extends { containsFocus?: boolean }, S>(\n  ComposedComponent: new (props: TProps, ...args: any[]) => React.Component<TProps, S>,\n): any {\n  return class WithContainsFocusComponent extends BaseDecorator<\n    TProps & { containsFocus?: boolean },\n    { containsFocus?: boolean }\n  > {\n    private _newContainsFocus: boolean;\n    private _delayedSetContainsFocus: () => void;\n    private _async: Async;\n\n    constructor(props: TProps) {\n      super(props);\n\n      this.state = {\n        containsFocus: false,\n      };\n\n      this._async = new Async(this);\n      this._delayedSetContainsFocus = this._async.debounce(this._setContainsFocus, 20);\n      this._updateComposedComponentRef = this._updateComposedComponentRef.bind(this);\n      this._handleFocus = this._handleFocus.bind(this);\n      this._handleBlur = this._handleBlur.bind(this);\n    }\n\n    public componentWillUnmount(): void {\n      this._async.dispose();\n    }\n\n    public render(): JSX.Element {\n      const { containsFocus } = this.state;\n\n      return (\n        <div onFocus={this._handleFocus} onBlur={this._handleBlur}>\n          <ComposedComponent\n            ref={this._updateComposedComponentRef}\n            containsFocus={containsFocus}\n            {...(this.props as any)}\n          />\n        </div>\n      );\n    }\n\n    public forceUpdate(): void {\n      this._composedComponentInstance.forceUpdate();\n    }\n\n    private _handleFocus(ev: React.FocusEvent<HTMLDivElement>): void {\n      this._newContainsFocus = true;\n      this._delayedSetContainsFocus();\n    }\n\n    private _handleBlur(ev: React.FocusEvent<HTMLDivElement>): void {\n      this._newContainsFocus = false;\n      this._delayedSetContainsFocus();\n    }\n\n    private _setContainsFocus(): void {\n      if (this.state.containsFocus !== this._newContainsFocus) {\n        this.setState({ containsFocus: this._newContainsFocus });\n      }\n    }\n  };\n}\n"]}
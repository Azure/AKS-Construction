{"version":3,"file":"DragDropHelper.js","sourceRoot":"../src/","sources":["utilities/dragdrop/DragDropHelper.tsx"],"names":[],"mappings":"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","sourcesContent":["import { EventGroup, getDocument } from '../../Utilities';\nimport type {\n  IDragDropHelper,\n  IDragDropTarget,\n  IDragDropOptions,\n  IDragDropEvent,\n  IDragDropContext,\n} from './interfaces';\nimport type { ISelection } from '../../utilities/selection/interfaces';\n\nconst MOUSEDOWN_PRIMARY_BUTTON = 0; // for mouse down event we are using ev.button property, 0 means left button\nconst MOUSEMOVE_PRIMARY_BUTTON = 1; // for mouse move event we are using ev.buttons property, 1 means left button\n\nexport interface IDragDropHelperParams {\n  selection: ISelection;\n  minimumPixelsForDrag?: number;\n}\n\nexport class DragDropHelper implements IDragDropHelper {\n  private _dragEnterCounts: { [key: string]: number };\n  private _isDragging: boolean;\n  private _dragData: {\n    eventTarget: EventTarget | null;\n    clientX: number;\n    clientY: number;\n    dataTransfer?: DataTransfer;\n    dropTarget?: IDragDropTarget;\n    dragTarget?: IDragDropTarget;\n  } | null;\n  private _selection: ISelection;\n  private _activeTargets: {\n    [key: string]: {\n      target: IDragDropTarget;\n      dispose: () => void;\n    };\n  };\n  private _events: EventGroup;\n  private _lastId: number;\n  private _initialized: boolean;\n\n  constructor(params: IDragDropHelperParams) {\n    this._selection = params.selection;\n    this._dragEnterCounts = {};\n    this._activeTargets = {};\n    this._lastId = 0;\n    // To make this class cheap to create, which allows simplifying some logic elsewhere,\n    // only initialize the event group and global event handlers as needed.\n    this._initialized = false;\n  }\n\n  public dispose(): void {\n    if (this._events) {\n      this._events.dispose();\n    }\n  }\n\n  public subscribe(\n    root: HTMLElement,\n    events: EventGroup,\n    dragDropOptions: IDragDropOptions,\n  ): {\n    key: string;\n    dispose(): void;\n  } {\n    if (!this._initialized) {\n      this._events = new EventGroup(this);\n\n      const doc = getDocument();\n\n      // clear drag data when mouse up, use capture event to ensure it will be run\n      if (doc) {\n        this._events.on(doc.body, 'mouseup', this._onMouseUp.bind(this), true);\n        this._events.on(doc, 'mouseup', this._onDocumentMouseUp.bind(this), true);\n      }\n\n      this._initialized = true;\n    }\n\n    const { key = `${++this._lastId}` } = dragDropOptions;\n\n    const handlers: {\n      callback: (context: IDragDropContext, event?: any) => void;\n      eventName: string;\n    }[] = [];\n\n    let onDragStart: (event: DragEvent) => void;\n    let onDragLeave: (event: DragEvent) => void;\n    let onDragEnter: (event: DragEvent) => void;\n    let onDragEnd: (event: DragEvent) => void;\n    let onDrop: (event: DragEvent) => void;\n    let onDragOver: (event: DragEvent) => void;\n    let onMouseDown: (event: MouseEvent) => void;\n\n    let isDraggable: boolean;\n    let isDroppable: boolean;\n\n    let activeTarget: {\n      target: IDragDropTarget;\n      dispose: () => void;\n    };\n\n    if (dragDropOptions && root) {\n      const { eventMap, context, updateDropState } = dragDropOptions;\n\n      const dragDropTarget: IDragDropTarget = {\n        root: root,\n        options: dragDropOptions,\n        key: key,\n      };\n\n      isDraggable = this._isDraggable(dragDropTarget);\n      isDroppable = this._isDroppable(dragDropTarget);\n\n      if (isDraggable || isDroppable) {\n        if (eventMap) {\n          for (const event of eventMap) {\n            const handler = {\n              callback: event.callback.bind(null, context),\n              eventName: event.eventName,\n            };\n\n            handlers.push(handler);\n\n            this._events.on(root, handler.eventName, handler.callback);\n          }\n        }\n      }\n\n      if (isDroppable) {\n        // If the target is droppable, wire up global event listeners to track drop-related events.\n        onDragLeave = (event: DragEvent) => {\n          if (!(event as IDragDropEvent).isHandled) {\n            (event as IDragDropEvent).isHandled = true;\n            this._dragEnterCounts[key]--;\n            if (this._dragEnterCounts[key] === 0) {\n              updateDropState(false /* isDropping */, event);\n            }\n          }\n        };\n\n        onDragEnter = (event: DragEvent) => {\n          event.preventDefault(); // needed for IE\n          if (!(event as IDragDropEvent).isHandled) {\n            (event as IDragDropEvent).isHandled = true;\n            this._dragEnterCounts[key]++;\n            if (this._dragEnterCounts[key] === 1) {\n              updateDropState(true /* isDropping */, event);\n            }\n          }\n        };\n\n        onDragEnd = (event: DragEvent) => {\n          this._dragEnterCounts[key] = 0;\n          updateDropState(false /* isDropping */, event);\n        };\n\n        onDrop = (event: DragEvent) => {\n          this._dragEnterCounts[key] = 0;\n          updateDropState(false /* isDropping */, event);\n\n          if (dragDropOptions.onDrop) {\n            dragDropOptions.onDrop(dragDropOptions.context.data, event);\n          }\n        };\n\n        onDragOver = (event: DragEvent) => {\n          event.preventDefault();\n          if (dragDropOptions.onDragOver) {\n            dragDropOptions.onDragOver(dragDropOptions.context.data, event);\n          }\n        };\n\n        this._dragEnterCounts[key] = 0;\n\n        // dragenter and dragleave will be fired when hover to the child element\n        // but we only want to change state when enter or leave the current element\n        // use the count to ensure it.\n        events.on(root, 'dragenter', onDragEnter);\n        events.on(root, 'dragleave', onDragLeave);\n        events.on(root, 'dragend', onDragEnd);\n        events.on(root, 'drop', onDrop);\n        events.on(root, 'dragover', onDragOver);\n      }\n\n      if (isDraggable) {\n        // If the target is draggable, wire up local event listeners for mouse events.\n        onMouseDown = this._onMouseDown.bind(this, dragDropTarget);\n        onDragEnd = this._onDragEnd.bind(this, dragDropTarget);\n\n        // We need to add in data so that on Firefox we show the ghost element when dragging\n        onDragStart = (event: DragEvent) => {\n          const options = dragDropOptions;\n          if (options && options.onDragStart) {\n            options.onDragStart(options.context.data, options.context.index, this._selection.getSelection(), event);\n          }\n          this._isDragging = true;\n          if (event.dataTransfer) {\n            event.dataTransfer.setData('id', root.id);\n          }\n        };\n\n        events.on(root, 'dragstart', onDragStart);\n        events.on(root, 'mousedown', onMouseDown);\n        events.on(root, 'dragend', onDragEnd);\n      }\n\n      activeTarget = {\n        target: dragDropTarget,\n        dispose: () => {\n          if (this._activeTargets[key] === activeTarget) {\n            delete this._activeTargets[key];\n          }\n\n          if (root) {\n            for (const handler of handlers) {\n              this._events.off(root, handler.eventName, handler.callback);\n            }\n\n            if (isDroppable) {\n              events.off(root, 'dragenter', onDragEnter);\n              events.off(root, 'dragleave', onDragLeave);\n              events.off(root, 'dragend', onDragEnd);\n              events.off(root, 'dragover', onDragOver);\n              events.off(root, 'drop', onDrop);\n            }\n\n            if (isDraggable) {\n              events.off(root, 'dragstart', onDragStart);\n              events.off(root, 'mousedown', onMouseDown);\n              events.off(root, 'dragend', onDragEnd);\n            }\n          }\n        },\n      };\n\n      this._activeTargets[key] = activeTarget;\n    }\n\n    return {\n      key: key,\n      dispose: () => {\n        if (activeTarget) {\n          activeTarget.dispose();\n        }\n      },\n    };\n  }\n\n  public unsubscribe(root: HTMLElement, key: string): void {\n    const activeTarget = this._activeTargets[key];\n\n    if (activeTarget) {\n      activeTarget.dispose();\n    }\n  }\n\n  private _onDragEnd(target: IDragDropTarget, event: DragEvent): void {\n    const { options } = target;\n    if (options.onDragEnd) {\n      options.onDragEnd(options.context.data, event);\n    }\n  }\n\n  /**\n   * clear drag data when mouse up on body\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    this._isDragging = false;\n    if (this._dragData) {\n      for (const key of Object.keys(this._activeTargets)) {\n        const activeTarget = this._activeTargets[key];\n\n        if (activeTarget.target.root) {\n          this._events.off(activeTarget.target.root, 'mousemove');\n          this._events.off(activeTarget.target.root, 'mouseleave');\n        }\n      }\n\n      if (this._dragData.dropTarget) {\n        // raise dragleave event to let dropTarget know it need to remove dropping style\n        EventGroup.raise(this._dragData.dropTarget.root, 'dragleave');\n        EventGroup.raise(this._dragData.dropTarget.root, 'drop');\n      }\n    }\n    this._dragData = null;\n  }\n\n  /**\n   * clear drag data when mouse up outside of the document\n   */\n  private _onDocumentMouseUp(event: MouseEvent): void {\n    const doc = getDocument();\n\n    if (doc && event.target === doc.documentElement) {\n      this._onMouseUp(event);\n    }\n  }\n\n  /**\n   * when mouse move over a new drop target while dragging some items,\n   * fire dragleave on the old target and fire dragenter to the new target\n   * The target will handle style change on dragenter and dragleave events.\n   */\n  private _onMouseMove(target: IDragDropTarget, event: MouseEvent): void {\n    const {\n      // use buttons property here since ev.button in some edge case is not updating well during the move.\n      // but firefox doesn't support it, so we set the default value when it is not defined.\n      buttons = MOUSEMOVE_PRIMARY_BUTTON,\n    } = event;\n\n    if (this._dragData && buttons !== MOUSEMOVE_PRIMARY_BUTTON) {\n      // cancel mouse down event and return early when the primary button is not pressed\n      this._onMouseUp(event);\n      return;\n    }\n\n    const { root, key } = target;\n    if (this._isDragging) {\n      if (this._isDroppable(target)) {\n        // we can have nested drop targets in the DOM, like a folder inside a group. In that case, when we drag into\n        // the inner target (folder), we first set dropTarget to the inner element. But the same event is bubbled to the\n        // outer target too, and we need to prevent the outer one from taking over.\n        // So, check if the last dropTarget is not a child of the current.\n\n        if (this._dragData) {\n          if (\n            this._dragData.dropTarget &&\n            this._dragData.dropTarget.key !== key &&\n            !this._isChild(root, this._dragData.dropTarget.root)\n          ) {\n            if (this._dragEnterCounts[this._dragData.dropTarget.key] > 0) {\n              EventGroup.raise(this._dragData.dropTarget.root, 'dragleave');\n              EventGroup.raise(root, 'dragenter');\n              this._dragData.dropTarget = target;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * when mouse leave a target while dragging some items, fire dragleave to the target\n   */\n  private _onMouseLeave(target: IDragDropTarget, event: MouseEvent): void {\n    if (this._isDragging) {\n      if (this._dragData && this._dragData.dropTarget && this._dragData.dropTarget.key === target.key) {\n        EventGroup.raise(target.root, 'dragleave');\n        this._dragData.dropTarget = undefined;\n      }\n    }\n  }\n\n  /**\n   * when mouse down on a draggable item, we start to track dragdata.\n   */\n  private _onMouseDown(target: IDragDropTarget, event: MouseEvent): void {\n    if (event.button !== MOUSEDOWN_PRIMARY_BUTTON) {\n      // Ignore anything except the primary button.\n      return;\n    }\n\n    if (this._isDraggable(target)) {\n      this._dragData = {\n        clientX: event.clientX,\n        clientY: event.clientY,\n        eventTarget: event.target,\n        dragTarget: target,\n      };\n\n      for (const key of Object.keys(this._activeTargets)) {\n        const activeTarget = this._activeTargets[key];\n        if (activeTarget.target.root) {\n          this._events.on(activeTarget.target.root, 'mousemove', this._onMouseMove.bind(this, activeTarget.target));\n          this._events.on(activeTarget.target.root, 'mouseleave', this._onMouseLeave.bind(this, activeTarget.target));\n        }\n      }\n    } else {\n      this._dragData = null;\n    }\n  }\n\n  /**\n   * determine whether the child target is a descendant of the parent\n   */\n  private _isChild(parentElement: HTMLElement, childElement: HTMLElement): boolean {\n    while (childElement && childElement.parentElement) {\n      if (childElement.parentElement === parentElement) {\n        return true;\n      }\n      childElement = childElement.parentElement;\n    }\n    return false;\n  }\n\n  private _isDraggable(target: IDragDropTarget): boolean {\n    const { options } = target;\n    return !!(options.canDrag && options.canDrag(options.context.data));\n  }\n\n  private _isDroppable(target: IDragDropTarget): boolean {\n    // TODO: take the drag item into consideration to prevent dragging an item into the same group\n    const { options } = target;\n    const dragContext =\n      this._dragData && this._dragData.dragTarget ? this._dragData.dragTarget.options.context : undefined;\n    return !!(options.canDrop && options.canDrop(options.context, dragContext));\n  }\n}\n"]}
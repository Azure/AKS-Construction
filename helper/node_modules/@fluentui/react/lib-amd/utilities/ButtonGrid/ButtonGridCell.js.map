{"version":3,"file":"ButtonGridCell.js","sourceRoot":"../src/","sources":["utilities/ButtonGrid/ButtonGridCell.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { css, getNativeProps, buttonProperties } from '../../Utilities';\nimport { CommandButton } from '../../Button';\nimport { useId } from '@fluentui/react-hooks';\nimport type { IButtonGridCellProps } from './ButtonGridCell.types';\n\nexport const ButtonGridCell = <T, P extends IButtonGridCellProps<T>>(props: IButtonGridCellProps<T>) => {\n  const defaultId = useId('gridCell');\n  const {\n    item,\n    id = defaultId,\n    className,\n    selected,\n    disabled = false,\n    onRenderItem,\n    cellDisabledStyle,\n    cellIsSelectedStyle,\n    index,\n    label,\n    getClassNames,\n    onClick,\n    onHover,\n    onMouseMove,\n    onMouseLeave,\n    onMouseEnter,\n    onFocus,\n  } = props;\n\n  const buttonProps = getNativeProps(props, buttonProperties);\n\n  const handleClick = React.useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>): void => {\n      if (onClick && !disabled) {\n        onClick(item, event);\n      }\n    },\n    [disabled, item, onClick],\n  );\n\n  const handleMouseEnter = React.useCallback(\n    (ev: React.MouseEvent<HTMLButtonElement>): void => {\n      const didUpdateOnEnter = onMouseEnter && onMouseEnter(ev);\n\n      if (!didUpdateOnEnter && onHover && !disabled) {\n        onHover(item, ev);\n      }\n    },\n    [disabled, item, onHover, onMouseEnter],\n  );\n\n  const handleMouseMove = React.useCallback(\n    (ev: React.MouseEvent<HTMLButtonElement>): void => {\n      const didUpdateOnMove = onMouseMove && onMouseMove(ev);\n\n      if (!didUpdateOnMove && onHover && !disabled) {\n        onHover(item, ev);\n      }\n    },\n    [disabled, item, onHover, onMouseMove],\n  );\n\n  const handleMouseLeave = React.useCallback(\n    (ev: React.MouseEvent<HTMLButtonElement>): void => {\n      const didUpdateOnLeave = onMouseLeave && onMouseLeave(ev);\n\n      if (!didUpdateOnLeave && onHover && !disabled) {\n        onHover(undefined, ev);\n      }\n    },\n    [disabled, onHover, onMouseLeave],\n  );\n\n  const handleFocus = React.useCallback(\n    (event: React.FocusEvent<HTMLButtonElement>): void => {\n      if (onFocus && !disabled) {\n        onFocus(item, event);\n      }\n    },\n    [disabled, item, onFocus],\n  );\n\n  return (\n    <CommandButton\n      id={id}\n      data-index={index}\n      data-is-focusable\n      aria-selected={selected}\n      ariaLabel={label}\n      title={label}\n      {...buttonProps}\n      className={css(className, {\n        ['' + cellIsSelectedStyle]: selected,\n        ['' + cellDisabledStyle]: disabled,\n      })}\n      onClick={handleClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseMove={handleMouseMove}\n      onMouseLeave={handleMouseLeave}\n      onFocus={handleFocus}\n      getClassNames={getClassNames}\n    >\n      {onRenderItem(item)}\n    </CommandButton>\n  );\n};\n"]}
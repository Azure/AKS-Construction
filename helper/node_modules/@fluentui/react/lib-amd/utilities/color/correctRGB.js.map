{"version":3,"file":"correctRGB.js","sourceRoot":"../src/","sources":["utilities/color/correctRGB.ts"],"names":[],"mappings":";;;;IAIA,6DAA6D;IAC7D,SAAgB,UAAU,CAAC,KAAW;QACpC,OAAO;YACL,CAAC,EAAE,aAAK,CAAC,KAAK,CAAC,CAAC,EAAE,sBAAa,CAAC;YAChC,CAAC,EAAE,aAAK,CAAC,KAAK,CAAC,CAAC,EAAE,sBAAa,CAAC;YAChC,CAAC,EAAE,aAAK,CAAC,KAAK,CAAC,CAAC,EAAE,sBAAa,CAAC;YAChC,CAAC,EAAE,OAAO,KAAK,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,aAAK,CAAC,KAAK,CAAC,CAAC,EAAE,wBAAe,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SAC3E,CAAC;IACJ,CAAC;IAPD,gCAOC","sourcesContent":["import { MAX_COLOR_ALPHA, MAX_COLOR_RGB } from './consts';\nimport { clamp } from './clamp';\nimport type { IRGB } from './interfaces';\n\n/** Corrects an RGB color to fall within the valid range.  */\nexport function correctRGB(color: IRGB): IRGB {\n  return {\n    r: clamp(color.r, MAX_COLOR_RGB),\n    g: clamp(color.g, MAX_COLOR_RGB),\n    b: clamp(color.b, MAX_COLOR_RGB),\n    a: typeof color.a === 'number' ? clamp(color.a, MAX_COLOR_ALPHA) : color.a,\n  };\n}\n"]}
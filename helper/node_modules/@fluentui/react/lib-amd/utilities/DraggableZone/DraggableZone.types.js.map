{"version":3,"file":"DraggableZone.types.js","sourceRoot":"../src/","sources":["utilities/DraggableZone/DraggableZone.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\n\nexport interface IDragData {\n  position: ICoordinates;\n  lastPosition?: ICoordinates;\n  delta: ICoordinates;\n}\n\nexport interface ICoordinates {\n  x: number;\n  y: number;\n}\n\nexport interface IDraggableZoneProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Specifies a selector to be used as the handle that initiates drag\n   */\n  handleSelector?: string;\n\n  /**\n   * Specifies a selector to be used to prevent drag initialization.\n   * For example, if you do not want buttons inside of your handleSelector\n   * to have the cursor change to move or to allow users to select from buttons,\n   * you could pass button here (the close button in the header of a dialog is a concrete example)\n   */\n  preventDragSelector?: string;\n\n  /**\n   * the X and Y coordinates to use as an offest to position the draggable content\n   */\n  position?: ICoordinates;\n\n  /**\n   * Callback for when dragging starts\n   */\n  onStart?: (event: React.MouseEvent<HTMLElement> & React.TouchEvent<HTMLElement>, dragData: IDragData) => void;\n\n  /**\n   * Callback for when the drag changes, while dragging\n   */\n  onDragChange?: (event: React.MouseEvent<HTMLElement> & React.TouchEvent<HTMLElement>, dragData: IDragData) => void;\n\n  /**\n   * Callback for when dragging stops\n   */\n  onStop?: (event: React.MouseEvent<HTMLElement> & React.TouchEvent<HTMLElement>, dragData: IDragData) => void;\n}\n"]}
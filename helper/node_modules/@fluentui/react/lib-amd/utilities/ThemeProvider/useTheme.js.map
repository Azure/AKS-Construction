{"version":3,"file":"useTheme.js","sourceRoot":"../src/","sources":["utilities/ThemeProvider/useTheme.ts"],"names":[],"mappings":";;;;IAMA;;OAEG;IACH,SAAS,cAAc;QACrB,OAAO,oCAAwB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;IACnD,CAAC;IAED;;OAEG;IACI,IAAM,QAAQ,GAAG;QACtB,IAAM,KAAK,GAAG,kBAAU,CAAC,2BAAY,CAAC,CAAC;QACvC,IAAM,WAAW,GAAG,cAAc,EAAE,CAAC;QAErC,OAAO,KAAK,IAAI,WAAW,IAAI,mBAAW,CAAC,EAAE,CAAC,CAAC;IACjD,CAAC,CAAC;IALW,QAAA,QAAQ,YAKnB","sourcesContent":["import { useContext } from 'react';\nimport { useCustomizationSettings } from '@fluentui/utilities';\nimport { createTheme } from '@fluentui/theme';\nimport { ThemeContext } from './ThemeContext';\nimport type { ITheme, Theme } from '@fluentui/theme';\n\n/**\n * Get theme from CustomizerContext or Customizations singleton.\n */\nfunction useCompatTheme(): ITheme | undefined {\n  return useCustomizationSettings(['theme']).theme;\n}\n\n/**\n * React hook for programmatically accessing the theme.\n */\nexport const useTheme = (): Theme => {\n  const theme = useContext(ThemeContext);\n  const legacyTheme = useCompatTheme();\n\n  return theme || legacyTheme || createTheme({});\n};\n"]}
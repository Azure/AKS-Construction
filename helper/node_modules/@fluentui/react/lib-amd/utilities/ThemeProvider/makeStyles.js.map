{"version":3,"file":"makeStyles.js","sourceRoot":"../src/","sources":["utilities/ThemeProvider/makeStyles.ts"],"names":[],"mappings":"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","sourcesContent":["import { useTheme } from './useTheme';\nimport { getId } from '@fluentui/utilities';\nimport { useWindow } from '@fluentui/react-window-provider';\nimport { mergeStylesRenderer } from './styleRenderers/mergeStylesRenderer';\nimport type { IStyle } from '@fluentui/style-utilities';\nimport type { Theme } from '@fluentui/theme';\nimport { useEffect } from 'react';\n\ntype GraphPath = readonly [windowId: string | undefined, id: number, theme: Theme | undefined];\nexport type StylesClassMapping<TStyleSet extends { [key in keyof TStyleSet]: IStyle }> = {\n  [key in keyof TStyleSet]: string;\n};\ntype Graph<TStyleSet extends { [key in keyof TStyleSet]: IStyle }> = Map<\n  string | undefined,\n  Map<number, Map<Theme | undefined, { classMap: StylesClassMapping<TStyleSet>; refCount: number }>>\n>;\n\nconst graphGet = <TStyleSet extends { [key in keyof TStyleSet]: IStyle }>(\n  graphNode: Graph<TStyleSet>,\n  [windowId, id, theme]: GraphPath,\n): StylesClassMapping<TStyleSet> | undefined => {\n  return graphNode.get(windowId)?.get(id)?.get(theme)?.classMap;\n};\n\nconst graphSet = <TStyleSet extends { [key in keyof TStyleSet]: IStyle }>(\n  graphNode: Graph<TStyleSet>,\n  [windowId, id, theme]: GraphPath,\n  classMap: StylesClassMapping<TStyleSet>,\n) => {\n  const windowNode =\n    graphNode.get(windowId) ??\n    new Map<number, Map<Theme | undefined, { classMap: StylesClassMapping<TStyleSet>; refCount: number }>>();\n  graphNode.set(windowId, windowNode);\n\n  const idNode =\n    windowNode.get(id) ?? new Map<Theme | undefined, { classMap: StylesClassMapping<TStyleSet>; refCount: number }>();\n  windowNode.set(id, idNode);\n\n  idNode.set(theme, { classMap, refCount: 0 });\n};\n\nfunction graphRef<TStyleSet extends { [key in keyof TStyleSet]: IStyle }>(\n  graphNode: Graph<TStyleSet>,\n  [windowId, id, theme]: GraphPath,\n) {\n  const node = graphNode.get(windowId)?.get(id)?.get(theme);\n  if (node) {\n    node.refCount++;\n  }\n}\n\nfunction graphDeref<TStyleSet extends { [key in keyof TStyleSet]: IStyle }>(\n  graphNode: Graph<TStyleSet>,\n  [windowId, id, theme]: GraphPath,\n) {\n  const node = graphNode.get(windowId)?.get(id)?.get(theme);\n  if (node) {\n    node.refCount--;\n\n    if (node.refCount === 0) {\n      graphNode.get(windowId)?.get(id)?.delete(theme);\n\n      if (graphNode.get(windowId)?.get(id)?.size === 0) {\n        graphNode.get(windowId)?.delete(id);\n\n        if (graphNode.get(windowId)?.size === 0) {\n          graphNode.delete(windowId);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Options that can be provided to the hook generated by `makeStyles`.\n * @deprecated Only used in deprecated `makeStyles` implementation below.\n */\nexport type UseStylesOptions = {\n  theme?: Theme;\n};\n\ntype WindowWithId = Window & {\n  __id__: string;\n};\n\n/**\n * Registers a css object, optionally as a function of the theme.\n *\n * @param styleOrFunction - Either a css javascript object, or a function which takes in `ITheme`\n * and returns a css javascript object.\n *\n * @deprecated Use `mergeStyles` instead for v8 related code. We will be using a new implementation of `makeStyles` in\n * future versions of the library.\n */\nexport function makeStyles<TStyleSet extends { [key in keyof TStyleSet]: IStyle } = { [key: string]: IStyle }>(\n  styleOrFunction: TStyleSet | ((theme: Theme) => TStyleSet),\n  // eslint-disable-next-line deprecation/deprecation\n): (options?: UseStylesOptions) => StylesClassMapping<TStyleSet> {\n  // Create graph of inputs to map to output.\n  const graph: Graph<TStyleSet> = new Map();\n  // Retain a dictionary of window ids we're tracking\n  const allWindows = new Set<string>();\n\n  // cleanupMapEntries will\n  // 1. remove all the graph branches for the window,\n  // 2. remove the event listener,\n  // 3. delete the allWindows entry.\n  const cleanupMapEntries = (ev: PageTransitionEvent) => {\n    const win = ev.currentTarget as WindowWithId;\n    const winId = win.__id__;\n    graph.delete(winId);\n    win.removeEventListener('unload', cleanupMapEntries);\n    allWindows.delete(winId);\n  };\n\n  // eslint-disable-next-line deprecation/deprecation\n  return (options: UseStylesOptions = {}): StylesClassMapping<TStyleSet> => {\n    let { theme } = options;\n    let winId: string | undefined;\n    const win = useWindow() as WindowWithId | undefined;\n    if (win) {\n      win.__id__ = win.__id__ || getId();\n      winId = win.__id__;\n      if (!allWindows.has(winId)) {\n        allWindows.add(winId);\n        win.addEventListener('unload', cleanupMapEntries);\n      }\n    }\n\n    const contextualTheme = useTheme();\n\n    theme = theme || contextualTheme;\n    const renderer = mergeStylesRenderer;\n\n    const id = renderer.getId();\n    const path: GraphPath = [winId, id, theme] as const;\n    let value = graphGet(graph, path);\n\n    // Don't keep around unused styles\n    useEffect(() => {\n      graphRef(graph, [winId, id, theme]);\n\n      return () => graphDeref(graph, [winId, id, theme]);\n    }, [winId, id, theme]);\n\n    if (!value) {\n      const styles = isStyleFunction(styleOrFunction)\n        ? (styleOrFunction as (theme: Theme) => TStyleSet)(theme!)\n        : styleOrFunction;\n\n      value = mergeStylesRenderer.renderStyles<TStyleSet>(styles, { targetWindow: win, rtl: !!theme!.rtl });\n      graphSet(graph, path, value);\n    }\n\n    return value;\n  };\n}\n\nfunction isStyleFunction<TStyleSet extends { [key in keyof TStyleSet]: IStyle }>(\n  styleOrFunction: TStyleSet | ((theme: Theme) => TStyleSet),\n): styleOrFunction is (theme: Theme) => TStyleSet {\n  return typeof styleOrFunction === 'function';\n}\n"]}
{"version":3,"file":"useThemeProvider.js","sourceRoot":"../src/","sources":["utilities/ThemeProvider/useThemeProvider.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,IAAI,MAAM,EAAE,MAAM,uBAAuB,CAAC;AACtE,OAAO,EAAE,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;AAChE,OAAO,EAAE,oBAAoB,EAAE,MAAM,qBAAqB,CAAC;AAG3D;;;GAGG;AACH,MAAM,CAAC,IAAM,gBAAgB,GAAG,UAAC,KAAyB,EAAE,YAAgC;IAC1F,IAAM,KAAK,GAAG,oBAAoB,CAAC,YAAY,EAAE,KAAK,CAAuB,CAAC;IAE9E,0BAA0B;IAC1B,qBAAqB,CAAC,KAAK,CAAC,CAAC;IAE7B,OAAO;QACL,KAAK,OAAA;QACL,MAAM,QAAA;KACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { renderThemeProvider as render } from './renderThemeProvider';\nimport { useThemeProviderState } from './useThemeProviderState';\nimport { getPropsWithDefaults } from '@fluentui/utilities';\nimport type { ThemeProviderProps, ThemeProviderState } from './ThemeProvider.types';\n\n/**\n * Returns the ThemeProvider render function and calculated state, given user input, ref, and\n * a set of default prop values.\n */\nexport const useThemeProvider = (props: ThemeProviderProps, defaultProps: ThemeProviderProps) => {\n  const state = getPropsWithDefaults(defaultProps, props) as ThemeProviderState;\n\n  // Apply changes to state.\n  useThemeProviderState(state);\n\n  return {\n    state,\n    render,\n  };\n};\n"]}
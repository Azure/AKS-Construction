{"version":3,"file":"types.js","sourceRoot":"../src/","sources":["utilities/ThemeProvider/styleRenderers/types.ts"],"names":[],"mappings":"","sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\nimport type { IFontFace, IKeyframes } from '@fluentui/merge-styles';\n\ntype StyleRendererOptions = {\n  rtl?: boolean;\n  targetWindow: Window | undefined;\n};\n\nexport interface StyleRenderer {\n  /**\n   * Expected to initialize or re-initialize the renderer. Primarily for testing purposes.\n   */\n  reset: () => void;\n\n  /**\n   * Returns a unique id for the renderer; used as part of the cache key when determining if new\n   * styles need to be rendered.\n   */\n  getId: () => number;\n\n  /**\n   * Renders a stylesheet and returns the map of key to class name.\n   */\n  renderStyles: <TRuleSet>(ruleSet: TRuleSet, options: StyleRendererOptions) => { [key in keyof TRuleSet]: string };\n\n  /**\n   * Renders keyframes and returns the keyframe name.\n   */\n  renderKeyframes: (keyframes: IKeyframes, options: StyleRendererOptions) => string;\n\n  /**\n   * Renders fontfaces.\n   */\n  renderFontFace: (fontFace: IFontFace, options: StyleRendererOptions) => void;\n}\n"]}
{"version":3,"file":"useThemeProviderState.js","sourceRoot":"../src/","sources":["utilities/ThemeProvider/useThemeProviderState.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAC9C,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAK5C,IAAM,YAAY,GAAG,IAAI,GAAG,EAAkB,CAAC;AAE/C,IAAM,UAAU,GAAG;IAAC,gBAA+C;SAA/C,UAA+C,EAA/C,qBAA+C,EAA/C,IAA+C;QAA/C,2BAA+C;;IACjE,IAAM,GAAG,GAAa,EAAE,CAAC;IAEzB,KAAoB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM,EAAE;QAAvB,IAAM,KAAK,eAAA;QACd,IAAI,KAAK,EAAE;YACT,IAAI,EAAE,GAAI,KAAe,CAAC,EAAE,IAAI,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAExD,IAAI,CAAC,EAAE,EAAE;gBACP,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;gBACf,YAAY,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;aAC7B;YACD,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACd;KACF;IAED,OAAO,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACvB,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,qBAAqB,GAAG,UAAC,UAA8B;IAClE,IAAM,SAAS,GAAiB,UAAU,CAAC,KAAK,CAAC;IAEjD,yBAAyB;IACzB,IAAM,WAAW,GAAG,QAAQ,EAAE,CAAC;IAE/B,yEAAyE;IACzE,IAAM,KAAK,GAAG,CAAC,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAQ;QACrD,IAAM,WAAW,GAAU,WAAW,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QAE/D,WAAW,CAAC,EAAE,GAAG,UAAU,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QAEpD,OAAO,WAAW,CAAC;IACrB,CAAC,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;IAE9B,UAAU,CAAC,iBAAiB,GAAG,KAAK,CAAC,OAAO,CAC1C,cAAM,OAAA,CAAC;QACL,cAAc,EAAE;YACd,mBAAmB,EAAE,IAAI;YACzB,QAAQ,EAAE,EAAE,KAAK,OAAA,EAAE;YACnB,cAAc,EAAE,KAAK,CAAC,UAAU,IAAI,EAAE;SACvC;KACF,CAAC,EANI,CAMJ,EACF,CAAC,KAAK,CAAC,CACR,CAAC;IAEF,IAAI,UAAU,CAAC,KAAK,CAAC,GAAG,KAAK,WAAW,CAAC,GAAG,EAAE;QAC5C,UAAU,CAAC,GAAG,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;KACvD;AACH,CAAC,CAAC","sourcesContent":["import { mergeThemes } from '@fluentui/theme';\nimport * as React from 'react';\nimport { useTheme } from './useTheme';\nimport { getId } from '@fluentui/utilities';\nimport type { PartialTheme, Theme } from '@fluentui/theme';\nimport type { ThemeProviderState } from './ThemeProvider.types';\nimport type { ICustomizerContext } from '@fluentui/utilities';\n\nconst themeToIdMap = new Map<Object, string>();\n\nconst getThemeId = (...themes: (Theme | PartialTheme | undefined)[]) => {\n  const ids: string[] = [];\n\n  for (const theme of themes) {\n    if (theme) {\n      let id = (theme as Theme).id || themeToIdMap.get(theme);\n\n      if (!id) {\n        id = getId('');\n        themeToIdMap.set(theme, id);\n      }\n      ids.push(id);\n    }\n  }\n\n  return ids.join('-');\n};\n\nexport const useThemeProviderState = (draftState: ThemeProviderState) => {\n  const userTheme: PartialTheme = draftState.theme;\n\n  // Pull contextual theme.\n  const parentTheme = useTheme();\n\n  // Update the incoming theme with a memoized version of the merged theme.\n  const theme = (draftState.theme = React.useMemo<Theme>(() => {\n    const mergedTheme: Theme = mergeThemes(parentTheme, userTheme);\n\n    mergedTheme.id = getThemeId(parentTheme, userTheme);\n\n    return mergedTheme;\n  }, [parentTheme, userTheme]));\n\n  draftState.customizerContext = React.useMemo<ICustomizerContext>(\n    () => ({\n      customizations: {\n        inCustomizerContext: true,\n        settings: { theme },\n        scopedSettings: theme.components || {},\n      },\n    }),\n    [theme],\n  );\n\n  if (draftState.theme.rtl !== parentTheme.rtl) {\n    draftState.dir = draftState.theme.rtl ? 'rtl' : 'ltr';\n  }\n};\n"]}
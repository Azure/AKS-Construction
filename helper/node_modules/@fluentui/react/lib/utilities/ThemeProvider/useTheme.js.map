{"version":3,"file":"useTheme.js","sourceRoot":"../src/","sources":["utilities/ThemeProvider/useTheme.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AACnC,OAAO,EAAE,wBAAwB,EAAE,MAAM,qBAAqB,CAAC;AAC/D,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAC9C,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAG9C;;GAEG;AACH,SAAS,cAAc;IACrB,OAAO,wBAAwB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;AACnD,CAAC;AAED;;GAEG;AACH,MAAM,CAAC,IAAM,QAAQ,GAAG;IACtB,IAAM,KAAK,GAAG,UAAU,CAAC,YAAY,CAAC,CAAC;IACvC,IAAM,WAAW,GAAG,cAAc,EAAE,CAAC;IAErC,OAAO,KAAK,IAAI,WAAW,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC;AACjD,CAAC,CAAC","sourcesContent":["import { useContext } from 'react';\nimport { useCustomizationSettings } from '@fluentui/utilities';\nimport { createTheme } from '@fluentui/theme';\nimport { ThemeContext } from './ThemeContext';\nimport type { ITheme, Theme } from '@fluentui/theme';\n\n/**\n * Get theme from CustomizerContext or Customizations singleton.\n */\nfunction useCompatTheme(): ITheme | undefined {\n  return useCustomizationSettings(['theme']).theme;\n}\n\n/**\n * React hook for programmatically accessing the theme.\n */\nexport const useTheme = (): Theme => {\n  const theme = useContext(ThemeContext);\n  const legacyTheme = useCompatTheme();\n\n  return theme || legacyTheme || createTheme({});\n};\n"]}
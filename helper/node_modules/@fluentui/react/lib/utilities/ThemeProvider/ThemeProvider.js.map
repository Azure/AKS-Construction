{"version":3,"file":"ThemeProvider.js","sourceRoot":"../src/","sources":["utilities/ThemeProvider/ThemeProvider.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AACpE,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AACtD,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAC;AAGtD;;GAEG;AACH,MAAM,CAAC,IAAM,aAAa,GAAgD,KAAK,CAAC,UAAU,CAGxF,UAAC,KAAyB,EAAE,GAA8B;IAC1D,IAAM,OAAO,GAAG,aAAa,CAAC,GAAG,EAAE,KAAK,CAAC,MAAM,CAAc,IAAI,CAAC,CAAC,CAAC;IAC9D,IAAA,KAAoB,gBAAgB,CAAC,KAAK,EAAE;QAChD,GAAG,EAAE,OAAO;QACZ,EAAE,EAAE,KAAK;QACT,OAAO,EAAE,SAAS;KACnB,CAAC,EAJM,MAAM,YAAA,EAAE,KAAK,WAInB,CAAC;IAEH,iBAAiB;IACjB,uBAAuB,CAAC,KAAK,CAAC,CAAC;IAE/B,+BAA+B;IAC/B,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC;AAEH,aAAa,CAAC,WAAW,GAAG,eAAe,CAAC","sourcesContent":["import * as React from 'react';\nimport { useThemeProviderClasses } from './useThemeProviderClasses';\nimport { useThemeProvider } from './useThemeProvider';\nimport { useMergedRefs } from '@fluentui/react-hooks';\nimport type { ThemeProviderProps } from './ThemeProvider.types';\n\n/**\n * ThemeProvider, used for providing css variables and registering stylesheets.\n */\nexport const ThemeProvider: React.FunctionComponent<ThemeProviderProps> = React.forwardRef<\n  HTMLDivElement,\n  ThemeProviderProps\n>((props: ThemeProviderProps, ref: React.Ref<HTMLDivElement>) => {\n  const rootRef = useMergedRefs(ref, React.useRef<HTMLElement>(null));\n  const { render, state } = useThemeProvider(props, {\n    ref: rootRef,\n    as: 'div',\n    applyTo: 'element',\n  });\n\n  // Render styles.\n  useThemeProviderClasses(state);\n\n  // Return the rendered content.\n  return render(state);\n});\n\nThemeProvider.displayName = 'ThemeProvider';\n"]}
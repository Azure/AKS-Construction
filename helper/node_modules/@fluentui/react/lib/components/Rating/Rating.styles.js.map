{"version":3,"file":"Rating.styles.js","sourceRoot":"../src/","sources":["components/Rating/Rating.styles.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,kBAAkB,EAAE,oBAAoB,EAAE,mBAAmB,EAAE,MAAM,eAAe,CAAC;AAG7G,IAAM,gBAAgB,GAAG;IACvB,IAAI,EAAE,oBAAoB;IAC1B,WAAW,EAAE,2BAA2B;IACxC,WAAW,EAAE,2BAA2B;IACxC,UAAU,EAAE,yBAAyB;IACrC,cAAc,EAAE,oBAAoB;IACpC,eAAe,EAAE,qBAAqB;IACtC,YAAY,EAAE,kBAAkB;IAChC,iBAAiB,EAAE,kBAAkB;IACrC,kBAAkB,EAAE,kBAAkB;IACtC,SAAS,EAAE,qBAAqB;IAChC,eAAe,EAAE,qBAAqB;CACvC,CAAC;AAEF,SAAS,yBAAyB,CAAC,KAAa,EAAE,iBAAyB;;IACzE,OAAO;QACL,KAAK,EAAE,KAAK;QACZ,SAAS;YACP,GAAC,oBAAoB,IAAG;gBACtB,KAAK,EAAE,iBAAiB;aACzB;eACF;KACF,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,SAAS,CAAC,KAAwB;IACxC,IAAA,QAAQ,GAAsB,KAAK,SAA3B,EAAE,QAAQ,GAAY,KAAK,SAAjB,EAAE,KAAK,GAAK,KAAK,MAAV,CAAW;IAEpC,IAAA,cAAc,GAAc,KAAK,eAAnB,EAAE,OAAO,GAAK,KAAK,QAAV,CAAW;IAE1C,IAAM,UAAU,GAAG,mBAAmB,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;IAEhE,IAAM,mBAAmB,GAAG,EAAE,CAAC;IAC/B,IAAM,mBAAmB,GAAG,EAAE,CAAC;IAC/B,IAAM,qBAAqB,GAAG,CAAC,CAAC;IAChC,IAAM,uBAAuB,GAAG,CAAC,CAAC;IAElC,IAAM,wBAAwB,GAAG,OAAO,CAAC,gBAAgB,CAAC;IAC1D,IAAM,6BAA6B,GAAG,OAAO,CAAC,YAAY,CAAC;IAC3D,IAAM,qCAAqC,GAAG,OAAO,CAAC,SAAS,CAAC;IAChE,IAAM,sBAAsB,GAAG,OAAO,CAAC,cAAc,CAAC;IACtD,IAAM,uBAAuB,GAAG,cAAc,CAAC,mBAAmB,CAAC;IAEnE,OAAO;QACL,IAAI,EAAE;YACJ,UAAU,CAAC,IAAI;YACf,KAAK,CAAC,KAAK,CAAC,MAAM;YAClB,CAAC,QAAQ;gBACP,CAAC,QAAQ,IAAI;gBACX,SAAS,EAAE;oBACT,mFAAmF;oBACnF,SAAS,EAAE;wBACT,SAAS,EAAE;4BACT,qBAAqB,EAAE,yBAAyB,CAAC,sBAAsB,EAAE,WAAW,CAAC;yBACtF;qBACF;iBACF;aACF;SACJ;QACD,WAAW,EAAE;YACX,UAAU,CAAC,WAAW;YACtB;gBACE,MAAM,EAAE,mBAAmB,GAAG,qBAAqB,GAAG,CAAC,GAAG,IAAI;aAC/D;SACF;QACD,WAAW,EAAE;YACX,UAAU,CAAC,WAAW;YACtB;gBACE,MAAM,EAAE,mBAAmB,GAAG,qBAAqB,GAAG,CAAC,GAAG,IAAI;aAC/D;SACF;QACD,UAAU,EAAE;YACV,UAAU,CAAC,UAAU;YACrB;gBACE,OAAO,EAAE,cAAc;gBACvB,QAAQ,EAAE,UAAU;gBACpB,MAAM,EAAE,SAAS;aAClB;SACF;QACD,cAAc,EAAE;YACd,UAAU,CAAC,cAAc;YACzB;gBACE,6CAA6C;gBAC7C,KAAK,EAAE,wBAAwB;gBAC/B,KAAK,EAAE,MAAM;aACd;YACD,QAAQ,IAAI,yBAAyB,CAAC,uBAAuB,EAAE,UAAU,CAAC;SAC3E;QACD,eAAe,EAAE;YACf,UAAU,CAAC,eAAe;YAC1B;gBACE,QAAQ,EAAE,UAAU;gBACpB,MAAM,EAAE,OAAO;gBACf,IAAI,EAAE,GAAG;gBACT,GAAG,EAAE,GAAG;gBACR,SAAS,EAAE,QAAQ;gBACnB,aAAa,EAAE,QAAQ;gBACvB,QAAQ,EAAE,QAAQ;aACnB;YACD,yBAAyB,CAAC,sBAAsB,EAAE,WAAW,CAAC;SAC/D;QACD,YAAY,EAAE;YACZ,aAAa,CAAC,KAAK,CAAC;YACpB,UAAU,CAAC,YAAY;YACvB;gBACE,eAAe,EAAE,aAAa;gBAC9B,OAAO,EAAK,qBAAqB,WAAM,uBAAuB,OAAI;gBAClE,SAAS,EAAE,aAAa;gBACxB,MAAM,EAAE,KAAK;gBACb,MAAM,EAAE,MAAM;gBACd,MAAM,EAAE,SAAS;gBACjB,SAAS,EAAE;oBACT,YAAY,EAAE;wBACZ,MAAM,EAAE,SAAS;qBAClB;oBACD,aAAa,EAAE;wBACb,MAAM,EAAE,SAAS;qBAClB;iBACF;aACF;YACD,CAAC,QAAQ;gBACP,CAAC,QAAQ,IAAI;gBACX,SAAS,EAAE;oBACT,mFAAmF;oBACnF,6BAA6B,EAAE;wBAC7B,SAAS,EAAE;4BACT,qBAAqB,EAAE,yBAAyB,CAAC,wBAAwB,EAAE,YAAY,CAAC;4BACxF,sBAAsB,EAAE,yBAAyB,CAAC,wBAAwB,EAAE,YAAY,CAAC;yBAC1F;qBACF;oBACD,SAAS,EAAE;wBACT,SAAS,EAAE;4BACT,qBAAqB,EAAE;gCACrB,KAAK,EAAE,6BAA6B;6BACrC;4BACD,sBAAsB,EAAE;gCACtB,KAAK,EAAE,qCAAqC;6BAC7C;yBACF;qBACF;iBACF;aACF;YACH,QAAQ,IAAI;gBACV,MAAM,EAAE,SAAS;aAClB;SACF;QACD,iBAAiB,EAAE;YACjB,UAAU,CAAC,iBAAiB;YAC5B;gBACE,QAAQ,EAAE,mBAAmB,GAAG,IAAI;gBACpC,UAAU,EAAE,mBAAmB,GAAG,IAAI;gBACtC,MAAM,EAAE,mBAAmB,GAAG,IAAI;aACnC;SACF;QACD,iBAAiB,EAAE;YACjB,UAAU,CAAC,kBAAkB;YAC7B;gBACE,QAAQ,EAAE,mBAAmB,GAAG,IAAI;gBACpC,UAAU,EAAE,mBAAmB,GAAG,IAAI;gBACtC,MAAM,EAAE,mBAAmB,GAAG,IAAI;aACnC;SACF;QACD,SAAS,EAAE,CAAC,UAAU,CAAC,SAAS,EAAE,kBAAkB,CAAC;QACrD,eAAe,EAAE;YACf,aAAa,CAAC,KAAK,CAAC;YACpB,UAAU,CAAC,eAAe;YAC1B;gBACE,OAAO,EAAE,cAAc;aACxB;SACF;KACF,CAAC;AACJ,CAAC","sourcesContent":["import { getFocusStyle, hiddenContentStyle, HighContrastSelector, getGlobalClassNames } from '../../Styling';\nimport type { IRatingStyleProps, IRatingStyles } from './Rating.types';\n\nconst GlobalClassNames = {\n  root: 'ms-RatingStar-root',\n  rootIsSmall: 'ms-RatingStar-root--small',\n  rootIsLarge: 'ms-RatingStar-root--large',\n  ratingStar: 'ms-RatingStar-container',\n  ratingStarBack: 'ms-RatingStar-back',\n  ratingStarFront: 'ms-RatingStar-front',\n  ratingButton: 'ms-Rating-button',\n  ratingStarIsSmall: 'ms-Rating--small',\n  ratingStartIsLarge: 'ms-Rating--large',\n  labelText: 'ms-Rating-labelText',\n  ratingFocusZone: 'ms-Rating-focuszone',\n};\n\nfunction _getColorWithHighContrast(color: string, highContrastColor: string) {\n  return {\n    color: color,\n    selectors: {\n      [HighContrastSelector]: {\n        color: highContrastColor,\n      },\n    },\n  };\n}\n\nexport function getStyles(props: IRatingStyleProps): IRatingStyles {\n  const { disabled, readOnly, theme } = props;\n\n  const { semanticColors, palette } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const ratingSmallIconSize = 16;\n  const ratingLargeIconSize = 20;\n  const ratingVerticalPadding = 8;\n  const ratingHorizontalPadding = 2;\n\n  const ratingStarUncheckedColor = palette.neutralSecondary;\n  const ratingStarUncheckedHoverColor = palette.themePrimary;\n  const ratingStarUncheckedHoverSelectedColor = palette.themeDark;\n  const ratingStarCheckedColor = palette.neutralPrimary;\n  const ratingStarDisabledColor = semanticColors.disabledBodySubtext;\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      !disabled &&\n        !readOnly && {\n          selectors: {\n            // This is part 1 of highlighting all stars up to the one the user is hovering over\n            '&:hover': {\n              selectors: {\n                '.ms-RatingStar-back': _getColorWithHighContrast(ratingStarCheckedColor, 'Highlight'),\n              },\n            },\n          },\n        },\n    ],\n    rootIsSmall: [\n      classNames.rootIsSmall,\n      {\n        height: ratingSmallIconSize + ratingVerticalPadding * 2 + 'px',\n      },\n    ],\n    rootIsLarge: [\n      classNames.rootIsLarge,\n      {\n        height: ratingLargeIconSize + ratingVerticalPadding * 2 + 'px',\n      },\n    ],\n    ratingStar: [\n      classNames.ratingStar,\n      {\n        display: 'inline-block',\n        position: 'relative',\n        height: 'inherit',\n      },\n    ],\n    ratingStarBack: [\n      classNames.ratingStarBack,\n      {\n        // TODO: Use a proper semantic color for this\n        color: ratingStarUncheckedColor,\n        width: '100%',\n      },\n      disabled && _getColorWithHighContrast(ratingStarDisabledColor, 'GrayText'),\n    ],\n    ratingStarFront: [\n      classNames.ratingStarFront,\n      {\n        position: 'absolute',\n        height: '100 %',\n        left: '0',\n        top: '0',\n        textAlign: 'center',\n        verticalAlign: 'middle',\n        overflow: 'hidden',\n      },\n      _getColorWithHighContrast(ratingStarCheckedColor, 'Highlight'),\n    ],\n    ratingButton: [\n      getFocusStyle(theme),\n      classNames.ratingButton,\n      {\n        backgroundColor: 'transparent',\n        padding: `${ratingVerticalPadding}px ${ratingHorizontalPadding}px`,\n        boxSizing: 'content-box',\n        margin: '0px',\n        border: 'none',\n        cursor: 'pointer',\n        selectors: {\n          '&:disabled': {\n            cursor: 'default',\n          },\n          '&[disabled]': {\n            cursor: 'default',\n          },\n        },\n      },\n      !disabled &&\n        !readOnly && {\n          selectors: {\n            // This is part 2 of highlighting all stars up to the one the user is hovering over\n            '&:hover ~ .ms-Rating-button': {\n              selectors: {\n                '.ms-RatingStar-back': _getColorWithHighContrast(ratingStarUncheckedColor, 'WindowText'),\n                '.ms-RatingStar-front': _getColorWithHighContrast(ratingStarUncheckedColor, 'WindowText'),\n              },\n            },\n            '&:hover': {\n              selectors: {\n                '.ms-RatingStar-back': {\n                  color: ratingStarUncheckedHoverColor,\n                },\n                '.ms-RatingStar-front': {\n                  color: ratingStarUncheckedHoverSelectedColor,\n                },\n              },\n            },\n          },\n        },\n      disabled && {\n        cursor: 'default',\n      },\n    ],\n    ratingStarIsSmall: [\n      classNames.ratingStarIsSmall,\n      {\n        fontSize: ratingSmallIconSize + 'px',\n        lineHeight: ratingSmallIconSize + 'px',\n        height: ratingSmallIconSize + 'px',\n      },\n    ],\n    ratingStarIsLarge: [\n      classNames.ratingStartIsLarge,\n      {\n        fontSize: ratingLargeIconSize + 'px',\n        lineHeight: ratingLargeIconSize + 'px',\n        height: ratingLargeIconSize + 'px',\n      },\n    ],\n    labelText: [classNames.labelText, hiddenContentStyle],\n    ratingFocusZone: [\n      getFocusStyle(theme),\n      classNames.ratingFocusZone,\n      {\n        display: 'inline-block',\n      },\n    ],\n  };\n}\n"]}
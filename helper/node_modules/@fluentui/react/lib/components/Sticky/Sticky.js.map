{"version":3,"file":"Sticky.js","sourceRoot":"../src/","sources":["components/Sticky/Sticky.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { initializeComponentRef } from '../../Utilities';\nimport { hiddenContentStyle } from '../../Styling';\nimport { ScrollablePaneContext } from '../ScrollablePane/ScrollablePane.types';\nimport { StickyPositionType } from './Sticky.types';\nimport type { IScrollablePaneContext } from '../ScrollablePane/ScrollablePane.types';\nimport type { IStickyProps } from './Sticky.types';\n\nexport interface IStickyState {\n  isStickyTop: boolean;\n  isStickyBottom: boolean;\n  distanceFromTop?: number;\n}\n\nexport class Sticky extends React.Component<IStickyProps, IStickyState> {\n  public static defaultProps: IStickyProps = {\n    stickyPosition: StickyPositionType.Both,\n    isScrollSynced: true,\n  };\n\n  public static contextType = ScrollablePaneContext;\n\n  private _root = React.createRef<HTMLDivElement>();\n  private _stickyContentTop = React.createRef<HTMLDivElement>();\n  private _stickyContentBottom = React.createRef<HTMLDivElement>();\n  private _nonStickyContent = React.createRef<HTMLDivElement>();\n  private _placeHolder = React.createRef<HTMLDivElement>();\n  private _activeElement: HTMLElement | undefined;\n\n  constructor(props: IStickyProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this.state = {\n      isStickyTop: false,\n      isStickyBottom: false,\n      distanceFromTop: undefined,\n    };\n    this._activeElement = undefined;\n  }\n\n  public get root(): HTMLDivElement | null {\n    return this._root.current;\n  }\n\n  public get placeholder(): HTMLDivElement | null {\n    return this._placeHolder.current;\n  }\n\n  public get stickyContentTop(): HTMLDivElement | null {\n    return this._stickyContentTop.current;\n  }\n\n  public get stickyContentBottom(): HTMLDivElement | null {\n    return this._stickyContentBottom.current;\n  }\n\n  public get nonStickyContent(): HTMLDivElement | null {\n    return this._nonStickyContent.current;\n  }\n\n  public get canStickyTop(): boolean {\n    return (\n      this.props.stickyPosition === StickyPositionType.Both || this.props.stickyPosition === StickyPositionType.Header\n    );\n  }\n\n  public get canStickyBottom(): boolean {\n    return (\n      this.props.stickyPosition === StickyPositionType.Both || this.props.stickyPosition === StickyPositionType.Footer\n    );\n  }\n\n  public syncScroll = (container: HTMLElement): void => {\n    const { nonStickyContent } = this;\n\n    if (nonStickyContent && this.props.isScrollSynced) {\n      nonStickyContent.scrollLeft = container.scrollLeft;\n    }\n  };\n\n  public componentDidMount(): void {\n    const { scrollablePane } = this._getContext();\n\n    if (!scrollablePane) {\n      return;\n    }\n\n    scrollablePane.subscribe(this._onScrollEvent);\n    scrollablePane.addSticky(this);\n  }\n\n  public componentWillUnmount(): void {\n    const { scrollablePane } = this._getContext();\n\n    if (!scrollablePane) {\n      return;\n    }\n\n    scrollablePane.unsubscribe(this._onScrollEvent);\n    scrollablePane.removeSticky(this);\n  }\n\n  public componentDidUpdate(prevProps: IStickyProps, prevState: IStickyState): void {\n    const { scrollablePane } = this._getContext();\n\n    if (!scrollablePane) {\n      return;\n    }\n\n    const { isStickyBottom, isStickyTop, distanceFromTop } = this.state;\n    let syncScroll: boolean = false;\n    if (prevState.distanceFromTop !== distanceFromTop) {\n      scrollablePane.sortSticky(this, true /*sortAgain*/);\n      syncScroll = true;\n    }\n    if (prevState.isStickyTop !== isStickyTop || prevState.isStickyBottom !== isStickyBottom) {\n      if (this._activeElement) {\n        this._activeElement.focus();\n      }\n      scrollablePane.updateStickyRefHeights();\n      syncScroll = true;\n    }\n    if (syncScroll) {\n      // Sync Sticky scroll position with content container on each update\n      scrollablePane.syncScrollSticky(this);\n    }\n  }\n\n  public shouldComponentUpdate(nextProps: IStickyProps, nextState: IStickyState): boolean {\n    if (!this.context.scrollablePane) {\n      return true;\n    }\n\n    const { isStickyTop, isStickyBottom, distanceFromTop } = this.state;\n\n    return (isStickyTop !== nextState.isStickyTop ||\n      isStickyBottom !== nextState.isStickyBottom ||\n      this.props.stickyPosition !== nextProps.stickyPosition ||\n      this.props.children !== nextProps.children ||\n      distanceFromTop !== nextState.distanceFromTop ||\n      _isOffsetHeightDifferent(this._nonStickyContent, this._stickyContentTop) ||\n      _isOffsetHeightDifferent(this._nonStickyContent, this._stickyContentBottom) ||\n      _isOffsetHeightDifferent(this._nonStickyContent, this._placeHolder)) as boolean;\n  }\n\n  public render(): JSX.Element {\n    const { isStickyTop, isStickyBottom } = this.state;\n    const { stickyClassName, children } = this.props;\n\n    if (!this.context.scrollablePane) {\n      return <div>{this.props.children}</div>;\n    }\n\n    return (\n      <div ref={this._root}>\n        {this.canStickyTop && (\n          <div ref={this._stickyContentTop} style={{ pointerEvents: isStickyTop ? 'auto' : 'none' }}>\n            <div style={this._getStickyPlaceholderHeight(isStickyTop)} />\n          </div>\n        )}\n        {this.canStickyBottom && (\n          <div ref={this._stickyContentBottom} style={{ pointerEvents: isStickyBottom ? 'auto' : 'none' }}>\n            <div style={this._getStickyPlaceholderHeight(isStickyBottom)} />\n          </div>\n        )}\n        <div style={this._getNonStickyPlaceholderHeightAndWidth()} ref={this._placeHolder}>\n          {(isStickyTop || isStickyBottom) && <span style={hiddenContentStyle as any}>{children}</span>}\n          <div\n            ref={this._nonStickyContent}\n            className={isStickyTop || isStickyBottom ? stickyClassName : undefined}\n            style={this._getContentStyles(isStickyTop || isStickyBottom)}\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  public addSticky(stickyContent: HTMLDivElement): void {\n    if (this.nonStickyContent) {\n      stickyContent.appendChild(this.nonStickyContent);\n    }\n  }\n\n  public resetSticky(): void {\n    if (this.nonStickyContent && this.placeholder) {\n      this.placeholder.appendChild(this.nonStickyContent);\n    }\n  }\n\n  public setDistanceFromTop(container: HTMLDivElement): void {\n    const distanceFromTop = this._getNonStickyDistanceFromTop(container);\n    this.setState({ distanceFromTop: distanceFromTop });\n  }\n\n  private _getContext = (): IScrollablePaneContext => this.context;\n\n  private _getContentStyles(isSticky: boolean): React.CSSProperties {\n    return {\n      backgroundColor: this.props.stickyBackgroundColor || this._getBackground(),\n      overflow: isSticky ? 'hidden' : '',\n    };\n  }\n\n  private _getStickyPlaceholderHeight(isSticky: boolean): React.CSSProperties {\n    const height = this.nonStickyContent ? this.nonStickyContent.offsetHeight : 0;\n    return {\n      visibility: isSticky ? 'hidden' : 'visible',\n      height: isSticky ? 0 : height,\n    };\n  }\n\n  private _getNonStickyPlaceholderHeightAndWidth(): React.CSSProperties {\n    const { isStickyTop, isStickyBottom } = this.state;\n    if (isStickyTop || isStickyBottom) {\n      let height = 0;\n      let width = 0;\n      // Why is placeholder width needed?\n      // ScrollablePane's content container is reponsible for providing scrollbars depending on content overflow.\n      // - If the overflow is caused by content of sticky component when it is in non-sticky state, the container will\n      //   provide horizontal scrollbar.\n      // - If the component becomes sticky, i.e., when state.isStickyTop || state.isStickyBottom becomes true,\n      //   its actual content is no longer inside the container, so the container will see no need for horizontal\n      //   scrollbar (assuming no other content is causing overflow). The complete content of sticky component will\n      //   not be viewable. So it is necessary to provide a placeholder of a certain width (height is already being set)\n      //   in the container, to get a horizontal scrollbar & be able to view the complete content of sticky component.\n      if (this.nonStickyContent && this.nonStickyContent.firstElementChild) {\n        height = this.nonStickyContent.offsetHeight;\n        // What value should be substituted for placeholder width?\n        // Assumptions:\n        //    1. Content inside <Sticky> should always be wrapped in a single div.\n        //        <Sticky><div id={'firstElementChild'}>{intended_content}</div><Sticky/>\n        //    2. -ve padding, margin, etc. are not be used.\n        //    3. scrollWidth of a parent is greater than or equal to max of scrollWidths of its children, and same holds\n        //       for children.\n        // placeholder width should be computed in the best possible way to prevent overscroll/underscroll.\n        width =\n          this.nonStickyContent.firstElementChild.scrollWidth +\n          ((this.nonStickyContent.firstElementChild as HTMLElement).offsetWidth -\n            this.nonStickyContent.firstElementChild.clientWidth);\n      }\n      return {\n        height: height,\n        width: width,\n      };\n    } else {\n      return {};\n    }\n  }\n\n  private _onScrollEvent = (container: HTMLElement, footerStickyContainer: HTMLElement): void => {\n    if (this.root && this.nonStickyContent) {\n      const distanceFromTop = this._getNonStickyDistanceFromTop(container);\n      let isStickyTop = false;\n      let isStickyBottom = false;\n\n      if (this.canStickyTop) {\n        const distanceToStickTop = distanceFromTop - this._getStickyDistanceFromTop();\n        isStickyTop = distanceToStickTop < container.scrollTop;\n      }\n\n      // Can sticky bottom if the scrollablePane - total sticky footer height is smaller than the sticky's distance\n      // from the top of the pane\n      if (this.canStickyBottom && container.clientHeight - footerStickyContainer.offsetHeight <= distanceFromTop) {\n        isStickyBottom =\n          distanceFromTop - Math.floor(container.scrollTop) >=\n          this._getStickyDistanceFromTopForFooter(container, footerStickyContainer);\n      }\n\n      if (\n        document.activeElement &&\n        this.nonStickyContent.contains(document.activeElement) &&\n        (this.state.isStickyTop !== isStickyTop || this.state.isStickyBottom !== isStickyBottom)\n      ) {\n        this._activeElement = document.activeElement as HTMLElement;\n      } else {\n        this._activeElement = undefined;\n      }\n\n      this.setState({\n        isStickyTop: this.canStickyTop && isStickyTop,\n        isStickyBottom: isStickyBottom,\n        distanceFromTop: distanceFromTop,\n      });\n    }\n  };\n\n  private _getStickyDistanceFromTop = (): number => {\n    let distance = 0;\n    if (this.stickyContentTop) {\n      distance = this.stickyContentTop.offsetTop;\n    }\n\n    return distance;\n  };\n\n  private _getStickyDistanceFromTopForFooter = (\n    container: HTMLElement,\n    footerStickyVisibleContainer: HTMLElement,\n  ): number => {\n    let distance = 0;\n    if (this.stickyContentBottom) {\n      distance =\n        container.clientHeight - footerStickyVisibleContainer.offsetHeight + this.stickyContentBottom.offsetTop;\n    }\n\n    return distance;\n  };\n\n  private _getNonStickyDistanceFromTop = (container: HTMLElement): number => {\n    let distance = 0;\n    let currElem = this.root;\n\n    if (currElem) {\n      while (currElem && currElem.offsetParent !== container) {\n        distance += currElem.offsetTop;\n        currElem = currElem.offsetParent as HTMLDivElement;\n      }\n\n      if (currElem && currElem.offsetParent === container) {\n        distance += currElem.offsetTop;\n      }\n    }\n    return distance;\n  };\n\n  // Gets background of nearest parent element that has a declared background-color attribute\n  private _getBackground(): string | undefined {\n    if (!this.root) {\n      return undefined;\n    }\n\n    let curr: HTMLElement = this.root;\n\n    while (\n      window.getComputedStyle(curr).getPropertyValue('background-color') === 'rgba(0, 0, 0, 0)' ||\n      window.getComputedStyle(curr).getPropertyValue('background-color') === 'transparent'\n    ) {\n      if (curr.tagName === 'HTML') {\n        // Fallback color if no element has a declared background-color attribute\n        return undefined;\n      }\n      if (curr.parentElement) {\n        curr = curr.parentElement;\n      }\n    }\n    return window.getComputedStyle(curr).getPropertyValue('background-color');\n  }\n}\n\nfunction _isOffsetHeightDifferent(a: React.RefObject<HTMLElement>, b: React.RefObject<HTMLDivElement>): boolean {\n  return (a && b && a.current && b.current && a.current.offsetHeight !== b.current.offsetHeight) as boolean;\n}\n"]}
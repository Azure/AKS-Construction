{"version":3,"file":"LayerHost.types.js","sourceRoot":"../src/","sources":["components/Layer/LayerHost.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport type { IRefObject } from '../../Utilities';\n\n/**\n * Represents a mounted layer host, and provides access to its `hostId` and root element.\n */\nexport interface ILayerHost {\n  /**\n   * The hostId for this host, to be propagatd to layers using Customizer.\n   */\n  hostId: string;\n  /**\n   * An element ref to the layer host's content root.\n   * This is the element to which layers will be added.\n   */\n  rootRef: React.MutableRefObject<HTMLDivElement | null>;\n  /**\n   * Notifies the layer host that layers may have been added or removed within its root element.\n   */\n  notifyLayersChanged(): void;\n}\n\nexport interface ILayerHostProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * Optional callback to access the ILayerHost interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<ILayerHost>;\n\n  /**\n   * Defines the id for the layer host that Layers can target (using the hostId property.)\n   */\n  id?: string;\n}\n"]}
{"version":3,"file":"LayerHost.js","sourceRoot":"../src/","sources":["components/Layer/LayerHost.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AACnD,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,iBAAiB,CAAC;AAC7C,OAAO,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,MAAM,sBAAsB,CAAC;AAGjG,MAAM,CAAC,IAAM,SAAS,GAA6C,UAAA,KAAK;IAC9D,IAAA,SAAS,GAAK,KAAK,UAAV,CAAW;IAErB,IAAA,WAAW,GAAI,KAAK,CAAC,QAAQ,CAAC,cAAM,OAAA,KAAK,EAAE,EAAP,CAAO,CAAC,GAAjC,CAAkC;IAE5C,IAAA,KAA6B,KAAK,GAAV,EAApB,MAAM,mBAAG,WAAW,KAAA,CAAW;IAE3C,IAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAAa;QAC5C,MAAM,QAAA;QACN,OAAO,EAAE,KAAK,CAAC,MAAM,CAAwB,IAAI,CAAC;QAClD,mBAAmB,EAAE;YACnB,mGAAmG;QACrG,CAAC;KACF,CAAC,CAAC;IAEH,KAAK,CAAC,mBAAmB,CAAC,KAAK,CAAC,YAAY,EAAE,cAAM,OAAA,YAAY,CAAC,OAAO,EAApB,CAAoB,CAAC,CAAC;IAE1E,KAAK,CAAC,SAAS,CAAC;QACd,iBAAiB,CAAC,MAAM,EAAE,YAAY,CAAC,OAAO,CAAC,CAAC;QAChD,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAC1B,0FAA0F;IAC5F,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,UAAU,CAAC;QACT,mBAAmB,CAAC,MAAM,EAAE,YAAY,CAAC,OAAO,CAAC,CAAC;QAClD,iBAAiB,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,OAAO,wCAAS,KAAK,IAAE,SAAS,EAAE,GAAG,CAAC,cAAc,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,YAAY,CAAC,OAAO,CAAC,OAAO,IAAI,CAAC;AAC1G,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { useUnmount } from '@fluentui/react-hooks';\nimport { css, getId } from '../../Utilities';\nimport { notifyHostChanged, registerLayerHost, unregisterLayerHost } from './Layer.notification';\nimport type { ILayerHost, ILayerHostProps } from './LayerHost.types';\n\nexport const LayerHost: React.FunctionComponent<ILayerHostProps> = props => {\n  const { className } = props;\n\n  const [layerHostId] = React.useState(() => getId());\n\n  const { id: hostId = layerHostId } = props;\n\n  const layerHostRef = React.useRef<ILayerHost>({\n    hostId,\n    rootRef: React.useRef<HTMLDivElement | null>(null),\n    notifyLayersChanged: () => {\n      // Nothing, since the default implementation of Layer Host does not need to react to layer changes.\n    },\n  });\n\n  React.useImperativeHandle(props.componentRef, () => layerHostRef.current);\n\n  React.useEffect(() => {\n    registerLayerHost(hostId, layerHostRef.current);\n    notifyHostChanged(hostId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on first render\n  }, []);\n\n  useUnmount(() => {\n    unregisterLayerHost(hostId, layerHostRef.current);\n    notifyHostChanged(hostId);\n  });\n\n  return <div {...props} className={css('ms-LayerHost', className)} ref={layerHostRef.current.rootRef} />;\n};\n"]}
{"version":3,"file":"DocumentCardActions.base.js","sourceRoot":"../src/","sources":["components/DocumentCard/DocumentCardActions.base.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,kBAAkB,EAAE,sBAAsB,EAAE,MAAM,iBAAiB,CAAC;AAC7E,OAAO,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAClC,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAQ1C,IAAM,aAAa,GAAG,kBAAkB,EAA8D,CAAC;AAEvG;;GAEG;AACH;IAA6C,2CAA+C;IAG1F,iCAAY,KAAgC;QAA5C,YACE,kBAAM,KAAK,CAAC,SAGb;QADC,sBAAsB,CAAC,KAAI,CAAC,CAAC;;IAC/B,CAAC;IAEM,wCAAM,GAAb;QAAA,iBA2BC;QA1BO,IAAA,KAA+C,IAAI,CAAC,KAAK,EAAvD,OAAO,aAAA,EAAE,KAAK,WAAA,EAAE,MAAM,YAAA,EAAE,KAAK,WAAA,EAAE,SAAS,eAAe,CAAC;QAEhE,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,MAAO,EAAE;YACxC,KAAK,EAAE,KAAM;YACb,SAAS,WAAA;SACV,CAAC,CAAC;QAEH,OAAO,CACL,6BAAK,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;YAClC,OAAO;gBACN,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM,EAAE,KAAK;oBACxB,OAAO,CACL,6BAAK,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK;wBACjD,oBAAC,UAAU,eAAK,MAAM,EAAI,CACtB,CACP,CAAC;gBACJ,CAAC,CAAC;YAEH,KAAM,GAAG,CAAC,IAAI,CACb,6BAAK,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;gBACpC,oBAAC,IAAI,IAAC,QAAQ,EAAC,MAAM,EAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,GAAI;gBAC9D,KAAK,CACF,CACP,CACG,CACP,CAAC;IACJ,CAAC;IACH,8BAAC;AAAD,CAAC,AArCD,CAA6C,KAAK,CAAC,SAAS,GAqC3D","sourcesContent":["import * as React from 'react';\nimport { classNamesFunction, initializeComponentRef } from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport { IconButton } from '../../Button';\nimport type {\n  IDocumentCardActionsProps,\n  IDocumentCardActionsStyleProps,\n  IDocumentCardActionsStyles,\n} from './DocumentCardActions.types';\nimport type { IProcessedStyleSet } from '../../Styling';\n\nconst getClassNames = classNamesFunction<IDocumentCardActionsStyleProps, IDocumentCardActionsStyles>();\n\n/**\n * {@docCategory DocumentCard}\n */\nexport class DocumentCardActionsBase extends React.Component<IDocumentCardActionsProps, any> {\n  private _classNames: IProcessedStyleSet<IDocumentCardActionsStyles>;\n\n  constructor(props: IDocumentCardActionsProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const { actions, views, styles, theme, className } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n    });\n\n    return (\n      <div className={this._classNames.root}>\n        {actions &&\n          actions.map((action, index) => {\n            return (\n              <div className={this._classNames.action} key={index}>\n                <IconButton {...action} />\n              </div>\n            );\n          })}\n\n        {views! > 0 && (\n          <div className={this._classNames.views}>\n            <Icon iconName=\"View\" className={this._classNames.viewsIcon} />\n            {views}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"]}
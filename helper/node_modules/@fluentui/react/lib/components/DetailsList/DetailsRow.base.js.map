{"version":3,"file":"DetailsRow.base.js","sourceRoot":"../src/","sources":["components/DetailsList/DetailsRow.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  initializeComponentRef,\n  EventGroup,\n  css,\n  shallowCompare,\n  getNativeProps,\n  divProperties,\n  composeComponentAs,\n} from '../../Utilities';\nimport { CheckboxVisibility } from './DetailsList.types';\nimport { DetailsRowCheck } from './DetailsRowCheck';\nimport { GroupSpacer } from '../GroupedList/GroupSpacer';\nimport { DetailsRowFields } from './DetailsRowFields';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { SelectionMode, SELECTION_CHANGE } from '../../Selection';\nimport { CollapseAllVisibility } from '../../GroupedList';\nimport { classNamesFunction } from '../../Utilities';\nimport type { IDisposable } from '../../Utilities';\nimport type { IColumn } from './DetailsList.types';\nimport type { IFocusZone } from '../../FocusZone';\nimport type { IDragDropOptions } from '../../DragDrop';\nimport type { IDetailsRowBaseProps, IDetailsRowStyleProps, IDetailsRowStyles } from './DetailsRow.types';\nimport type { IDetailsRowCheckProps } from './DetailsRowCheck.types';\nimport type { IDetailsRowFieldsProps } from './DetailsRowFields.types';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport { getId } from '../../Utilities';\n\nconst getClassNames = classNamesFunction<IDetailsRowStyleProps, IDetailsRowStyles>();\n\nexport interface IDetailsRowSelectionState {\n  isSelected: boolean;\n  isSelectionModal: boolean;\n}\n\nexport interface IDetailsRowState {\n  selectionState: IDetailsRowSelectionState;\n  columnMeasureInfo?: {\n    index: number;\n    column: IColumn;\n    onMeasureDone: (measuredWidth: number) => void;\n  };\n  isDropping?: boolean;\n}\n\nconst DEFAULT_DROPPING_CSS_CLASS = 'is-dropping';\n\nconst NO_COLUMNS: IColumn[] = [];\n\nexport class DetailsRowBase extends React.Component<IDetailsRowBaseProps, IDetailsRowState> {\n  private _events: EventGroup;\n  private _root = React.createRef<HTMLElement>();\n  private _cellMeasurer = React.createRef<HTMLSpanElement>();\n  private _focusZone = React.createRef<IFocusZone>();\n  private _droppingClassNames: string;\n  /** Whether this.props.onDidMount has been called */\n  private _onDidMountCalled: boolean;\n  private _dragDropSubscription?: IDisposable;\n\n  private _classNames: IProcessedStyleSet<IDetailsRowStyles>;\n  private _rowClassNames: IDetailsRowFieldsProps['rowClassNames'];\n  private _ariaRowDescriptionId: string;\n\n  public static getDerivedStateFromProps(\n    nextProps: IDetailsRowBaseProps,\n    previousState: IDetailsRowState,\n  ): IDetailsRowState {\n    return {\n      ...previousState,\n      selectionState: getSelectionState(nextProps),\n    };\n  }\n\n  constructor(props: IDetailsRowBaseProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this._events = new EventGroup(this);\n\n    this.state = {\n      selectionState: getSelectionState(props),\n      columnMeasureInfo: undefined,\n      isDropping: false,\n    };\n\n    this._droppingClassNames = '';\n  }\n  public componentDidMount(): void {\n    const { dragDropHelper, selection, item, onDidMount } = this.props;\n\n    if (dragDropHelper && this._root.current) {\n      this._dragDropSubscription = dragDropHelper.subscribe(\n        this._root.current,\n        this._events,\n        this._getRowDragDropOptions(),\n      );\n    }\n\n    if (selection) {\n      this._events.on(selection, SELECTION_CHANGE, this._onSelectionChanged);\n    }\n\n    if (onDidMount && item) {\n      // If the item appears later, we should wait for it before calling this method.\n      this._onDidMountCalled = true;\n      onDidMount(this);\n    }\n  }\n\n  public componentDidUpdate(previousProps: IDetailsRowBaseProps) {\n    const state = this.state;\n    const { item, onDidMount } = this.props;\n    const { columnMeasureInfo } = state;\n\n    if (\n      this.props.itemIndex !== previousProps.itemIndex ||\n      this.props.item !== previousProps.item ||\n      this.props.dragDropHelper !== previousProps.dragDropHelper\n    ) {\n      if (this._dragDropSubscription) {\n        this._dragDropSubscription.dispose();\n        delete this._dragDropSubscription;\n      }\n\n      if (this.props.dragDropHelper && this._root.current) {\n        this._dragDropSubscription = this.props.dragDropHelper.subscribe(\n          this._root.current,\n          this._events,\n          this._getRowDragDropOptions(),\n        );\n      }\n    }\n\n    if (columnMeasureInfo && columnMeasureInfo.index >= 0 && this._cellMeasurer.current) {\n      const newWidth = this._cellMeasurer.current.getBoundingClientRect().width;\n\n      columnMeasureInfo.onMeasureDone(newWidth);\n\n      this.setState({\n        columnMeasureInfo: undefined,\n      });\n    }\n\n    if (item && onDidMount && !this._onDidMountCalled) {\n      this._onDidMountCalled = true;\n      onDidMount(this);\n    }\n  }\n\n  public componentWillUnmount(): void {\n    const { item, onWillUnmount } = this.props;\n\n    // Only call the onWillUnmount callback if we have an item.\n    if (onWillUnmount && item) {\n      onWillUnmount(this);\n    }\n\n    if (this._dragDropSubscription) {\n      this._dragDropSubscription.dispose();\n      delete this._dragDropSubscription;\n    }\n\n    this._events.dispose();\n  }\n\n  public shouldComponentUpdate(nextProps: IDetailsRowBaseProps, nextState: IDetailsRowState): boolean {\n    if (this.props.useReducedRowRenderer) {\n      const newSelectionState = getSelectionState(nextProps);\n      if (this.state.selectionState.isSelected !== newSelectionState.isSelected) {\n        return true;\n      }\n      return !shallowCompare(this.props, nextProps);\n    } else {\n      return true;\n    }\n  }\n\n  public render(): JSX.Element {\n    const {\n      className,\n      columns = NO_COLUMNS,\n      dragDropEvents,\n      item,\n      itemIndex,\n      id,\n      flatIndexOffset = 2,\n      onRenderCheck = this._onRenderCheck,\n      onRenderDetailsCheckbox,\n      onRenderItemColumn,\n      onRenderField,\n      getCellValueKey,\n      selectionMode,\n      rowWidth = 0,\n      checkboxVisibility,\n      getRowAriaLabel,\n      getRowAriaDescription,\n      getRowAriaDescribedBy,\n      isGridRow,\n      checkButtonAriaLabel,\n      checkboxCellClassName,\n      /** Alias rowFieldsAs as RowFields and default to DetailsRowFields if rowFieldsAs does not exist */\n      rowFieldsAs,\n      selection,\n      indentWidth,\n      enableUpdateAnimations,\n      compact,\n      theme,\n      styles,\n      cellsByColumn,\n      groupNestingDepth,\n      useFastIcons = true,\n      cellStyleProps,\n      group,\n      focusZoneProps,\n      disabled = false,\n    } = this.props;\n    const { columnMeasureInfo, isDropping } = this.state;\n    const { isSelected = false, isSelectionModal = false } = this.state.selectionState;\n    const isDraggable = dragDropEvents ? !!(dragDropEvents.canDrag && dragDropEvents.canDrag(item)) : undefined;\n    const droppingClassName = isDropping ? this._droppingClassNames || DEFAULT_DROPPING_CSS_CLASS : '';\n    const ariaLabel = getRowAriaLabel ? getRowAriaLabel(item) : undefined;\n    const ariaRowDescription = getRowAriaDescription ? getRowAriaDescription(item) : undefined;\n    const ariaDescribedBy = getRowAriaDescribedBy ? getRowAriaDescribedBy(item) : undefined;\n    const canSelect = !!selection && selection.canSelectItem(item, itemIndex) && !disabled;\n    const isContentUnselectable = selectionMode === SelectionMode.multiple;\n    const showCheckbox = selectionMode !== SelectionMode.none && checkboxVisibility !== CheckboxVisibility.hidden;\n    const ariaSelected = selectionMode === SelectionMode.none ? undefined : isSelected;\n    const ariaPositionInSet = group ? itemIndex - group.startIndex + 1 : undefined;\n    const ariaSetSize = group ? group.count : undefined;\n    const focusZoneDirection = focusZoneProps ? focusZoneProps.direction : FocusZoneDirection.horizontal;\n\n    this._classNames = {\n      ...this._classNames,\n      ...getClassNames(styles, {\n        theme: theme!,\n        isSelected,\n        canSelect: !isContentUnselectable,\n        anySelected: isSelectionModal,\n        checkboxCellClassName,\n        droppingClassName,\n        className,\n        compact,\n        enableUpdateAnimations,\n        cellStyleProps,\n        disabled,\n      }),\n    };\n\n    const rowClassNames: IDetailsRowFieldsProps['rowClassNames'] = {\n      isMultiline: this._classNames.isMultiline,\n      isRowHeader: this._classNames.isRowHeader,\n      cell: this._classNames.cell,\n      cellAnimation: this._classNames.cellAnimation,\n      cellPadded: this._classNames.cellPadded,\n      cellUnpadded: this._classNames.cellUnpadded,\n      fields: this._classNames.fields,\n    };\n\n    // Only re-assign rowClassNames when classNames have changed.\n    // Otherwise, they will cause DetailsRowFields to unnecessarily\n    // re-render, see https://github.com/microsoft/fluentui/pull/8799.\n    // Refactor DetailsRowFields to generate own styles to remove need for this.\n    if (!shallowCompare(this._rowClassNames || {}, rowClassNames)) {\n      this._rowClassNames = rowClassNames;\n    }\n\n    const RowFields = rowFieldsAs ? composeComponentAs(rowFieldsAs, DetailsRowFields) : DetailsRowFields;\n\n    const rowFields = (\n      <RowFields\n        rowClassNames={this._rowClassNames}\n        rowHeaderId={`${id}-header`}\n        cellsByColumn={cellsByColumn}\n        columns={columns}\n        item={item}\n        itemIndex={itemIndex}\n        isSelected={isSelected}\n        columnStartIndex={(showCheckbox ? 1 : 0) + (groupNestingDepth ? 1 : 0)}\n        onRenderItemColumn={onRenderItemColumn}\n        onRenderField={onRenderField}\n        getCellValueKey={getCellValueKey}\n        enableUpdateAnimations={enableUpdateAnimations}\n        cellStyleProps={cellStyleProps}\n      />\n    );\n\n    const defaultRole = 'row';\n    const role = this.props.role ? this.props.role : defaultRole;\n    this._ariaRowDescriptionId = getId('DetailsRow-description');\n\n    // When the user does not specify any column is a row-header in the columns props,\n    // The aria-labelledby of the checkbox does not specify {id}-header.\n    const hasRowHeader = columns.some(column => {\n      return !!column.isRowHeader;\n    });\n    const ariaLabelledby = `${id}-checkbox` + (hasRowHeader ? ` ${id}-header` : '');\n\n    // additional props for rows within a GroupedList\n    // these are needed for treegrid row semantics, but not grid row semantics\n    const groupedListRowProps = isGridRow\n      ? {}\n      : {\n          'aria-level': (groupNestingDepth && groupNestingDepth + 1) || undefined,\n          'aria-posinset': ariaPositionInSet,\n          'aria-setsize': ariaSetSize,\n        };\n\n    return (\n      <FocusZone\n        data-is-focusable={true}\n        {...getNativeProps(this.props, divProperties)}\n        {...(typeof isDraggable === 'boolean'\n          ? {\n              'data-is-draggable': isDraggable, // This data attribute is used by some host applications.\n              draggable: isDraggable,\n            }\n          : {})}\n        {...focusZoneProps}\n        {...groupedListRowProps}\n        direction={focusZoneDirection}\n        elementRef={this._root}\n        componentRef={this._focusZone}\n        role={role}\n        aria-label={ariaLabel}\n        aria-disabled={disabled || undefined}\n        aria-describedby={ariaRowDescription ? this._ariaRowDescriptionId : ariaDescribedBy}\n        className={this._classNames.root}\n        data-selection-index={itemIndex}\n        data-selection-touch-invoke={true}\n        data-selection-disabled={disabled || undefined}\n        data-item-index={itemIndex}\n        aria-rowindex={ariaPositionInSet === undefined ? itemIndex + flatIndexOffset : undefined}\n        data-automationid=\"DetailsRow\"\n        style={{ minWidth: rowWidth }}\n        aria-selected={ariaSelected}\n        allowFocusRoot={true}\n      >\n        {ariaRowDescription ? (\n          <span key=\"description\" role=\"presentation\" hidden={true} id={this._ariaRowDescriptionId}>\n            {ariaRowDescription}\n          </span>\n        ) : null}\n        {showCheckbox && (\n          <div role=\"gridcell\" data-selection-toggle={true} className={this._classNames.checkCell}>\n            {onRenderCheck({\n              id: id ? `${id}-checkbox` : undefined,\n              selected: isSelected,\n              selectionMode,\n              anySelected: isSelectionModal,\n              'aria-label': checkButtonAriaLabel,\n              'aria-labelledby': id ? ariaLabelledby : undefined,\n              canSelect,\n              compact,\n              className: this._classNames.check,\n              theme,\n              isVisible: checkboxVisibility === CheckboxVisibility.always,\n              onRenderDetailsCheckbox: onRenderDetailsCheckbox,\n              useFastIcons,\n            })}\n          </div>\n        )}\n\n        <GroupSpacer\n          indentWidth={indentWidth}\n          role=\"gridcell\"\n          count={groupNestingDepth! - (this.props.collapseAllVisibility === CollapseAllVisibility.hidden ? 1 : 0)}\n        />\n\n        {item && rowFields}\n        {columnMeasureInfo && (\n          <span\n            role=\"presentation\"\n            className={css(this._classNames.cellMeasurer, this._classNames.cell)}\n            ref={this._cellMeasurer}\n          >\n            <RowFields\n              rowClassNames={this._rowClassNames}\n              rowHeaderId={`${id}-header`}\n              columns={[columnMeasureInfo.column]}\n              item={item}\n              itemIndex={itemIndex}\n              columnStartIndex={(showCheckbox ? 1 : 0) + (groupNestingDepth ? 1 : 0) + columns.length}\n              onRenderItemColumn={onRenderItemColumn}\n              getCellValueKey={getCellValueKey}\n            />\n          </span>\n        )}\n\n        <span\n          role=\"checkbox\"\n          className={this._classNames.checkCover}\n          aria-checked={isSelected}\n          data-selection-toggle={true}\n        />\n      </FocusZone>\n    );\n  }\n\n  /**\n   * measure cell at index. and call the call back with the measured cell width when finish measure\n   *\n   * @param index - The cell index\n   * @param onMeasureDone - The call back function when finish measure\n   */\n  public measureCell(index: number, onMeasureDone: (width: number) => void): void {\n    const { columns = NO_COLUMNS } = this.props;\n    const column: IColumn = { ...columns[index] };\n\n    column.minWidth = 0;\n    column.maxWidth = 999999;\n\n    delete column.calculatedWidth;\n\n    this.setState({\n      columnMeasureInfo: {\n        index,\n        column,\n        onMeasureDone,\n      },\n    });\n  }\n\n  public focus(forceIntoFirstElement: boolean = false): boolean {\n    return !!this._focusZone.current?.focus(forceIntoFirstElement);\n  }\n\n  protected _onRenderCheck(props: IDetailsRowCheckProps) {\n    return <DetailsRowCheck {...props} />;\n  }\n\n  private _onSelectionChanged = (): void => {\n    const selectionState = getSelectionState(this.props);\n\n    if (!shallowCompare(selectionState, this.state.selectionState)) {\n      this.setState({\n        selectionState: selectionState,\n      });\n    }\n  };\n\n  private _getRowDragDropOptions(): IDragDropOptions {\n    const { item, itemIndex, dragDropEvents, eventsToRegister } = this.props;\n    const options = {\n      eventMap: eventsToRegister,\n      selectionIndex: itemIndex,\n      context: { data: item, index: itemIndex },\n      canDrag: dragDropEvents!.canDrag,\n      canDrop: dragDropEvents!.canDrop,\n      onDragStart: dragDropEvents!.onDragStart,\n      updateDropState: this._updateDroppingState,\n      onDrop: dragDropEvents!.onDrop,\n      onDragEnd: dragDropEvents!.onDragEnd,\n      onDragOver: dragDropEvents!.onDragOver,\n    };\n\n    return options;\n  }\n\n  /**\n   * update isDropping state based on the input value, which is used to change style during drag and drop\n   *\n   * when change to true, that means drag enter. we will add default dropping class name\n   * or the custom dropping class name (return result from onDragEnter) to the root elemet.\n   *\n   * when change to false, that means drag leave. we will remove the dropping class name from root element.\n   *\n   * @param newValue - New isDropping state value\n   * @param event - The event trigger dropping state change which can be dragenter, dragleave etc\n   */\n  private _updateDroppingState = (newValue: boolean, event: DragEvent): void => {\n    const { isDropping } = this.state;\n    const { dragDropEvents, item } = this.props;\n\n    if (!newValue) {\n      if (dragDropEvents!.onDragLeave) {\n        dragDropEvents!.onDragLeave(item, event);\n      }\n    } else if (dragDropEvents!.onDragEnter) {\n      this._droppingClassNames = dragDropEvents!.onDragEnter(item, event);\n    }\n\n    if (isDropping !== newValue) {\n      this.setState({ isDropping: newValue });\n    }\n  };\n}\n\nfunction getSelectionState(props: IDetailsRowBaseProps): IDetailsRowSelectionState {\n  const { itemIndex, selection } = props;\n\n  return {\n    isSelected: !!selection?.isIndexSelected(itemIndex),\n    isSelectionModal: !!selection?.isModal?.(),\n  };\n}\n"]}
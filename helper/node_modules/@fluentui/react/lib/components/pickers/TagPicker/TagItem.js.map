{"version":3,"file":"TagItem.js","sourceRoot":"../src/","sources":["components/pickers/TagPicker/TagItem.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,MAAM,EAAE,kBAAkB,EAAE,MAAM,oBAAoB,CAAC;AAChE,OAAO,EAAE,UAAU,EAAW,MAAM,iBAAiB,CAAC;AACtD,OAAO,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAC;AAC7C,OAAO,EAAE,KAAK,EAAE,MAAM,uBAAuB,CAAC;AAG9C,IAAM,aAAa,GAAG,kBAAkB,EAAsC,CAAC;AAE/E;;GAEG;AACH,MAAM,CAAC,IAAM,WAAW,GAAG,UAAC,KAAoB;IAE5C,IAAA,KAAK,GAYH,KAAK,MAZF,EACL,MAAM,GAWJ,KAAK,OAXD,EACN,QAAQ,GAUN,KAAK,SAVC,EACR,QAAQ,GASN,KAAK,SATC,EACR,8BAA8B,GAQ5B,KAAK,+BARuB,EAC9B,QAAQ,GAON,KAAK,SAPC,EACR,SAAS,GAMP,KAAK,UANE,EACT,KAAK,GAKH,KAAK,MALF,EACL,YAAY,GAIV,KAAK,aAJK,EACZ,qBAAqB,GAGnB,KAAK,sBAHc,EACrB,KAEE,KAAK,MAFsE,EAA7E,KAAK,mBAAG,OAAO,KAAK,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,KAAA,EAC7E,qBAAqB,GACnB,KAAK,sBADc,CACb;IAEV,IAAM,SAAS,GAAG,KAAK,CAAC,SAAS,EAAW,CAAC;IAE7C,IAAM,WAAW,GAA4C;;QAC3D,MAAA,SAAS,CAAC,OAAO,0CAAE,KAAK,EAAE,CAAC;IAC7B,CAAC,CAAC;IAEF,IAAM,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE;QACvC,KAAK,EAAE,KAAM;QACb,SAAS,WAAA;QACT,QAAQ,UAAA;QACR,QAAQ,UAAA;KACT,CAAC,CAAC;IAEH,IAAM,MAAM,GAAG,KAAK,EAAE,CAAC;IAEvB,IAAM,aAAa,GAAG,8BAA8B;QAClD,CAAC,CAAC;YACE,eAAe,EAAE,QAAQ;YACzB,QAAQ,EAAE,CAAC;SACZ;QACH,CAAC,CAAC;YACE,QAAQ,EAAE,QAAQ;SACnB,CAAC;IAEN,OAAO,CACL,qDAA2B,KAAK,EAAE,SAAS,EAAE,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,WAAW;QAC9G,8BAAM,SAAS,EAAE,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAK,MAAM,UAAO,IACjE,QAAQ,CACJ;QACP,oBAAC,UAAU,aACT,YAAY,EAAE,SAAS,EACvB,EAAE,EAAE,MAAM,EACV,OAAO,EAAE,YAAY,IACjB,aAAa,IACjB,SAAS,EAAE,qBAAqB,aAArB,qBAAqB,cAArB,qBAAqB,GAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAC1D,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EACtC,SAAS,EAAE,UAAU,CAAC,KAAK,qBACP,MAAM,qBAAgB,MAAM,UAAO,IACvD;QACF,8BAAM,EAAE,EAAK,MAAM,iBAAc,EAAE,MAAM,UACtC,qBAAqB,CACjB,CACH,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,OAAO,GAAG,MAAM,CAAoD,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE;IAClH,KAAK,EAAE,SAAS;CACjB,CAAC,CAAC","sourcesContent":["import * as React from 'react';\n\nimport { styled, classNamesFunction } from '../../../Utilities';\nimport { IconButton, IButton } from '../../../Button';\nimport { getStyles } from './TagItem.styles';\nimport { useId } from '@fluentui/react-hooks';\nimport type { ITagItemProps, ITagItemStyleProps, ITagItemStyles } from './TagPicker.types';\n\nconst getClassNames = classNamesFunction<ITagItemStyleProps, ITagItemStyles>();\n\n/**\n * {@docCategory TagPicker}\n */\nexport const TagItemBase = (props: ITagItemProps) => {\n  const {\n    theme,\n    styles,\n    selected,\n    disabled,\n    enableTagFocusInDisabledPicker,\n    children,\n    className,\n    index,\n    onRemoveItem,\n    removeButtonAriaLabel,\n    title = typeof props.children === 'string' ? props.children : props.item.name,\n    removeButtonIconProps,\n  } = props;\n\n  const buttonRef = React.createRef<IButton>();\n\n  const handleClick: React.MouseEventHandler<HTMLDivElement> = () => {\n    buttonRef.current?.focus();\n  };\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className,\n    selected,\n    disabled,\n  });\n\n  const itemId = useId();\n\n  const disabledAttrs = enableTagFocusInDisabledPicker\n    ? {\n        'aria-disabled': disabled,\n        tabindex: 0,\n      }\n    : {\n        disabled: disabled,\n      };\n\n  return (\n    <div data-selection-index={index} className={classNames.root} role={'listitem'} key={index} onClick={handleClick}>\n      <span className={classNames.text} title={title} id={`${itemId}-text`}>\n        {children}\n      </span>\n      <IconButton\n        componentRef={buttonRef}\n        id={itemId}\n        onClick={onRemoveItem}\n        {...disabledAttrs}\n        iconProps={removeButtonIconProps ?? { iconName: 'Cancel' }}\n        styles={{ icon: { fontSize: '12px' } }}\n        className={classNames.close}\n        aria-labelledby={`${itemId}-removeLabel ${itemId}-text`}\n      />\n      <span id={`${itemId}-removeLabel`} hidden>\n        {removeButtonAriaLabel}\n      </span>\n    </div>\n  );\n};\n\nexport const TagItem = styled<ITagItemProps, ITagItemStyleProps, ITagItemStyles>(TagItemBase, getStyles, undefined, {\n  scope: 'TagItem',\n});\n"]}
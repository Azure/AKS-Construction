{"version":3,"file":"PeoplePickerItemSuggestion.js","sourceRoot":"../src/","sources":["components/pickers/PeoplePicker/PeoplePickerItems/PeoplePickerItemSuggestion.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,kBAAkB,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AACnE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAC3D,OAAO,EAAE,SAAS,EAAE,MAAM,qCAAqC,CAAC;AAShE,IAAM,aAAa,GAAG,kBAAkB,EAA4E,CAAC;AAErH,MAAM,CAAC,IAAM,8BAA8B,GAAG,UAAC,KAAuC;IAC5E,IAAA,YAAY,GAA0D,KAAK,aAA/D,EAAE,gBAAgB,GAAwC,KAAK,iBAA7C,EAAE,OAAO,GAA+B,KAAK,QAApC,EAAE,MAAM,GAAuB,KAAK,OAA5B,EAAE,KAAK,GAAgB,KAAK,MAArB,EAAE,SAAS,GAAK,KAAK,UAAV,CAAW;IAEpF,IAAM,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE;QACvC,KAAK,EAAE,KAAM;QACb,SAAS,EAAE,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,wBAAwB,CAAC,IAAI,SAAS;KACxF,CAAC,CAAC;IAEH,IAAM,aAAa,GACjB,UAAU,CAAC,kBAAkB,IAAI,UAAU,CAAC,kBAAkB,CAAC,OAAO;QACpE,CAAC,CAAE,UAAU,CAAC,kBAAkB,CAAC,OAAsE;QACvG,CAAC,CAAC,SAAS,CAAC;IAEhB,OAAO,CACL,6BAAK,SAAS,EAAE,UAAU,CAAC,IAAI;QAC7B,oBAAC,OAAO,aACN,IAAI,EAAE,WAAW,CAAC,MAAM,EACxB,MAAM,EAAE,aAAa,EACrB,SAAS,EAAE,UAAU,CAAC,cAAc,EACpC,iBAAiB,EAAE,CAAC,OAAO,EAC3B,mBAAmB,EAAE,KAAK,IACtB,YAAY,EAChB,CACE,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,0BAA0B,GAAG,MAAM,CAI9C,8BAA8B,EAAE,SAAS,EAAE,SAAS,EAAE,EAAE,KAAK,EAAE,4BAA4B,EAAE,CAAC,CAAC","sourcesContent":["import * as React from 'react';\n\nimport { classNamesFunction, styled } from '../../../../Utilities';\nimport { Persona, PersonaSize } from '../../../../Persona';\nimport { getStyles } from './PeoplePickerItemSuggestion.styles';\nimport type { IStyleFunctionOrObject } from '../../../../Utilities';\nimport type { IPersonaStyleProps, IPersonaStyles } from '../../../../Persona';\nimport type {\n  IPeoplePickerItemSuggestionProps,\n  IPeoplePickerItemSuggestionStyleProps,\n  IPeoplePickerItemSuggestionStyles,\n} from './PeoplePickerItem.types';\n\nconst getClassNames = classNamesFunction<IPeoplePickerItemSuggestionStyleProps, IPeoplePickerItemSuggestionStyles>();\n\nexport const PeoplePickerItemSuggestionBase = (props: IPeoplePickerItemSuggestionProps) => {\n  const { personaProps, suggestionsProps, compact, styles, theme, className } = props;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className: (suggestionsProps && suggestionsProps.suggestionsItemClassName) || className,\n  });\n\n  const personaStyles =\n    classNames.subComponentStyles && classNames.subComponentStyles.persona\n      ? (classNames.subComponentStyles.persona as IStyleFunctionOrObject<IPersonaStyleProps, IPersonaStyles>)\n      : undefined;\n\n  return (\n    <div className={classNames.root}>\n      <Persona\n        size={PersonaSize.size24}\n        styles={personaStyles}\n        className={classNames.personaWrapper}\n        showSecondaryText={!compact}\n        showOverflowTooltip={false}\n        {...personaProps}\n      />\n    </div>\n  );\n};\n\nexport const PeoplePickerItemSuggestion = styled<\n  IPeoplePickerItemSuggestionProps,\n  IPeoplePickerItemSuggestionStyleProps,\n  IPeoplePickerItemSuggestionStyles\n>(PeoplePickerItemSuggestionBase, getStyles, undefined, { scope: 'PeoplePickerItemSuggestion' });\n"]}
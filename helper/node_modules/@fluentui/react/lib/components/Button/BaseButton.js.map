{"version":3,"file":"BaseButton.js","sourceRoot":"../src/","sources":["components/Button/BaseButton.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  anchorProperties,\n  assign,\n  buttonProperties,\n  createMergedRef,\n  css,\n  getId,\n  getNativeProps,\n  initializeComponentRef,\n  memoizeFunction,\n  mergeAriaAttributeValues,\n  nullRender,\n  portalContainsElement,\n  setFocusVisibility,\n  warnConditionallyRequiredProps,\n  warnDeprecations,\n  Async,\n  EventGroup,\n  FocusRects,\n  KeyCodes,\n} from '../../Utilities';\nimport { Icon, FontIcon, ImageIcon } from '../../Icon';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { ContextualMenu } from '../../ContextualMenu';\nimport { getBaseButtonClassNames } from './BaseButton.classNames';\nimport { getSplitButtonClassNames as getBaseSplitButtonClassNames } from './SplitButton/SplitButton.classNames';\nimport { KeytipData } from '../../KeytipData';\nimport type { IRenderFunction } from '../../Utilities';\nimport type { IContextualMenuProps } from '../../ContextualMenu';\nimport type { IButtonProps, IButton } from './Button.types';\nimport type { IButtonClassNames } from './BaseButton.classNames';\nimport type { ISplitButtonClassNames } from './SplitButton/SplitButton.classNames';\nimport type { IKeytipProps } from '../../Keytip';\nimport { composeComponentAs } from '../../Utilities';\n\n/**\n * {@docCategory Button}\n */\nexport interface IBaseButtonProps extends IButtonProps {\n  baseClassName?: string;\n  variantClassName?: string;\n}\n\n/**\n * {@docCategory Button}\n */\nexport interface IBaseButtonState {\n  menuHidden: boolean;\n}\n\nconst TouchIdleDelay = 500; /* ms */\nconst COMPONENT_NAME = 'BaseButton';\n\n/**\n * {@docCategory Button}\n */\nexport class BaseButton extends React.Component<IBaseButtonProps, IBaseButtonState> implements IButton {\n  private get _isSplitButton(): boolean {\n    return !!this.props.menuProps && !!this.props.onClick && this.props.split === true;\n  }\n\n  public static defaultProps: Partial<IBaseButtonProps> = {\n    baseClassName: 'ms-Button',\n    styles: {},\n    split: false,\n  };\n\n  private _async: Async;\n  private _events: EventGroup;\n  private _buttonElement = React.createRef<HTMLElement>();\n  private _splitButtonContainer = React.createRef<HTMLDivElement>();\n  private _mergedRef = createMergedRef<HTMLElement>();\n  private _labelId: string;\n  private _descriptionId: string;\n  private _ariaDescriptionId: string;\n  private _classNames: IButtonClassNames;\n  private _processingTouch: boolean;\n  private _lastTouchTimeoutId: number | undefined;\n  private _renderedVisibleMenu: boolean = false;\n\n  // These fields will be used to set corresponding props on the menu.\n  private _menuShouldFocusOnContainer: boolean | undefined;\n  private _menuShouldFocusOnMount: boolean | undefined;\n\n  private _getMemoizedMenuButtonKeytipProps = memoizeFunction((keytipProps: IKeytipProps) => {\n    return {\n      ...keytipProps,\n      hasMenu: true,\n    };\n  });\n\n  constructor(props: IBaseButtonProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n\n    warnConditionallyRequiredProps(COMPONENT_NAME, props, ['menuProps', 'onClick'], 'split', this.props.split!);\n\n    warnDeprecations(COMPONENT_NAME, props, {\n      rootProps: undefined,\n      description: 'secondaryText',\n      toggled: 'checked',\n    });\n    this._labelId = getId();\n    this._descriptionId = getId();\n    this._ariaDescriptionId = getId();\n\n    this.state = {\n      menuHidden: true,\n    };\n  }\n\n  public render(): JSX.Element {\n    const {\n      ariaDescription,\n      ariaLabel,\n      ariaHidden,\n      className,\n      disabled,\n      allowDisabledFocus,\n      primaryDisabled,\n      // eslint-disable-next-line deprecation/deprecation\n      secondaryText = this.props.description,\n      href,\n      iconProps,\n      menuIconProps,\n      styles,\n      checked,\n      variantClassName,\n      theme,\n      toggle,\n      getClassNames,\n      role,\n    } = this.props;\n\n    const { menuHidden } = this.state;\n\n    // Button is disabled if the whole button (in case of splitButton is disabled) or if the primary action is disabled\n    const isPrimaryButtonDisabled = disabled || primaryDisabled;\n\n    this._classNames = getClassNames\n      ? getClassNames(\n          theme!,\n          className!,\n          variantClassName!,\n          iconProps && iconProps.className,\n          menuIconProps && menuIconProps.className,\n          isPrimaryButtonDisabled!,\n          checked!,\n          !menuHidden,\n          !!this.props.menuProps,\n          this.props.split,\n          !!allowDisabledFocus,\n        )\n      : getBaseButtonClassNames(\n          theme!,\n          styles!,\n          className!,\n          variantClassName!,\n          iconProps && iconProps.className,\n          menuIconProps && menuIconProps.className,\n          isPrimaryButtonDisabled!,\n          !!this.props.menuProps,\n          checked!,\n          !menuHidden,\n          this.props.split,\n        );\n\n    const { _ariaDescriptionId, _labelId, _descriptionId } = this;\n    // Anchor tag cannot be disabled hence in disabled state rendering\n    // anchor button as normal button\n    const renderAsAnchor: boolean = !isPrimaryButtonDisabled && !!href;\n    const tag = renderAsAnchor ? 'a' : 'button';\n\n    const nativeProps = getNativeProps(\n      // eslint-disable-next-line deprecation/deprecation\n      assign(renderAsAnchor ? {} : { type: 'button' }, this.props.rootProps, this.props),\n      renderAsAnchor ? anchorProperties : buttonProperties,\n      [\n        'disabled', // let disabled buttons be focused and styled as disabled.\n      ],\n    );\n\n    // Check for ariaLabel passed in via Button props, and fall back to aria-label passed in via native props\n    const resolvedAriaLabel = ariaLabel || (nativeProps as any)['aria-label'];\n\n    // Check for ariaDescription, secondaryText or aria-describedby in the native props to determine source of\n    // aria-describedby. Otherwise default to undefined so property does not appear in output.\n    let ariaDescribedBy = undefined;\n    if (ariaDescription) {\n      ariaDescribedBy = _ariaDescriptionId;\n    } else if (secondaryText && this.props.onRenderDescription !== nullRender) {\n      // for buttons like CompoundButton with a valid onRenderDescription, we need to set an ariaDescribedBy\n      // for buttons that do not render anything (via nullRender), we should not set an ariaDescribedBy\n      ariaDescribedBy = _descriptionId;\n    } else if ((nativeProps as any)['aria-describedby']) {\n      ariaDescribedBy = (nativeProps as any)['aria-describedby'];\n    }\n\n    // If an explicit aria-labelledby is given, use that and we're done.\n    // If any kind of description is given (which will end up as an aria-describedby attribute)\n    // and no ariaLabel is specified, set the labelledby element.\n    // Otherwise, the button is labeled implicitly by the descendent text on the button (if it exists).\n    let ariaLabelledBy = undefined;\n    if ((nativeProps as any)['aria-labelledby']) {\n      ariaLabelledBy = (nativeProps as any)['aria-labelledby'];\n    } else if (ariaDescribedBy && !resolvedAriaLabel) {\n      ariaLabelledBy = this._hasText() ? _labelId : undefined;\n    }\n\n    const dataIsFocusable =\n      (this.props as any)['data-is-focusable'] === false || (disabled && !allowDisabledFocus) || this._isSplitButton\n        ? false\n        : true;\n\n    const isCheckboxTypeRole = role === 'menuitemcheckbox' || role === 'checkbox';\n    // if isCheckboxTypeRole, always return a checked value.\n    // Otherwise only return checked value if toggle is set to true.\n    // This is because role=\"checkbox\" always needs to have an aria-checked value\n    // but our checked prop only sets aria-pressed if we mark the button as a toggle=\"true\"\n    const checkedOrPressedValue = isCheckboxTypeRole ? !!checked : toggle === true ? !!checked : undefined;\n\n    const buttonProps = assign(nativeProps, {\n      className: this._classNames.root,\n      // eslint-disable-next-line deprecation/deprecation\n      ref: this._mergedRef(this.props.elementRef, this._buttonElement),\n      disabled: isPrimaryButtonDisabled && !allowDisabledFocus,\n      onKeyDown: this._onKeyDown,\n      onKeyPress: this._onKeyPress,\n      onKeyUp: this._onKeyUp,\n      onMouseDown: this._onMouseDown,\n      onMouseUp: this._onMouseUp,\n      onClick: this._onClick,\n      'aria-label': resolvedAriaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-describedby': ariaDescribedBy,\n      'aria-disabled': isPrimaryButtonDisabled,\n      'data-is-focusable': dataIsFocusable,\n      // aria-pressed attribute should only be present for toggle buttons\n      // aria-checked attribute should only be present for toggle buttons with checkbox type role\n      [isCheckboxTypeRole ? 'aria-checked' : 'aria-pressed']: checkedOrPressedValue,\n    });\n\n    if (ariaHidden) {\n      buttonProps['aria-hidden'] = true;\n    }\n\n    if (this._isSplitButton) {\n      return this._onRenderSplitButtonContent(tag, buttonProps);\n    } else if (this.props.menuProps) {\n      const { id = `${this._labelId}-menu` } = this.props.menuProps;\n      assign(buttonProps, {\n        'aria-expanded': !menuHidden,\n        'aria-controls': !menuHidden ? id : null,\n        'aria-haspopup': true,\n      });\n    }\n\n    return this._onRenderContent(tag, buttonProps);\n  }\n\n  public componentDidMount() {\n    // For split buttons, touching anywhere in the button should drop the dropdown, which should contain the\n    // primary action. This gives more hit target space for touch environments. We're setting the onpointerdown here,\n    // because React does not support Pointer events yet.\n    if (this._isSplitButton && this._splitButtonContainer.current) {\n      if ('onpointerdown' in this._splitButtonContainer.current) {\n        this._events.on(this._splitButtonContainer.current, 'pointerdown', this._onPointerDown, true);\n      }\n      if ('onpointerup' in this._splitButtonContainer.current && this.props.onPointerUp) {\n        this._events.on(this._splitButtonContainer.current, 'pointerup', this.props.onPointerUp, true);\n      }\n    }\n  }\n\n  public componentDidUpdate(prevProps: IBaseButtonProps, prevState: IBaseButtonState) {\n    // If Button's menu was closed, run onAfterMenuDismiss.\n    if (this.props.onAfterMenuDismiss && !prevState.menuHidden && this.state.menuHidden) {\n      this.props.onAfterMenuDismiss();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._async.dispose();\n    this._events.dispose();\n  }\n\n  public focus(): void {\n    if (this._isSplitButton && this._splitButtonContainer.current) {\n      setFocusVisibility(true);\n      this._splitButtonContainer.current.focus();\n    } else if (this._buttonElement.current) {\n      setFocusVisibility(true);\n      this._buttonElement.current.focus();\n    }\n  }\n\n  public dismissMenu(): void {\n    this._dismissMenu();\n  }\n\n  public openMenu(shouldFocusOnContainer?: boolean, shouldFocusOnMount?: boolean): void {\n    this._openMenu(shouldFocusOnContainer, shouldFocusOnMount);\n  }\n\n  private _onRenderContent(tag: any, buttonProps: IButtonProps): JSX.Element {\n    const props = this.props;\n    const Tag = tag;\n    const {\n      menuIconProps,\n      menuProps,\n      onRenderIcon = this._onRenderIcon,\n      onRenderAriaDescription = this._onRenderAriaDescription,\n      onRenderChildren = this._onRenderChildren,\n      // eslint-disable-next-line deprecation/deprecation\n      onRenderMenu = this._onRenderMenu,\n      onRenderMenuIcon = this._onRenderMenuIcon,\n      disabled,\n    } = props;\n    let { keytipProps } = props;\n    if (keytipProps && menuProps) {\n      keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n    }\n\n    const Button = (keytipAttributes?: any): JSX.Element => (\n      <Tag {...buttonProps} {...keytipAttributes}>\n        <span className={this._classNames.flexContainer} data-automationid=\"splitbuttonprimary\">\n          {onRenderIcon(props, this._onRenderIcon)}\n          {this._onRenderTextContents()}\n          {onRenderAriaDescription(props, this._onRenderAriaDescription)}\n          {onRenderChildren(props, this._onRenderChildren)}\n          {!this._isSplitButton &&\n            (menuProps || menuIconProps || this.props.onRenderMenuIcon) &&\n            onRenderMenuIcon(this.props, this._onRenderMenuIcon)}\n          {menuProps &&\n            !menuProps.doNotLayer &&\n            this._shouldRenderMenu() &&\n            onRenderMenu(this._getMenuProps(menuProps), this._onRenderMenu)}\n        </span>\n      </Tag>\n    );\n\n    const Content = keytipProps ? (\n      // If we're making a split button, we won't put the keytip here\n      <KeytipData\n        keytipProps={!this._isSplitButton ? keytipProps : undefined}\n        ariaDescribedBy={(buttonProps as any)['aria-describedby']}\n        disabled={disabled}\n      >\n        {(keytipAttributes: any): JSX.Element => Button(keytipAttributes)}\n      </KeytipData>\n    ) : (\n      Button()\n    );\n\n    if (menuProps && menuProps.doNotLayer) {\n      return (\n        <>\n          {Content}\n          {this._shouldRenderMenu() && onRenderMenu(this._getMenuProps(menuProps), this._onRenderMenu)}\n        </>\n      );\n    }\n\n    return (\n      <>\n        {Content}\n        <FocusRects />\n      </>\n    );\n  }\n\n  /**\n   * Method to help determine if the menu's component tree should\n   * be rendered. It takes into account whether the menu is expanded,\n   * whether it is a persisted menu and whether it has been shown to the user.\n   */\n  private _shouldRenderMenu() {\n    const { menuHidden } = this.state;\n    // eslint-disable-next-line deprecation/deprecation\n    const { persistMenu, renderPersistedMenuHiddenOnMount } = this.props;\n\n    if (!menuHidden) {\n      // Always should render a menu when it is expanded\n      return true;\n    } else if (persistMenu && (this._renderedVisibleMenu || renderPersistedMenuHiddenOnMount)) {\n      // _renderedVisibleMenu ensures that the first rendering of\n      // the menu happens on-screen, as edge's scrollbar calculations are off if done while hidden.\n      return true;\n    }\n\n    return false;\n  }\n\n  private _onRenderIcon = (\n    buttonProps?: IButtonProps,\n    defaultRender?: IRenderFunction<IButtonProps>,\n  ): JSX.Element | null => {\n    const { iconProps } = this.props;\n\n    if (iconProps && (iconProps.iconName !== undefined || iconProps.imageProps)) {\n      const { className, imageProps, ...rest } = iconProps;\n\n      // If the styles prop is specified as part of iconProps, fall back to regular Icon as FontIcon and ImageIcon\n      // do not have this prop.\n      if (iconProps.styles) {\n        return <Icon className={css(this._classNames.icon, className)} imageProps={imageProps} {...rest} />;\n      }\n      if (iconProps.iconName) {\n        return <FontIcon className={css(this._classNames.icon, className)} {...rest} />;\n      }\n      if (imageProps) {\n        return <ImageIcon className={css(this._classNames.icon, className)} imageProps={imageProps} {...rest} />;\n      }\n    }\n    return null;\n  };\n\n  private _onRenderTextContents = (): JSX.Element | (JSX.Element | null)[] => {\n    const {\n      text,\n      children,\n      // eslint-disable-next-line deprecation/deprecation\n      secondaryText = this.props.description,\n      onRenderText = this._onRenderText,\n      onRenderDescription = this._onRenderDescription,\n    } = this.props;\n\n    if (text || typeof children === 'string' || secondaryText) {\n      return (\n        <span className={this._classNames.textContainer}>\n          {onRenderText(this.props, this._onRenderText)}\n          {onRenderDescription(this.props, this._onRenderDescription)}\n        </span>\n      );\n    }\n    return [onRenderText(this.props, this._onRenderText), onRenderDescription(this.props, this._onRenderDescription)];\n  };\n\n  private _onRenderText = (): JSX.Element | null => {\n    let { text } = this.props;\n    const { children } = this.props;\n\n    // For backwards compat, we should continue to take in the text content from children.\n    if (text === undefined && typeof children === 'string') {\n      text = children;\n    }\n\n    if (this._hasText()) {\n      return (\n        <span key={this._labelId} className={this._classNames.label} id={this._labelId}>\n          {text}\n        </span>\n      );\n    }\n\n    return null;\n  };\n\n  private _hasText(): boolean {\n    // _onRenderTextContents and _onRenderText do not perform the same checks. Below is parity with what _onRenderText\n    // used to have before the refactor that introduced this function. _onRenderTextContents does not require props.\n    // text to be undefined in order for props.children to be used as a fallback.\n    // Purely a code maintainability/reuse issue, but logged as Issue #4979.\n    return this.props.text !== null && (this.props.text !== undefined || typeof this.props.children === 'string');\n  }\n\n  private _onRenderChildren = (): JSX.Element | null => {\n    const { children } = this.props;\n\n    // If children is just a string, either it or the text will be rendered via onRenderLabel\n    // If children is another component, it will be rendered after text\n    if (typeof children === 'string') {\n      return null;\n    }\n\n    return children as any;\n  };\n\n  private _onRenderDescription = (props: IButtonProps) => {\n    // eslint-disable-next-line deprecation/deprecation\n    const { secondaryText = this.props.description } = props;\n\n    // ms-Button-description is only shown when the button type is compound.\n    // In other cases it will not be displayed.\n    return secondaryText ? (\n      <span key={this._descriptionId} className={this._classNames.description} id={this._descriptionId}>\n        {secondaryText}\n      </span>\n    ) : null;\n  };\n\n  private _onRenderAriaDescription = () => {\n    const { ariaDescription } = this.props;\n\n    // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan,\n    // otherwise it will be assigned to descriptionSpan.\n    return ariaDescription ? (\n      <span className={this._classNames.screenReaderText} id={this._ariaDescriptionId}>\n        {ariaDescription}\n      </span>\n    ) : null;\n  };\n\n  private _onRenderMenuIcon = (props: IButtonProps): JSX.Element | null => {\n    const { menuIconProps } = this.props;\n\n    return <FontIcon iconName=\"ChevronDown\" {...menuIconProps} className={this._classNames.menuIcon} />;\n  };\n\n  private _getMenuProps(menuProps: IContextualMenuProps): IContextualMenuProps {\n    const { persistMenu } = this.props;\n    const { menuHidden } = this.state;\n\n    // the accessible menu label (accessible name) has a relationship to the button.\n    // If the menu props do not specify an explicit value for aria-label or aria-labelledBy,\n    // AND the button has text, we'll set the menu aria-labelledBy to the text element id.\n    if (!menuProps.ariaLabel && !menuProps.labelElementId && this._hasText()) {\n      menuProps = { ...menuProps, labelElementId: this._labelId };\n    }\n\n    return {\n      id: this._labelId + '-menu',\n      directionalHint: DirectionalHint.bottomLeftEdge,\n      ...menuProps,\n      shouldFocusOnContainer: this._menuShouldFocusOnContainer,\n      shouldFocusOnMount: this._menuShouldFocusOnMount,\n      hidden: persistMenu ? menuHidden : undefined,\n      className: css('ms-BaseButton-menuhost', menuProps.className),\n      target: this._isSplitButton ? this._splitButtonContainer.current : this._buttonElement.current,\n      onDismiss: this._onDismissMenu,\n    };\n  }\n\n  private _onRenderMenu = (menuProps: IContextualMenuProps): JSX.Element => {\n    const MenuType = this.props.menuAs ? composeComponentAs(this.props.menuAs, ContextualMenu) : ContextualMenu;\n\n    return <MenuType {...menuProps} />;\n  };\n\n  private _onDismissMenu: IContextualMenuProps['onDismiss'] = ev => {\n    const { menuProps } = this.props;\n\n    if (menuProps && menuProps.onDismiss) {\n      menuProps.onDismiss(ev);\n    }\n    if (!ev || !ev.defaultPrevented) {\n      this._dismissMenu();\n    }\n  };\n\n  private _dismissMenu = (): void => {\n    this._menuShouldFocusOnMount = undefined;\n    this._menuShouldFocusOnContainer = undefined;\n    this.setState({ menuHidden: true });\n  };\n\n  private _openMenu = (shouldFocusOnContainer?: boolean, shouldFocusOnMount: boolean = true): void => {\n    if (this.props.menuProps) {\n      this._menuShouldFocusOnContainer = shouldFocusOnContainer;\n      this._menuShouldFocusOnMount = shouldFocusOnMount;\n      this._renderedVisibleMenu = true;\n      this.setState({ menuHidden: false });\n    }\n  };\n\n  private _onToggleMenu = (shouldFocusOnContainer: boolean): void => {\n    let shouldFocusOnMount = true;\n    if (this.props.menuProps && this.props.menuProps.shouldFocusOnMount === false) {\n      shouldFocusOnMount = false;\n    }\n\n    this.state.menuHidden ? this._openMenu(shouldFocusOnContainer, shouldFocusOnMount) : this._dismissMenu();\n  };\n\n  private _onRenderSplitButtonContent(tag: any, buttonProps: IButtonProps): JSX.Element {\n    const {\n      styles = {},\n      disabled,\n      allowDisabledFocus,\n      checked,\n      getSplitButtonClassNames,\n      primaryDisabled,\n      menuProps,\n      toggle,\n      role,\n      primaryActionButtonProps,\n    } = this.props;\n    let { keytipProps } = this.props;\n    const { menuHidden } = this.state;\n\n    const classNames = getSplitButtonClassNames\n      ? getSplitButtonClassNames(!!disabled, !menuHidden, !!checked, !!allowDisabledFocus)\n      : styles && getBaseSplitButtonClassNames(styles!, !!disabled, !menuHidden, !!checked, !!primaryDisabled);\n\n    assign(buttonProps, {\n      onClick: undefined,\n      onPointerDown: undefined,\n      onPointerUp: undefined,\n      tabIndex: -1,\n      'data-is-focusable': false,\n    });\n\n    if (keytipProps && menuProps) {\n      keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n    }\n\n    const containerProps = getNativeProps<React.HTMLAttributes<HTMLSpanElement>>(buttonProps, [], ['disabled']);\n\n    // Add additional props to apply on primary action button\n    if (primaryActionButtonProps) {\n      assign(buttonProps, primaryActionButtonProps);\n    }\n\n    const SplitButton = (keytipAttributes?: any): JSX.Element => (\n      <div\n        {...containerProps}\n        data-ktp-target={keytipAttributes ? keytipAttributes['data-ktp-target'] : undefined}\n        role={role ? role : 'button'}\n        aria-disabled={disabled}\n        aria-haspopup={true}\n        aria-expanded={!menuHidden}\n        aria-pressed={toggle ? !!checked : undefined} // should only be present for toggle buttons\n        aria-describedby={mergeAriaAttributeValues(\n          buttonProps['aria-describedby'],\n          keytipAttributes ? keytipAttributes['aria-describedby'] : undefined,\n        )}\n        className={classNames && classNames.splitButtonContainer}\n        onKeyDown={this._onSplitButtonContainerKeyDown}\n        onTouchStart={this._onTouchStart}\n        ref={this._splitButtonContainer}\n        data-is-focusable={true}\n        onClick={!disabled && !primaryDisabled ? this._onSplitButtonPrimaryClick : undefined}\n        tabIndex={(!disabled && !primaryDisabled) || allowDisabledFocus ? 0 : undefined}\n        aria-roledescription={buttonProps['aria-roledescription']}\n        onFocusCapture={this._onSplitContainerFocusCapture}\n      >\n        <span style={{ display: 'flex', width: '100%' }}>\n          {this._onRenderContent(tag, buttonProps)}\n          {this._onRenderSplitButtonMenuButton(classNames, keytipAttributes)}\n          {this._onRenderSplitButtonDivider(classNames)}\n        </span>\n      </div>\n    );\n\n    return keytipProps ? (\n      <KeytipData keytipProps={keytipProps} disabled={disabled}>\n        {(keytipAttributes: any): JSX.Element => SplitButton(keytipAttributes)}\n      </KeytipData>\n    ) : (\n      SplitButton()\n    );\n  }\n\n  private _onSplitContainerFocusCapture = (ev: React.FocusEvent<HTMLDivElement>) => {\n    const container = this._splitButtonContainer.current;\n\n    // If the target is coming from the portal we do not need to set focus on the container.\n    if (!container || (ev.target && portalContainsElement(ev.target, container))) {\n      return;\n    }\n\n    // We should never be able to focus the individual buttons in a split button. Focus\n    // should always remain on the container.\n    container.focus();\n  };\n\n  private _onSplitButtonPrimaryClick = (ev: React.MouseEvent<HTMLDivElement>) => {\n    if (!this.state.menuHidden) {\n      this._dismissMenu();\n    }\n\n    if (!this._processingTouch && this.props.onClick) {\n      this.props.onClick(ev);\n    } else if (this._processingTouch) {\n      this._onMenuClick(ev);\n    }\n  };\n\n  private _onRenderSplitButtonDivider(classNames: ISplitButtonClassNames | undefined): JSX.Element | null {\n    if (classNames && classNames.divider) {\n      const onClick = (ev: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        ev.stopPropagation();\n      };\n      return <span className={classNames.divider} aria-hidden={true} onClick={onClick} />;\n    }\n    return null;\n  }\n\n  private _onRenderSplitButtonMenuButton(\n    classNames: ISplitButtonClassNames | undefined,\n    keytipAttributes: any,\n  ): JSX.Element {\n    const {\n      allowDisabledFocus,\n      checked,\n      disabled,\n      splitButtonMenuProps,\n      splitButtonAriaLabel,\n      primaryDisabled,\n    } = this.props;\n    const { menuHidden } = this.state;\n    let menuIconProps = this.props.menuIconProps;\n\n    if (menuIconProps === undefined) {\n      menuIconProps = {\n        iconName: 'ChevronDown',\n      };\n    }\n\n    const splitButtonProps = {\n      ...splitButtonMenuProps,\n      styles: classNames,\n      checked,\n      disabled,\n      allowDisabledFocus,\n      onClick: this._onMenuClick,\n      menuProps: undefined,\n      iconProps: { ...menuIconProps, className: this._classNames.menuIcon },\n      ariaLabel: splitButtonAriaLabel,\n      'aria-haspopup': true,\n      'aria-expanded': !menuHidden,\n      'data-is-focusable': false,\n    };\n\n    // Add data-ktp-execute-target to the split button if the keytip is defined\n    return (\n      <BaseButton\n        {...splitButtonProps}\n        data-ktp-execute-target={keytipAttributes ? keytipAttributes['data-ktp-execute-target'] : keytipAttributes}\n        onMouseDown={this._onMouseDown}\n        tabIndex={primaryDisabled && !allowDisabledFocus ? 0 : -1}\n      />\n    );\n  }\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>) => {\n    // explicity cancelling event so click won't fire after this\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.props.disabled && (ev.which === KeyCodes.enter || ev.which === KeyCodes.space)) {\n      ev.preventDefault();\n      ev.stopPropagation();\n    } else if (!this.props.disabled) {\n      if (this.props.menuProps) {\n        this._onMenuKeyDown(ev);\n      } else if (this.props.onKeyDown !== undefined) {\n        this.props.onKeyDown(ev); // not cancelling event because it's not disabled\n      }\n    }\n  };\n\n  private _onKeyUp = (\n    ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | HTMLSpanElement>,\n  ) => {\n    if (!this.props.disabled && this.props.onKeyUp !== undefined) {\n      this.props.onKeyUp(ev); // not cancelling event because it's not disabled\n    }\n  };\n\n  private _onKeyPress = (\n    ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | HTMLSpanElement>,\n  ) => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (!this.props.disabled && this.props.onKeyPress !== undefined) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.props.onKeyPress(ev); // not cancelling event because it's not disabled\n    }\n  };\n\n  private _onMouseUp = (\n    ev: React.MouseEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | HTMLSpanElement>,\n  ) => {\n    if (!this.props.disabled && this.props.onMouseUp !== undefined) {\n      this.props.onMouseUp(ev); // not cancelling event because it's not disabled\n    }\n  };\n\n  private _onMouseDown = (\n    ev: React.MouseEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | HTMLSpanElement>,\n  ) => {\n    if (!this.props.disabled && this.props.onMouseDown !== undefined) {\n      this.props.onMouseDown(ev); // not cancelling event because it's not disabled\n    }\n  };\n\n  private _onClick = (\n    ev: React.MouseEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | HTMLSpanElement>,\n  ) => {\n    if (!this.props.disabled) {\n      if (this.props.menuProps) {\n        this._onMenuClick(ev);\n      } else if (this.props.onClick !== undefined) {\n        this.props.onClick(ev); // not cancelling event because it's not disabled\n      }\n    }\n  };\n\n  private _onSplitButtonContainerKeyDown = (ev: React.KeyboardEvent<HTMLDivElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n      if (this._buttonElement.current) {\n        this._buttonElement.current.click();\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    } else {\n      this._onMenuKeyDown(ev);\n    }\n  };\n\n  private _onMenuKeyDown = (ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>) => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(ev);\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    const isUp = ev.which === KeyCodes.up;\n    // eslint-disable-next-line deprecation/deprecation\n    const isDown = ev.which === KeyCodes.down;\n\n    if (!ev.defaultPrevented && this._isValidMenuOpenKey(ev)) {\n      const { onMenuClick } = this.props;\n      if (onMenuClick) {\n        onMenuClick(ev, this.props);\n      }\n\n      this._onToggleMenu(false);\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n      // We manually set the focus visibility to true if opening via Enter or Space to account for the scenario where\n      // a user clicks on the button, closes the menu and then opens it via keyboard. In this scenario our default logic\n      // for setting focus visibility is not triggered since there is no keyboard navigation present beforehand.\n      setFocusVisibility(true, ev.target as Element);\n    }\n\n    if (!(ev.altKey || ev.metaKey) && (isUp || isDown)) {\n      // Suppose a menu, with shouldFocusOnMount: false, is open, and user wants to keyboard to the menu items\n      // We need to re-render the menu with shouldFocusOnMount as true.\n\n      if (!this.state.menuHidden && this.props.menuProps) {\n        const currentShouldFocusOnMount =\n          this._menuShouldFocusOnMount !== undefined\n            ? this._menuShouldFocusOnMount\n            : this.props.menuProps.shouldFocusOnMount;\n        if (!currentShouldFocusOnMount) {\n          ev.preventDefault();\n          ev.stopPropagation();\n          this._menuShouldFocusOnMount = true;\n          this.forceUpdate();\n        }\n      }\n    }\n  };\n\n  private _onTouchStart: () => void = () => {\n    if (\n      this._isSplitButton &&\n      this._splitButtonContainer.current &&\n      !('onpointerdown' in this._splitButtonContainer.current)\n    ) {\n      this._handleTouchAndPointerEvent();\n    }\n  };\n\n  private _onPointerDown(\n    ev: PointerEvent &\n      React.PointerEvent<HTMLAnchorElement | HTMLButtonElement | HTMLDivElement | BaseButton | HTMLSpanElement>,\n  ) {\n    const { onPointerDown } = this.props;\n    if (onPointerDown) {\n      onPointerDown(ev);\n    }\n\n    if (ev.pointerType === 'touch') {\n      this._handleTouchAndPointerEvent();\n\n      ev.preventDefault();\n      ev.stopImmediatePropagation();\n    }\n  }\n\n  private _handleTouchAndPointerEvent() {\n    // If we already have an existing timeout from a previous touch and pointer event\n    // cancel that timeout so we can set a new one.\n    if (this._lastTouchTimeoutId !== undefined) {\n      this._async.clearTimeout(this._lastTouchTimeoutId);\n      this._lastTouchTimeoutId = undefined;\n    }\n    this._processingTouch = true;\n\n    this._lastTouchTimeoutId = this._async.setTimeout(() => {\n      this._processingTouch = false;\n      this._lastTouchTimeoutId = undefined;\n\n      // Touch and pointer events don't focus the button naturally,\n      // so adding an imperative focus call to guarantee this behavior.\n      this.focus();\n    }, TouchIdleDelay);\n  }\n\n  /**\n   * Returns if the user hits a valid keyboard key to open the menu\n   * @param ev - the keyboard event\n   * @returns True if user clicks on custom trigger key if enabled or alt + down arrow if not. False otherwise.\n   */\n  private _isValidMenuOpenKey(\n    ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>,\n  ): boolean {\n    if (this.props.menuTriggerKeyCode) {\n      // eslint-disable-next-line deprecation/deprecation\n      return ev.which === this.props.menuTriggerKeyCode;\n    } else if (this.props.menuProps) {\n      // eslint-disable-next-line deprecation/deprecation\n      return ev.which === KeyCodes.down && (ev.altKey || ev.metaKey);\n    }\n\n    // Note: When enter is pressed, we will let the event continue to propagate\n    // to trigger the onClick event on the button\n    return false;\n  }\n\n  private _onMenuClick = (\n    ev: React.MouseEvent<HTMLDivElement | HTMLButtonElement | HTMLAnchorElement | HTMLSpanElement>,\n  ) => {\n    const { onMenuClick, menuProps } = this.props;\n    if (onMenuClick) {\n      onMenuClick(ev, this.props);\n    }\n\n    // focus on the container by default when the menu is opened with a click event\n    // this differentiates from a keyboard interaction triggering the click event\n    const shouldFocusOnContainer =\n      typeof menuProps?.shouldFocusOnContainer === 'boolean'\n        ? menuProps.shouldFocusOnContainer\n        : (ev.nativeEvent as PointerEvent).pointerType === 'mouse';\n\n    if (!ev.defaultPrevented) {\n      this._onToggleMenu(shouldFocusOnContainer);\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n  };\n}\n"]}
{"version":3,"file":"BaseButton.classNames.js","sourceRoot":"../src/","sources":["components/Button/BaseButton.classNames.ts"],"names":[],"mappings":"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","sourcesContent":["import { memoizeFunction } from '../../Utilities';\nimport { getGlobalClassNames, mergeStyleSets } from '../../Styling';\nimport type { ITheme } from '../../Styling';\nimport type { IButtonStyles } from './Button.types';\n\nexport interface IButtonClassNames {\n  root?: string;\n  flexContainer?: string;\n  textContainer?: string;\n  icon?: string;\n  label?: string;\n  menuIcon?: string;\n  description?: string;\n  screenReaderText?: string;\n}\n\nexport const ButtonGlobalClassNames = {\n  msButton: 'ms-Button',\n  msButtonHasMenu: 'ms-Button--hasMenu',\n  msButtonIcon: 'ms-Button-icon',\n  msButtonMenuIcon: 'ms-Button-menuIcon',\n  msButtonLabel: 'ms-Button-label',\n  msButtonDescription: 'ms-Button-description',\n  msButtonScreenReaderText: 'ms-Button-screenReaderText',\n  msButtonFlexContainer: 'ms-Button-flexContainer',\n  msButtonTextContainer: 'ms-Button-textContainer',\n};\n\nexport const getBaseButtonClassNames = memoizeFunction(\n  (\n    theme: ITheme,\n    styles: IButtonStyles,\n    className: string,\n    variantClassName: string,\n    iconClassName: string | undefined,\n    menuIconClassName: string | undefined,\n    disabled: boolean,\n    hasMenu: boolean,\n    checked: boolean,\n    expanded: boolean,\n    isSplit: boolean | undefined,\n  ): IButtonClassNames => {\n    const classNames = getGlobalClassNames(ButtonGlobalClassNames, theme || {});\n\n    const isExpanded = expanded && !isSplit;\n    return mergeStyleSets({\n      root: [\n        classNames.msButton,\n        styles.root,\n        variantClassName,\n        checked && ['is-checked', styles.rootChecked],\n        isExpanded && [\n          'is-expanded',\n          styles.rootExpanded,\n          {\n            selectors: {\n              [`:hover .${classNames.msButtonIcon}`]: styles.iconExpandedHovered,\n              // menuIcon falls back to rootExpandedHovered to support original behavior\n              [`:hover .${classNames.msButtonMenuIcon}`]: styles.menuIconExpandedHovered || styles.rootExpandedHovered,\n              ':hover': styles.rootExpandedHovered,\n            },\n          },\n        ],\n        hasMenu && [ButtonGlobalClassNames.msButtonHasMenu, styles.rootHasMenu],\n        disabled && ['is-disabled', styles.rootDisabled],\n        !disabled &&\n          !isExpanded &&\n          !checked && {\n            selectors: {\n              ':hover': styles.rootHovered,\n              [`:hover .${classNames.msButtonLabel}`]: styles.labelHovered,\n              [`:hover .${classNames.msButtonIcon}`]: styles.iconHovered,\n              [`:hover .${classNames.msButtonDescription}`]: styles.descriptionHovered,\n              [`:hover .${classNames.msButtonMenuIcon}`]: styles.menuIconHovered,\n              ':focus': styles.rootFocused,\n              ':active': styles.rootPressed,\n              [`:active .${classNames.msButtonIcon}`]: styles.iconPressed,\n              [`:active .${classNames.msButtonDescription}`]: styles.descriptionPressed,\n              [`:active .${classNames.msButtonMenuIcon}`]: styles.menuIconPressed,\n            },\n          },\n        disabled && checked && [styles.rootCheckedDisabled],\n        !disabled &&\n          checked && {\n            selectors: {\n              ':hover': styles.rootCheckedHovered,\n              ':active': styles.rootCheckedPressed,\n            },\n          },\n        className,\n      ],\n      flexContainer: [classNames.msButtonFlexContainer, styles.flexContainer],\n      textContainer: [classNames.msButtonTextContainer, styles.textContainer],\n      icon: [\n        classNames.msButtonIcon,\n        iconClassName,\n        styles.icon,\n        isExpanded && styles.iconExpanded,\n        checked && styles.iconChecked,\n        disabled && styles.iconDisabled,\n      ],\n      label: [classNames.msButtonLabel, styles.label, checked && styles.labelChecked, disabled && styles.labelDisabled],\n      menuIcon: [\n        classNames.msButtonMenuIcon,\n        menuIconClassName,\n        styles.menuIcon,\n        checked && styles.menuIconChecked,\n        disabled && !isSplit && styles.menuIconDisabled,\n        !disabled &&\n          !isExpanded &&\n          !checked && {\n            selectors: {\n              ':hover': styles.menuIconHovered,\n              ':active': styles.menuIconPressed,\n            },\n          },\n        isExpanded && ['is-expanded', styles.menuIconExpanded],\n      ],\n      description: [\n        classNames.msButtonDescription,\n        styles.description,\n        checked && styles.descriptionChecked,\n        disabled && styles.descriptionDisabled,\n      ],\n      screenReaderText: [classNames.msButtonScreenReaderText, styles.screenReaderText],\n    });\n  },\n);\n"]}
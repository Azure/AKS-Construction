{"version":3,"file":"Label.styles.js","sourceRoot":"../src/","sources":["components/Label/Label.styles.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,oBAAoB,EAAE,WAAW,EAAE,4BAA4B,EAAE,MAAM,eAAe,CAAC;AAGhG,MAAM,CAAC,IAAM,SAAS,GAAG,UAAC,KAAuB;;IACvC,IAAA,KAAK,GAAoC,KAAK,MAAzC,EAAE,SAAS,GAAyB,KAAK,UAA9B,EAAE,QAAQ,GAAe,KAAK,SAApB,EAAE,QAAQ,GAAK,KAAK,SAAV,CAAW;IAC/C,IAAA,cAAc,GAAK,KAAK,eAAV,CAAW;IAEjC,SAAS;IACT,IAAM,eAAe,GAAG,WAAW,CAAC,QAAQ,CAAC;IAC7C,IAAM,UAAU,GAAG,cAAc,CAAC,QAAQ,CAAC;IAC3C,IAAM,kBAAkB,GAAG,cAAc,CAAC,gBAAgB,CAAC;IAC3D,IAAM,sBAAsB,GAAG,cAAc,CAAC,SAAS,CAAC;IAExD,OAAO;QACL,IAAI,EAAE;YACJ,UAAU;YACV,KAAK,CAAC,KAAK,CAAC,MAAM;YAClB;gBACE,UAAU,EAAE,eAAe;gBAC3B,KAAK,EAAE,UAAU;gBACjB,SAAS,EAAE,YAAY;gBACvB,SAAS,EAAE,MAAM;gBACjB,MAAM,EAAE,CAAC;gBACT,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,QAAQ,EAAE,YAAY;gBACtB,YAAY,EAAE,YAAY;aAC3B;YACD,QAAQ,IAAI;gBACV,KAAK,EAAE,kBAAkB;gBACzB,SAAS;oBACP,GAAC,oBAAoB,eACnB,KAAK,EAAE,UAAU,IACd,4BAA4B,EAAE,CAClC;uBACF;aACF;YACD,QAAQ,IAAI;gBACV,SAAS,EAAE;oBACT,SAAS,EAAE;wBACT,OAAO,EAAE,MAAM;wBACf,KAAK,EAAE,sBAAsB;wBAC7B,YAAY,EAAE,EAAE;qBACjB;iBACF;aACF;YACD,SAAS;SACV;KACF,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { HighContrastSelector, FontWeights, getHighContrastNoAdjustStyle } from '../../Styling';\nimport type { ILabelStyleProps, ILabelStyles } from './Label.types';\n\nexport const getStyles = (props: ILabelStyleProps): ILabelStyles => {\n  const { theme, className, disabled, required } = props;\n  const { semanticColors } = theme;\n\n  // Tokens\n  const labelFontWeight = FontWeights.semibold;\n  const labelColor = semanticColors.bodyText;\n  const labelDisabledColor = semanticColors.disabledBodyText;\n  const labelRequiredStarColor = semanticColors.errorText;\n\n  return {\n    root: [\n      'ms-Label',\n      theme.fonts.medium,\n      {\n        fontWeight: labelFontWeight,\n        color: labelColor,\n        boxSizing: 'border-box',\n        boxShadow: 'none',\n        margin: 0,\n        display: 'block',\n        padding: '5px 0',\n        wordWrap: 'break-word',\n        overflowWrap: 'break-word',\n      },\n      disabled && {\n        color: labelDisabledColor,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n      required && {\n        selectors: {\n          '::after': {\n            content: `' *'`,\n            color: labelRequiredStarColor,\n            paddingRight: 12,\n          },\n        },\n      },\n      className,\n    ],\n  };\n};\n"]}
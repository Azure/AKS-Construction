{"version":3,"file":"Label.types.js","sourceRoot":"../src/","sources":["components/Label/Label.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport type { ITheme, IStyle } from '../../Styling';\nimport type { IRefObject, IComponentAs, IStyleFunctionOrObject } from '../../Utilities';\n\n/**\n * {@docCategory Label}\n */\nexport interface ILabel {}\n\n/**\n * {@docCategory Label}\n */\nexport interface ILabelProps extends React.LabelHTMLAttributes<HTMLLabelElement> {\n  /**\n   * Render the root element as another type.\n   */\n  as?: IComponentAs<React.AllHTMLAttributes<HTMLElement>>;\n\n  /**\n   * Optional callback to access the ILabel interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<ILabel>;\n\n  /**\n   * Whether the associated form field is required or not\n   * @defaultvalue false\n   */\n  required?: boolean;\n\n  /**\n   * Renders the label as disabled.\n   */\n  disabled?: boolean;\n\n  /**\n   * Theme provided by HOC.\n   */\n  theme?: ITheme;\n\n  /**\n   * Styles for the label.\n   */\n  styles?: IStyleFunctionOrObject<ILabelStyleProps, ILabelStyles>;\n}\n\n/**\n * {@docCategory Label}\n */\nexport interface ILabelStyles {\n  /**\n   * Styles for the root element.\n   */\n  root: IStyle;\n}\n\n/**\n * {@docCategory Label}\n */\nexport interface ILabelStyleProps {\n  /**\n   *\n   */\n  theme: ITheme;\n  className?: string;\n  disabled?: boolean;\n  required?: boolean;\n}\n"]}
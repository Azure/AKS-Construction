{"version":3,"file":"ContextualMenu.js","sourceRoot":"../src/","sources":["components/ContextualMenu/ContextualMenu.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,MAAM,EAAE,qBAAqB,EAAE,MAAM,iBAAiB,CAAC;AAChE,OAAO,EAAE,kBAAkB,EAAE,MAAM,uBAAuB,CAAC;AAC3D,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAC;AAGpD,SAAS,eAAe,CAAC,YAAkC;IACzD,OAAO,oBAAC,mBAAmB,eAAK,YAAY,EAAI,CAAC;AACnD,CAAC;AAED,iEAAiE;AACjE,IAAM,mBAAmB,GAAkD,MAAM,CAK/E,kBAAkB,EAClB,SAAS,EACT,UAAC,KAA2B,IAAK,OAAA,CAAC;IAChC,eAAe,EAAE,KAAK,CAAC,eAAe;QACpC,CAAC,CAAC,qBAAqB,CAAC,KAAK,CAAC,eAAe,EAAE,eAAe,CAAC;QAC/D,CAAC,CAAC,eAAe;CACpB,CAAC,EAJ+B,CAI/B,EACF,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAC5B,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,IAAM,cAAc,GAAkD,mBAAmB,CAAC;AACjG,cAAc,CAAC,WAAW,GAAG,gBAAgB,CAAC","sourcesContent":["import * as React from 'react';\nimport { styled, composeRenderFunction } from '../../Utilities';\nimport { ContextualMenuBase } from './ContextualMenu.base';\nimport { getStyles } from './ContextualMenu.styles';\nimport type { IContextualMenuProps, IContextualMenuStyleProps, IContextualMenuStyles } from './ContextualMenu.types';\n\nfunction onRenderSubMenu(subMenuProps: IContextualMenuProps) {\n  return <LocalContextualMenu {...subMenuProps} />;\n}\n\n// This is to prevent cyclic import with ContextualMenu.base.tsx.\nconst LocalContextualMenu: React.FunctionComponent<IContextualMenuProps> = styled<\n  IContextualMenuProps,\n  IContextualMenuStyleProps,\n  IContextualMenuStyles\n>(\n  ContextualMenuBase,\n  getStyles,\n  (props: IContextualMenuProps) => ({\n    onRenderSubMenu: props.onRenderSubMenu\n      ? composeRenderFunction(props.onRenderSubMenu, onRenderSubMenu)\n      : onRenderSubMenu,\n  }),\n  { scope: 'ContextualMenu' },\n);\n\n/**\n * ContextualMenu description\n */\nexport const ContextualMenu: React.FunctionComponent<IContextualMenuProps> = LocalContextualMenu;\nContextualMenu.displayName = 'ContextualMenu';\n"]}
{"version":3,"file":"ShimmerElementsGroup.types.js","sourceRoot":"../src/","sources":["components/Shimmer/ShimmerElementsGroup/ShimmerElementsGroup.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport type { IStyle, ITheme } from '../../../Styling';\nimport type { IRefObject, IStyleFunctionOrObject } from '../../../Utilities';\nimport type { IShimmerElement } from '../Shimmer.types';\n\n/**\n * {@docCategory Shimmer}\n */\nexport interface IShimmerElementsGroup {}\n\n/**\n * ShimmerElementsGroup component props.\n * {@docCategory Shimmer}\n */\nexport interface IShimmerElementsGroupProps extends React.AllHTMLAttributes<HTMLElement> {\n  /**\n   * Optional callback to access the IShimmerElementsGroup interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<IShimmerElementsGroup>;\n\n  /**\n   * Optional maximum row height of the shimmerElements container.\n   */\n  rowHeight?: number;\n\n  /**\n   * Elements to render in one group of the Shimmer.\n   */\n  shimmerElements?: IShimmerElement[];\n\n  /**\n   * Optional boolean for enabling flexWrap of the container containing the shimmerElements.\n   * @defaultvalue false\n   */\n  flexWrap?: boolean;\n\n  /**\n   * Optional width for ShimmerElements container.\n   */\n  width?: string;\n\n  /**\n   * Theme provided by High-Order Component.\n   */\n  theme?: ITheme;\n\n  /**\n   * Defines the background color of the space in between and around shimmer elements.\n   * @defaultvalue theme.palette.white\n   */\n  backgroundColor?: string;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<IShimmerElementsGroupStyleProps, IShimmerElementsGroupStyles>;\n}\n\n/**\n * Props needed to construct styles.\n * {@docCategory Shimmer}\n */\nexport interface IShimmerElementsGroupStyleProps {\n  /**\n   * Boolean flag to notify whether the root element needs to flex wrap.\n   */\n  flexWrap?: boolean;\n\n  /** Theme provided by High-Order Component. */\n  theme: ITheme;\n}\n\n/**\n * Represents the stylable areas of the control.\n * {@docCategory Shimmer}\n */\nexport interface IShimmerElementsGroupStyles {\n  /**\n   * Represents the wrapper root element holding all elements inside.\n   */\n  root?: IStyle;\n}\n"]}
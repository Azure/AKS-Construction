{"version":3,"file":"BaseSelectedItemsList.js","sourceRoot":"../src/","sources":["components/SelectedItemsList/BaseSelectedItemsList.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Selection } from '../../Selection';\nimport { initializeComponentRef } from '../../Utilities';\nimport type {\n  IBaseSelectedItemsList,\n  IBaseSelectedItemsListProps,\n  ISelectedItemProps,\n} from './BaseSelectedItemsList.types';\nimport type { IObjectWithKey } from '../../Utilities';\n\nexport interface IBaseSelectedItemsListState<T> {\n  items: T[];\n}\n\nexport class BaseSelectedItemsList<T, P extends IBaseSelectedItemsListProps<T>>\n  extends React.Component<P, IBaseSelectedItemsListState<T>>\n  implements IBaseSelectedItemsList<T> {\n  protected root: HTMLElement;\n  private _defaultSelection: Selection;\n\n  public static getDerivedStateFromProps(newProps: IBaseSelectedItemsListProps<any>) {\n    if (newProps.selectedItems) {\n      return { items: newProps.selectedItems };\n    }\n\n    return null;\n  }\n\n  constructor(basePickerProps: P) {\n    super(basePickerProps);\n\n    initializeComponentRef(this);\n    const items: T[] = basePickerProps.selectedItems || basePickerProps.defaultSelectedItems || [];\n    this.state = {\n      items: items,\n    };\n\n    // Create a new selection if one is not specified\n    this._defaultSelection = new Selection({ onSelectionChanged: this.onSelectionChanged });\n  }\n\n  public get items(): T[] {\n    return this.state.items;\n  }\n\n  public addItems = (items: T[]): void => {\n    const processedItems: T[] | PromiseLike<T[]> = this.props.onItemSelected\n      ? (this.props.onItemSelected as any)(items)\n      : items;\n\n    const processedItemObjects: T[] = processedItems as T[];\n    const processedItemPromiseLikes: PromiseLike<T[]> = processedItems as PromiseLike<T[]>;\n\n    if (processedItemPromiseLikes && processedItemPromiseLikes.then) {\n      processedItemPromiseLikes.then((resolvedProcessedItems: T[]) => {\n        const newItems: T[] = this.state.items.concat(resolvedProcessedItems);\n        this.updateItems(newItems);\n      });\n    } else {\n      const newItems: T[] = this.state.items.concat(processedItemObjects);\n      this.updateItems(newItems);\n    }\n  };\n\n  public removeItemAt = (index: number): void => {\n    const { items } = this.state;\n\n    if (this._canRemoveItem(items[index])) {\n      if (index > -1) {\n        if (this.props.onItemsDeleted) {\n          (this.props.onItemsDeleted as (item: T[]) => void)([items[index]]);\n        }\n\n        const newItems = items.slice(0, index).concat(items.slice(index + 1));\n        this.updateItems(newItems);\n      }\n    }\n  };\n\n  public removeItem = (item: T): void => {\n    const { items } = this.state;\n    const index: number = items.indexOf(item);\n\n    this.removeItemAt(index);\n  };\n\n  public replaceItem = (itemToReplace: T, itemsToReplaceWith: T[]): void => {\n    const { items } = this.state;\n    const index: number = items.indexOf(itemToReplace);\n    if (index > -1) {\n      const newItems = items\n        .slice(0, index)\n        .concat(itemsToReplaceWith)\n        .concat(items.slice(index + 1));\n      this.updateItems(newItems);\n    }\n  };\n\n  public removeItems = (itemsToRemove: any[]): void => {\n    const { items } = this.state;\n    const itemsCanRemove = itemsToRemove.filter(item => this._canRemoveItem(item));\n    const newItems: T[] = items.filter(item => itemsCanRemove.indexOf(item) === -1);\n    const firstItemToRemove = itemsCanRemove[0];\n    const index: number = items.indexOf(firstItemToRemove);\n\n    if (this.props.onItemsDeleted) {\n      (this.props.onItemsDeleted as (item: T[]) => void)(itemsCanRemove);\n    }\n\n    this.updateItems(newItems, index);\n  };\n\n  public removeSelectedItems(): void {\n    if (this.state.items.length && this.selection.getSelectedCount() > 0) {\n      this.removeItems(this.selection.getSelection());\n    }\n  }\n\n  /**\n   * Controls what happens whenever there is an action that impacts the selected items.\n   * If selectedItems is provided, this will act as a controlled component and will not update its own state.\n   */\n  public updateItems(items: T[], focusIndex?: number): void {\n    if (this.props.selectedItems) {\n      // If the component is a controlled component then the controlling component will need to pass the new props\n      this.onChange(items);\n    } else {\n      this.setState({ items: items }, () => {\n        this._onSelectedItemsUpdated(items, focusIndex);\n      });\n    }\n  }\n\n  public onCopy = (ev: React.ClipboardEvent<HTMLElement>): void => {\n    if (this.props.onCopyItems && this.selection.getSelectedCount() > 0) {\n      const selectedItems: T[] = this.selection.getSelection() as T[];\n      this.copyItems(selectedItems);\n    }\n  };\n\n  public hasSelectedItems(): boolean {\n    return this.selection.getSelectedCount() > 0;\n  }\n\n  public componentDidUpdate(oldProps: P, oldState: IBaseSelectedItemsListState<IObjectWithKey>): void {\n    if (this.state.items && this.state.items !== oldState.items) {\n      this.selection.setItems(this.state.items);\n    }\n  }\n\n  public unselectAll(): void {\n    this.selection.setAllSelected(false);\n  }\n\n  public highlightedItems(): T[] {\n    return this.selection.getSelection() as T[];\n  }\n\n  public componentDidMount(): void {\n    this.selection.setItems(this.state.items);\n  }\n\n  protected get selection(): Selection {\n    return this.props.selection ?? this._defaultSelection;\n  }\n\n  public render(): any {\n    return this.renderItems();\n  }\n\n  protected renderItems = (): JSX.Element[] => {\n    const { removeButtonAriaLabel } = this.props;\n    const onRenderItem = this.props.onRenderItem as (props: ISelectedItemProps<T>) => JSX.Element;\n\n    const { items } = this.state;\n    return items.map((item: any, index: number) =>\n      onRenderItem({\n        item,\n        index,\n        key: item.key ? item.key : index,\n        selected: this.selection.isIndexSelected(index),\n        onRemoveItem: () => this.removeItem(item),\n        onItemChange: this.onItemChange,\n        removeButtonAriaLabel: removeButtonAriaLabel,\n        onCopyItem: (itemToCopy: T) => this.copyItems([itemToCopy]),\n      }),\n    );\n  };\n\n  protected onSelectionChanged = (): void => {\n    this.forceUpdate();\n  };\n\n  protected onChange(items?: T[]): void {\n    if (this.props.onChange) {\n      (this.props.onChange as (items?: T[]) => void)(items);\n    }\n  }\n\n  protected onItemChange = (changedItem: T, index: number): void => {\n    const { items } = this.state;\n\n    if (index >= 0) {\n      const newItems: T[] = items;\n      newItems[index] = changedItem;\n\n      this.updateItems(newItems);\n    }\n  };\n\n  protected copyItems(items: T[]): void {\n    if (this.props.onCopyItems) {\n      const copyText = (this.props.onCopyItems as any)(items);\n\n      const copyInput = document.createElement('input') as HTMLInputElement;\n      document.body.appendChild(copyInput);\n\n      try {\n        // Try to copy the text directly to the clipboard\n        copyInput.value = copyText;\n        copyInput.select();\n        if (!document.execCommand('copy')) {\n          // The command failed. Fallback to the method below.\n          throw new Error();\n        }\n      } catch (err) {\n        // no op\n      } finally {\n        document.body.removeChild(copyInput);\n      }\n    }\n  }\n\n  private _onSelectedItemsUpdated(items?: T[], focusIndex?: number): void {\n    this.onChange(items);\n  }\n\n  private _canRemoveItem(item: T): boolean {\n    return !this.props.canRemoveItem || this.props.canRemoveItem(item);\n  }\n}\n"]}
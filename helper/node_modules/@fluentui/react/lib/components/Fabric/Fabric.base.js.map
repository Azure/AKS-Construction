{"version":3,"file":"Fabric.base.js","sourceRoot":"../src/","sources":["components/Fabric/Fabric.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  classNamesFunction,\n  divProperties,\n  getDocument,\n  getNativeProps,\n  getRTL,\n  memoizeFunction,\n  Customizer,\n  FocusRectsProvider,\n} from '../../Utilities';\nimport { createTheme } from '../../Styling';\nimport { useMergedRefs } from '@fluentui/react-hooks';\nimport type { IFabricProps, IFabricStyleProps, IFabricStyles } from './Fabric.types';\nimport type { IProcessedStyleSet } from '@fluentui/merge-styles';\nimport type { ITheme } from '../../Styling';\n\nconst getClassNames = classNamesFunction<IFabricStyleProps, IFabricStyles>();\nconst getFabricTheme = memoizeFunction((theme?: ITheme, isRTL?: boolean) => createTheme({ ...theme, rtl: isRTL }));\n\nconst getDir = ({ theme, dir }: IFabricProps) => {\n  const contextDir = getRTL(theme) ? 'rtl' : 'ltr';\n  const pageDir = getRTL() ? 'rtl' : 'ltr';\n  const componentDir = dir ? dir : contextDir;\n  return {\n    // If Fabric dir !== contextDir\n    // Or If contextDir !== pageDir\n    // Then we need to set dir of the Fabric root\n    rootDir: componentDir !== contextDir || componentDir !== pageDir ? componentDir : dir,\n    // If dir !== contextDir || pageDir\n    // then set contextual theme around content\n    needsTheme: componentDir !== contextDir,\n  };\n};\n\nexport const FabricBase: React.FunctionComponent<IFabricProps> = React.forwardRef<HTMLDivElement, IFabricProps>(\n  (props, ref) => {\n    const { className, theme, applyTheme, applyThemeToBody, styles } = props;\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      applyTheme: applyTheme,\n      className,\n    });\n\n    const rootElement = React.useRef<HTMLDivElement>(null);\n    useApplyThemeToBody(applyThemeToBody, classNames, rootElement);\n\n    return <>{useRenderedContent(props, classNames, rootElement, ref)}</>;\n  },\n);\nFabricBase.displayName = 'FabricBase';\n\nfunction useRenderedContent(\n  props: IFabricProps,\n  { root }: IProcessedStyleSet<IFabricStyles>,\n  rootElement: React.RefObject<HTMLDivElement>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const { as: Root = 'div', dir, theme } = props;\n  const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, divProperties, ['dir']);\n\n  const { rootDir, needsTheme } = getDir(props);\n\n  let renderedContent = (\n    <FocusRectsProvider providerRef={rootElement}>\n      <Root dir={rootDir} {...divProps} className={root} ref={useMergedRefs(rootElement, ref)} />\n    </FocusRectsProvider>\n  );\n\n  // Create the contextual theme if component direction does not match parent direction.\n  if (needsTheme) {\n    // Disabling ThemeProvider here because theme doesn't need to be re-provided by ThemeProvider if dir has changed.\n    renderedContent = (\n      // eslint-disable-next-line deprecation/deprecation\n      <Customizer settings={{ theme: getFabricTheme(theme, dir === 'rtl') }}>{renderedContent}</Customizer>\n    );\n  }\n\n  return renderedContent;\n}\n\nfunction useApplyThemeToBody(\n  applyThemeToBody: boolean | undefined,\n  { bodyThemed }: IProcessedStyleSet<IFabricStyles>,\n  rootElement: React.RefObject<HTMLDivElement | undefined>,\n) {\n  React.useEffect((): void | (() => void) => {\n    if (applyThemeToBody) {\n      const currentDoc = getDocument(rootElement.current);\n      if (currentDoc) {\n        currentDoc.body.classList.add(bodyThemed);\n        return () => {\n          currentDoc.body.classList.remove(bodyThemed);\n        };\n      }\n    }\n  }, [bodyThemed, applyThemeToBody, rootElement]);\n\n  return rootElement;\n}\n"]}
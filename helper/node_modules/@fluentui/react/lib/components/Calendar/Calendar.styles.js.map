{"version":3,"file":"Calendar.styles.js","sourceRoot":"../src/","sources":["components/Calendar/Calendar.styles.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,aAAa,EAAE,MAAM,2BAA2B,CAAC;AAGhF,MAAM,CAAC,IAAM,MAAM,GAAG,UAAC,KAA0B;IACvC,IAAA,SAAS,GAAuE,KAAK,UAA5E,EAAE,KAAK,GAAgE,KAAK,MAArE,EAAE,kBAAkB,GAA4C,KAAK,mBAAjD,EAAE,oBAAoB,GAAsB,KAAK,qBAA3B,EAAE,eAAe,GAAK,KAAK,gBAAV,CAAW;IACtF,IAAA,OAAO,GAAK,KAAK,QAAV,CAAW;IAE1B,IAAI,UAAU,GAAG,kBAAkB,IAAI,oBAAoB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;IACxE,IAAI,eAAe,IAAI,kBAAkB,EAAE;QACzC,UAAU,IAAI,EAAE,CAAC;KAClB;IAED,OAAO;QACL,IAAI,EAAE;YACJ,SAAS;YACT;gBACE,OAAO,EAAE,MAAM;gBACf,KAAK,EAAE,UAAU;aAClB;YACD,CAAC,oBAAoB,IAAI;gBACvB,aAAa,EAAE,QAAQ;aACxB;YACD,SAAS;SACV;QACD,OAAO,EAAE;YACP,GAAG,EAAE,CAAC;YACN,WAAW,EAAE,WAAW;YACxB,WAAW,EAAE,OAAO,CAAC,YAAY;SAClC;QACD,kBAAkB,EAAE;YAClB;gBACE,OAAO,EAAE,MAAM;gBACf,aAAa,EAAE,QAAQ;aACxB;SACF;QACD,aAAa,EAAE;YACb,aAAa,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC;YACnC;gBACE,MAAM,EAAE,CAAC;gBACT,KAAK,EAAE,OAAO,CAAC,cAAc;gBAC7B,MAAM,EAAE,EAAE;gBACV,UAAU,EAAE,EAAE;gBACd,eAAe,EAAE,aAAa;gBAC9B,MAAM,EAAE,MAAM;gBACd,SAAS,EAAE,aAAa;gBACxB,OAAO,EAAE,OAAO;gBAChB,SAAS,EAAE,UAAU;gBACrB,WAAW,EAAE,EAAE;gBACf,SAAS,EAAE,CAAC;gBACZ,QAAQ,EAAE,SAAS,CAAC,KAAK;gBACzB,UAAU,EAAE,SAAS;gBACrB,QAAQ,EAAE,SAAS;gBACnB,SAAS,EAAE;oBACT,OAAO,EAAE;wBACP,QAAQ,EAAE,SAAS,CAAC,KAAK;qBAC1B;oBACD,SAAS,EAAE;wBACT,KAAK,EAAE,OAAO,CAAC,YAAY;wBAC3B,eAAe,EAAE,aAAa;wBAC9B,MAAM,EAAE,SAAS;qBAClB;oBACD,UAAU,EAAE;wBACV,KAAK,EAAE,OAAO,CAAC,SAAS;qBACzB;oBACD,YAAY,EAAE;wBACZ,KAAK,EAAE,OAAO,CAAC,kBAAkB;wBACjC,aAAa,EAAE,MAAM;qBACtB;iBACF;aACF;SACF;QACD,UAAU,EAAE;YACV,MAAM,EAAE,CAAC;YACT,MAAM,EAAE,KAAK;YACb,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,QAAQ;YAClB,OAAO,EAAE,CAAC;YACV,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,UAAU;SACrB;KACF,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { normalize, FontSizes, getFocusStyle } from '@fluentui/style-utilities';\nimport type { ICalendarStyleProps, ICalendarStyles } from './Calendar.types';\n\nexport const styles = (props: ICalendarStyleProps): ICalendarStyles => {\n  const { className, theme, isDayPickerVisible, isMonthPickerVisible, showWeekNumbers } = props;\n  const { palette } = theme;\n\n  let totalWidth = isDayPickerVisible && isMonthPickerVisible ? 440 : 220;\n  if (showWeekNumbers && isDayPickerVisible) {\n    totalWidth += 30;\n  }\n\n  return {\n    root: [\n      normalize,\n      {\n        display: 'flex',\n        width: totalWidth,\n      },\n      !isMonthPickerVisible && {\n        flexDirection: 'column',\n      },\n      className,\n    ],\n    divider: {\n      top: 0,\n      borderRight: '1px solid',\n      borderColor: palette.neutralLight,\n    },\n    monthPickerWrapper: [\n      {\n        display: 'flex',\n        flexDirection: 'column',\n      },\n    ],\n    goTodayButton: [\n      getFocusStyle(theme, { inset: -1 }),\n      {\n        bottom: 0,\n        color: palette.neutralPrimary,\n        height: 30,\n        lineHeight: 30,\n        backgroundColor: 'transparent',\n        border: 'none',\n        boxSizing: 'content-box',\n        padding: '0 4px',\n        alignSelf: 'flex-end',\n        marginRight: 16,\n        marginTop: 3,\n        fontSize: FontSizes.small,\n        fontFamily: 'inherit',\n        overflow: 'visible', // explicitly specify for IE11\n        selectors: {\n          '& div': {\n            fontSize: FontSizes.small,\n          },\n          '&:hover': {\n            color: palette.themePrimary,\n            backgroundColor: 'transparent',\n            cursor: 'pointer',\n          },\n          '&:active': {\n            color: palette.themeDark,\n          },\n          '&:disabled': {\n            color: palette.neutralTertiaryAlt,\n            pointerEvents: 'none',\n          },\n        },\n      },\n    ],\n    liveRegion: {\n      border: 0,\n      height: '1px',\n      margin: '-1px',\n      overflow: 'hidden',\n      padding: 0,\n      width: '1px',\n      position: 'absolute',\n    },\n  };\n};\n"]}
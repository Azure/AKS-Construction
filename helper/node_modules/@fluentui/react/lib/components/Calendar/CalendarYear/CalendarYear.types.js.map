{"version":3,"file":"CalendarYear.types.js","sourceRoot":"../src/","sources":["components/Calendar/CalendarYear/CalendarYear.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport { AnimationDirection } from '../Calendar.types';\nimport type { IBaseProps, IRefObject, IStyleFunctionOrObject } from '@fluentui/utilities';\nimport type { ICalendarNavigationIcons } from '../Calendar.types';\nimport type { ITheme } from '@fluentui/style-utilities';\nimport type { ICalendarPickerStyleProps, ICalendarPickerStyles } from '../CalendarPicker/CalendarPicker.types';\n\n/**\n * {@docCategory Calendar}\n */\nexport interface ICalendarYear {\n  focus(): void;\n}\n\n/**\n * {@docCategory Calendar}\n */\nexport interface ICalendarYearRange {\n  fromYear: number;\n  toYear: number;\n}\n\n/**\n * {@docCategory Calendar}\n */\nexport interface ICalendarYearRangeToString {\n  (range: ICalendarYearRange): string;\n}\n\n/**\n * {@docCategory Calendar}\n */\nexport interface ICalendarYearStrings {\n  rangeAriaLabel?: string | ICalendarYearRangeToString;\n  prevRangeAriaLabel?: string | ICalendarYearRangeToString;\n  nextRangeAriaLabel?: string | ICalendarYearRangeToString;\n  headerAriaLabelFormatString?: string;\n}\n\n/**\n * {@docCategory Calendar}\n */\nexport interface ICalendarYearProps extends IBaseProps<ICalendarYear> {\n  /**\n   * Optional callback to access the ICalendarYear interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<ICalendarYear>;\n\n  /**\n   * Customized styles for the calendar month component\n   */\n  styles?: IStyleFunctionOrObject<ICalendarYearStyleProps, ICalendarYearStyles>;\n\n  /**\n   * Theme (provided through customization).\n   */\n  theme?: ITheme;\n\n  /**\n   * Localized strings to use in the Calendar\n   */\n  strings?: ICalendarYearStrings;\n\n  /**\n   * The currently selected year\n   */\n  selectedYear?: number;\n\n  /**\n   * The currently navigated year\n   */\n  navigatedYear?: number;\n\n  /**\n   * Callback action when a year is selected\n   * @param year - The year the user selected\n   */\n  onSelectYear?: (year: number) => void;\n\n  /**\n   * Custom navigation icons.\n   */\n  navigationIcons?: ICalendarNavigationIcons;\n\n  /**\n   * Callback action when the header is selected\n   */\n  onHeaderSelect?: (focus: boolean) => void;\n\n  /**\n   * If set the Calendar will not allow navigation to or selection of a year earlier than this value.\n   */\n  minYear?: number;\n\n  /**\n   * If set the Calendar will not allow navigation to or selection of a year later than this value.\n   */\n  maxYear?: number;\n\n  /**\n   * Whether the year picker should highlight the current year\n   * @defaultvalue false\n   */\n  highlightCurrentYear?: boolean;\n\n  /**\n   * Whether the year picker should highlight the selected year\n   * @defaultvalue false\n   */\n  highlightSelectedYear?: boolean;\n\n  /**\n   * Accept custom classNames\n   */\n  className?: string;\n\n  /**\n   * Custom renderer for the title\n   */\n  onRenderTitle?: (props: ICalendarYearHeaderProps) => React.ReactNode;\n\n  /**\n   * Custom renderer for the year\n   */\n  onRenderYear?: (year: number) => React.ReactNode;\n\n  /**\n   * The cardinal directions for animation to occur during transitions, either horizontal or veritcal\n   */\n  animationDirection?: AnimationDirection;\n}\n\nexport interface ICalendarYearStyleProps extends ICalendarPickerStyleProps {}\n\nexport interface ICalendarYearStyles extends ICalendarPickerStyles {}\n\nexport interface ICalendarYearHeaderProps extends ICalendarYearProps, ICalendarYearRange {\n  /**\n   * Callback action when the 'previous' navigation button is selected\n   */\n  onSelectPrev?: () => void;\n\n  /**\n   * Callback action when the 'next' navigation button is selected\n   */\n  onSelectNext?: () => void;\n\n  /**\n   * Whether title entering animation should be forwards or backwards\n   */\n  animateBackwards?: boolean;\n}\n"]}
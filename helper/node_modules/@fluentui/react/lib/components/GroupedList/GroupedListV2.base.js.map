{"version":3,"file":"GroupedListV2.base.js","sourceRoot":"../src/","sources":["components/GroupedList/GroupedListV2.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  initializeComponentRef,\n  classNamesFunction,\n  KeyCodes,\n  getRTLSafeKeyCode,\n  css,\n  getId,\n  EventGroup,\n  IRenderFunction,\n} from '../../Utilities';\nimport { List, ScrollToMode, IListProps } from '../../List';\nimport { ISelection, SelectionMode, SELECTION_CHANGE } from '../../Selection';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport type {\n  IGroupedList,\n  IGroup,\n  IGroupRenderProps,\n  IGroupedListStyleProps,\n  IGroupedListStyles,\n} from './GroupedList.types';\nimport type { IGroupedListV2Props } from './GroupedListV2.types';\nimport { GroupHeader } from './GroupHeader';\nimport { GroupShowAll } from './GroupShowAll';\nimport { GroupFooter } from './GroupFooter';\nimport type { IGroupHeaderProps } from './GroupHeader';\nimport type { IGroupShowAllProps } from './GroupShowAll.styles';\nimport type { IGroupFooterProps } from './GroupFooter.types';\n\nexport interface IGroupedListV2State {\n  selectionMode?: IGroupedListV2Props['selectionMode'];\n  compact?: IGroupedListV2Props['compact'];\n  groups?: IGroup[];\n  items?: IGroupedListV2Props['items'];\n  listProps?: IGroupedListV2Props['listProps'];\n  version: {};\n  groupExpandedVersion: {};\n}\n\ntype IITemGroupedItem = {\n  type: 'item';\n  group: IGroup;\n  item: any;\n  itemIndex: number;\n};\n\ntype IShowAllGroupedItem = {\n  type: 'showAll';\n  group: IGroup;\n};\n\ntype IFooterGroupedItem = {\n  type: 'footer';\n  group: IGroup;\n};\n\ntype IHeaderGroupedItem = {\n  type: 'header';\n  group: IGroup;\n  groupId: string;\n  groupIndex: number;\n};\n\ntype IGroupedItem = IITemGroupedItem | IShowAllGroupedItem | IFooterGroupedItem | IHeaderGroupedItem;\n\ntype FlattenItems = (\n  groups: IGroup[] | undefined,\n  items: any[],\n  memoItems: IGroupedItem[],\n  groupProps: IGroupRenderProps['getGroupItemLimit'],\n) => IGroupedItem[];\n\ntype GroupStackItem = {\n  group: IGroup;\n  groupIndex: number;\n};\n\nconst flattenItems: FlattenItems = (groups, items, memoItems, getGroupItemLimit) => {\n  if (!groups) {\n    return items;\n  }\n\n  if (memoItems.length < 1) {\n    // Not the exact final size but gets us in the ballpark.\n    // This helps avoid trashing memory when building\n    // the flattened list.\n    memoItems = new Array(items.length);\n  }\n\n  let index = 0;\n\n  // const stack: IGroup[] = [];\n  const stack: GroupStackItem[] = [];\n  let j = groups.length - 1;\n  while (j >= 0) {\n    stack.push({ group: groups[j], groupIndex: j + 1 });\n    j--;\n  }\n\n  while (stack.length > 0) {\n    // eslint-disable-next-line prefer-const\n    let { group, groupIndex } = stack.pop()!;\n    memoItems[index] = {\n      group,\n      groupId: getId('GroupedListSection'),\n      type: 'header',\n      groupIndex,\n    };\n\n    index++;\n\n    while (group.isCollapsed !== true && group?.children && group.children.length > 0) {\n      j = group.children.length - 1;\n      while (j > 0) {\n        stack.push({ group: group.children[j], groupIndex: j + 1 });\n        j--;\n      }\n      group = group.children[0];\n      memoItems[index] = {\n        group,\n        groupId: getId('GroupedListSection'),\n        type: 'header',\n        groupIndex: 1,\n      };\n      index++;\n    }\n\n    if (group.isCollapsed !== true) {\n      let itemIndex = group.startIndex;\n      const renderCount = getGroupItemLimit ? getGroupItemLimit(group) : Infinity;\n      const count = !group.isShowingAll ? group.count : items.length;\n      const itemEnd = itemIndex + Math.min(count, renderCount);\n      while (itemIndex < itemEnd) {\n        memoItems[index] = {\n          group,\n          item: items[itemIndex],\n          itemIndex, // track the index in `item` for later rendering/selection\n          type: 'item',\n        };\n        itemIndex++;\n        index++;\n      }\n\n      const isShowAllVisible =\n        !group.children &&\n        !group.isCollapsed &&\n        !group.isShowingAll &&\n        (group.count > renderCount || group.hasMoreData);\n\n      if (isShowAllVisible) {\n        memoItems[index] = {\n          group,\n          type: 'showAll',\n        };\n        index++;\n      }\n    }\n\n    // Placeholder for a potential footer.\n    // Whether or not a footer is displayed is resolved\n    // by the footer render function so this is just a marker\n    // for where a footer may go.\n    memoItems[index] = {\n      group,\n      type: 'footer',\n    };\n    index++;\n  }\n\n  memoItems.length = index;\n\n  // console.log('MEMO ITEMS', memoItems);\n\n  return memoItems;\n};\n\ntype UseIsGroupSelected = (\n  startIndex: number,\n  count: number,\n  selection?: ISelection,\n  eventGroup?: EventGroup,\n) => boolean;\n\nconst useIsGroupSelected: UseIsGroupSelected = (startIndex, count, selection, eventGroup) => {\n  const [isSelected, setIsSelected] = React.useState(() => selection?.isRangeSelected(startIndex, count) ?? false);\n\n  React.useEffect(() => {\n    if (selection && eventGroup) {\n      const changeHandler = () => {\n        setIsSelected(selection?.isRangeSelected(startIndex, count) ?? false);\n      };\n\n      eventGroup.on(selection, SELECTION_CHANGE, changeHandler);\n\n      return () => {\n        eventGroup?.off(selection, SELECTION_CHANGE, changeHandler);\n      };\n    }\n  }, [startIndex, count, selection, eventGroup]);\n\n  return isSelected;\n};\n\nconst computeIsSomeGroupExpanded = (groups: IGroup[] | undefined): boolean => {\n  return !!(\n    groups && groups.some(group => (group.children ? computeIsSomeGroupExpanded(group.children) : !group.isCollapsed))\n  );\n};\n\nconst setGroupsCollapsedState = (groups: IGroup[] | undefined, isCollapsed: boolean): void => {\n  if (groups === undefined) {\n    return;\n  }\n  for (let groupIndex = 0; groupIndex < groups.length; groupIndex++) {\n    groups[groupIndex].isCollapsed = isCollapsed;\n  }\n};\n\nconst isInnerZoneKeystroke = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\n  // eslint-disable-next-line deprecation/deprecation\n  return ev.which === getRTLSafeKeyCode(KeyCodes.right);\n};\n\nconst getClassNames = classNamesFunction<IGroupedListStyleProps, IGroupedListStyles>();\n\nconst getKey: IListProps['getKey'] = (item, _index) => {\n  switch (item.type) {\n    case 'item':\n      return item.item?.key ?? null;\n\n    case 'header':\n      return item.group.key;\n\n    case 'footer':\n      return `${item.group.key}-footer`;\n\n    case 'showAll':\n      return `${item.group.key}-showAll`;\n  }\n\n  return null;\n};\n\nconst renderGroupHeader = (props: IGroupHeaderProps): JSX.Element => {\n  return <GroupHeader {...props} />;\n};\n\nconst renderGroupShowAll = (props: IGroupShowAllProps): JSX.Element => {\n  return <GroupShowAll {...props} />;\n};\n\nconst renderGroupFooter = (props: IGroupFooterProps): JSX.Element | null => {\n  if (props.group && props.footerText) {\n    return <GroupFooter {...props} />;\n  }\n\n  return null;\n};\n\nexport const GroupedListV2FC: React.FC<IGroupedListV2Props> = props => {\n  const {\n    selection,\n    selectionMode = SelectionMode.multiple,\n    groupProps = {},\n    compact = false,\n    items = [],\n    groups,\n    onGroupExpandStateChanged,\n\n    className,\n    usePageCache,\n    onShouldVirtualize,\n    theme,\n    role = 'treegrid',\n    styles,\n    focusZoneProps = {},\n    rootListProps = {},\n    onRenderCell,\n    viewport,\n    listRef,\n    groupExpandedVersion,\n    version: versionFromProps,\n  } = props;\n\n  const {\n    onRenderHeader = renderGroupHeader,\n    onRenderFooter = renderGroupFooter,\n    onRenderShowAll = renderGroupShowAll,\n  } = groupProps;\n\n  const classNames: IProcessedStyleSet<IGroupedListStyles> = getClassNames(styles, {\n    theme: theme!,\n    className,\n    compact,\n  });\n\n  const events = React.useRef<EventGroup>();\n  const flatList = React.useRef<IGroupedItem[]>([]);\n  const isSomeGroupExpanded = React.useRef<boolean>(computeIsSomeGroupExpanded(groups));\n\n  const [version, setVersion] = React.useState({});\n  const [toggleVersion, setToggleVersion] = React.useState({});\n\n  // eslint-disable-next-line deprecation/deprecation\n  const { shouldEnterInnerZone = isInnerZoneKeystroke } = focusZoneProps;\n\n  const listView = React.useMemo(() => {\n    return flattenItems(groups, items, flatList.current, groupProps?.getGroupItemLimit);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [groups, groupProps?.getGroupItemLimit, items, toggleVersion, flatList]);\n\n  const getPageSpecification = React.useCallback(\n    (flattenedIndex: number): { key?: string } => {\n      const pageGroup = listView[flattenedIndex];\n      return {\n        key: pageGroup.type === 'header' ? pageGroup.group.key : undefined,\n      };\n    },\n    [listView],\n  );\n\n  React.useEffect(() => {\n    if (groupProps?.isAllGroupsCollapsed) {\n      setGroupsCollapsedState(groups, groupProps.isAllGroupsCollapsed);\n    }\n    events.current = new EventGroup(this);\n\n    return () => {\n      events.current?.dispose();\n      events.current = undefined;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    setVersion({});\n  }, [versionFromProps]);\n\n  React.useEffect(() => {\n    const newIsSomeGroupExpanded = computeIsSomeGroupExpanded(groups);\n    if (newIsSomeGroupExpanded !== isSomeGroupExpanded.current) {\n      isSomeGroupExpanded.current = newIsSomeGroupExpanded;\n      onGroupExpandStateChanged?.(newIsSomeGroupExpanded);\n    }\n  }, [groups, toggleVersion, onGroupExpandStateChanged, groupExpandedVersion]);\n\n  const onToggleCollapse = React.useCallback(\n    (group: IGroup): void => {\n      const onToggleCollapseFn = groupProps?.headerProps?.onToggleCollapse;\n\n      if (group) {\n        onToggleCollapseFn?.(group);\n        group.isCollapsed = !group.isCollapsed;\n        setToggleVersion({});\n        setVersion({});\n      }\n    },\n    [setToggleVersion, groupProps],\n  );\n\n  const onToggleSelectGroup = (group: IGroup): void => {\n    if (group && selection && selectionMode === SelectionMode.multiple) {\n      selection.toggleRangeSelected(group.startIndex, group.count);\n    }\n  };\n\n  const onToggleSummarize = (group: IGroup): void => {\n    const onToggleSummarizeFn = groupProps?.showAllProps?.onToggleSummarize;\n\n    if (onToggleSummarizeFn) {\n      onToggleSummarizeFn(group);\n    } else {\n      if (group) {\n        group.isShowingAll = !group.isShowingAll;\n      }\n\n      setVersion({});\n      setToggleVersion({});\n    }\n  };\n\n  const getDividerProps = (group: IGroup, flattenedIndex: number) => {\n    const dividerProps = {\n      group,\n      groupIndex: flattenedIndex,\n      groupLevel: group.level ?? 0,\n      viewport,\n      selectionMode,\n      groups,\n      compact,\n      onToggleSelectGroup,\n      onToggleCollapse,\n      onToggleSummarize,\n    };\n\n    return dividerProps;\n  };\n\n  const renderHeader = (item: IHeaderGroupedItem, flattenedIndex: number): React.ReactNode => {\n    const group = item.group;\n\n    let ariaProps;\n    if (role === 'treegrid') {\n      // GroupedList default role\n      ariaProps = {\n        ariaLevel: group.level ? group.level + 1 : 1,\n        ariaSetSize: groups ? groups.length : undefined,\n        ariaPosInSet: item.groupIndex,\n      };\n    } else {\n      // Grouped DetailsList\n      ariaProps = {\n        ariaRowIndex: flattenedIndex,\n      };\n    }\n\n    const headerProps = {\n      ...groupProps!.headerProps,\n      ...getDividerProps(item.group, flattenedIndex),\n      key: group.key,\n      groupedListId: item.groupId,\n      ...ariaProps,\n    };\n\n    return (\n      <GroupItem\n        render={onRenderHeader}\n        defaultRender={renderGroupHeader}\n        item={item}\n        selection={selection}\n        eventGroup={events.current}\n        props={headerProps}\n      />\n    );\n  };\n\n  const renderShowAll = (item: IShowAllGroupedItem, flattenedIndex: number): React.ReactNode => {\n    const group = item.group;\n    const groupShowAllProps = {\n      ...groupProps!.showAllProps,\n      ...getDividerProps(group, flattenedIndex),\n      key: group.key ? `${group.key}-show-all` : undefined,\n    };\n\n    return onRenderShowAll(groupShowAllProps, renderGroupShowAll);\n  };\n\n  const renderFooter = (item: IFooterGroupedItem, flattenedIndex: number): React.ReactNode => {\n    const group = item.group;\n    const groupFooterProps = {\n      ...groupProps!.footerProps,\n      ...getDividerProps(group, flattenedIndex),\n      key: group.key ? `${group.key}-footer` : undefined,\n    };\n\n    return onRenderFooter(groupFooterProps, renderGroupFooter);\n  };\n\n  const renderItem = (item: IGroupedItem, flattenedIndex: number): React.ReactNode => {\n    if (item.type === 'header') {\n      return renderHeader(item, flattenedIndex);\n    } else if (item.type === 'showAll') {\n      return renderShowAll(item, flattenedIndex);\n    } else if (item.type === 'footer') {\n      return renderFooter(item, flattenedIndex);\n    } else {\n      const level = item.group.level ? item.group.level + 1 : 1;\n      return onRenderCell(level, item.item, item.itemIndex ?? flattenedIndex, item.group);\n    }\n  };\n\n  return (\n    <FocusZone\n      direction={FocusZoneDirection.vertical}\n      data-automationid=\"GroupedList\"\n      data-is-scrollable=\"false\"\n      role=\"presentation\"\n      {...focusZoneProps}\n      shouldEnterInnerZone={shouldEnterInnerZone}\n      className={css(classNames.root, focusZoneProps.className)}\n    >\n      <List\n        ref={listRef}\n        role={role}\n        items={listView}\n        // eslint-disable-next-line\n        onRenderCellConditional={renderItem}\n        usePageCache={usePageCache}\n        onShouldVirtualize={onShouldVirtualize}\n        getPageSpecification={getPageSpecification}\n        version={version}\n        getKey={getKey}\n        {...rootListProps}\n      />\n    </FocusZone>\n  );\n};\n\ninterface IGroupItemProps<T> {\n  props: T;\n  render: IRenderFunction<T>;\n  defaultRender: (props?: T) => JSX.Element | null;\n  item: any;\n  selection?: ISelection;\n  eventGroup?: EventGroup;\n}\n\nconst GroupItem = <T,>({\n  render,\n  defaultRender,\n  item,\n  selection,\n  eventGroup,\n  props,\n}: React.PropsWithChildren<IGroupItemProps<T>>): React.ReactElement | null => {\n  const group = item.group;\n\n  const isSelected = useIsGroupSelected(group.startIndex, group.count, selection, eventGroup);\n  const mergedProps = {\n    ...props,\n    isSelected,\n    selected: isSelected,\n  };\n  return render(mergedProps, defaultRender);\n};\n\nexport class GroupedListV2Wrapper\n  extends React.Component<IGroupedListV2Props, IGroupedListV2State>\n  implements IGroupedList {\n  public static displayName: string = 'GroupedListV2';\n  private _list = React.createRef<List>();\n\n  public static getDerivedStateFromProps(\n    nextProps: IGroupedListV2Props,\n    previousState: IGroupedListV2State,\n  ): IGroupedListV2State {\n    const { groups, selectionMode, compact, items, listProps } = nextProps;\n    const nextListVersion = listProps && listProps.version;\n\n    const nextState = {\n      ...previousState,\n      groups,\n    };\n\n    if (\n      nextListVersion !== previousState.version ||\n      items !== previousState.items ||\n      groups !== previousState.groups ||\n      selectionMode !== previousState.selectionMode ||\n      compact !== previousState.compact\n    ) {\n      nextState.version = {};\n    }\n\n    return nextState;\n  }\n\n  constructor(props: IGroupedListV2Props) {\n    super(props);\n    initializeComponentRef(this);\n\n    const { listProps: { version = {} } = {}, groups } = props;\n    this.state = {\n      version,\n      groupExpandedVersion: {},\n      groups,\n    };\n  }\n\n  public scrollToIndex(index: number, measureItem?: (itemIndex: number) => number, scrollToMode?: ScrollToMode): void {\n    if (this._list.current) {\n      this._list.current.scrollToIndex(index, measureItem, scrollToMode);\n    }\n  }\n\n  public getStartItemIndexInView(): number {\n    return this._list.current?.getStartItemIndexInView() || 0;\n  }\n\n  public render(): JSX.Element {\n    return <GroupedListV2FC {...this.props} {...this.state} listRef={this._list} />;\n  }\n\n  public forceUpdate() {\n    super.forceUpdate();\n    this._forceListUpdate();\n  }\n\n  public toggleCollapseAll(allCollapsed: boolean): void {\n    const { groups } = this.state;\n    const { groupProps } = this.props;\n\n    if (groups && groups.length > 0) {\n      groupProps?.onToggleCollapseAll?.(allCollapsed);\n\n      setGroupsCollapsedState(groups, allCollapsed);\n      this.setState({\n        groupExpandedVersion: {},\n      });\n\n      this.forceUpdate();\n    }\n  }\n\n  private _forceListUpdate(): void {\n    this.setState({\n      version: {},\n    });\n  }\n}\n"]}
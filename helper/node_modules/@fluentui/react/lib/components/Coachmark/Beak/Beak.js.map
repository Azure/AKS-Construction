{"version":3,"file":"Beak.js","sourceRoot":"../src/","sources":["components/Coachmark/Beak/Beak.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nimport { getStyles } from './Beak.styles';\nimport { RectangleEdge } from '../../../Positioning';\nimport type { IBeakProps, IBeakStylesProps } from './Beak.types';\nimport type { IBeakStyles } from './Beak.styles';\n\nexport const BEAK_HEIGHT = 10;\nexport const BEAK_WIDTH = 18;\n\nexport const Beak: React.FunctionComponent<IBeakProps> = React.forwardRef<HTMLDivElement, IBeakProps>(\n  (props, forwardedRef) => {\n    const { left, top, bottom, right, color, direction = RectangleEdge.top } = props;\n\n    let svgHeight: number;\n    let svgWidth: number;\n\n    if (direction === RectangleEdge.top || direction === RectangleEdge.bottom) {\n      svgHeight = BEAK_HEIGHT;\n      svgWidth = BEAK_WIDTH;\n    } else {\n      svgHeight = BEAK_WIDTH;\n      svgWidth = BEAK_HEIGHT;\n    }\n\n    let pointOne: string;\n    let pointTwo: string;\n    let pointThree: string;\n    let transform: string;\n\n    switch (direction) {\n      case RectangleEdge.top:\n      default:\n        pointOne = `${BEAK_WIDTH / 2}, 0`;\n        pointTwo = `${BEAK_WIDTH}, ${BEAK_HEIGHT}`;\n        pointThree = `0, ${BEAK_HEIGHT}`;\n        transform = 'translateY(-100%)';\n        break;\n      case RectangleEdge.right:\n        pointOne = `0, 0`;\n        pointTwo = `${BEAK_HEIGHT}, ${BEAK_HEIGHT}`;\n        pointThree = `0, ${BEAK_WIDTH}`;\n        transform = 'translateX(100%)';\n        break;\n      case RectangleEdge.bottom:\n        pointOne = `0, 0`;\n        pointTwo = `${BEAK_WIDTH}, 0`;\n        pointThree = `${BEAK_WIDTH / 2}, ${BEAK_HEIGHT}`;\n        transform = 'translateY(100%)';\n        break;\n      case RectangleEdge.left:\n        pointOne = `${BEAK_HEIGHT}, 0`;\n        pointTwo = `0, ${BEAK_HEIGHT}`;\n        pointThree = `${BEAK_HEIGHT}, ${BEAK_WIDTH}`;\n        transform = 'translateX(-100%)';\n        break;\n    }\n\n    const getClassNames = classNamesFunction<IBeakStylesProps, IBeakStyles>();\n    const classNames = getClassNames(getStyles, {\n      left,\n      top,\n      bottom,\n      right,\n      height: `${svgHeight}px`,\n      width: `${svgWidth}px`,\n      transform: transform,\n      color,\n    });\n\n    return (\n      <div className={classNames.root} role=\"presentation\" ref={forwardedRef}>\n        <svg height={svgHeight} width={svgWidth} className={classNames.beak}>\n          <polygon points={pointOne + ' ' + pointTwo + ' ' + pointThree} />\n        </svg>\n      </div>\n    );\n  },\n);\nBeak.displayName = 'Beak';\n"]}
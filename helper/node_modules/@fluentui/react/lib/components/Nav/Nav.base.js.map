{"version":3,"file":"Nav.base.js","sourceRoot":"../src/","sources":["components/Nav/Nav.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ActionButton } from '../../Button';\nimport { buttonStyles } from './Nav.styles';\nimport { classNamesFunction, divProperties, getNativeProps, getWindow, initializeComponentRef } from '../../Utilities';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { Icon } from '../../Icon';\nimport { composeComponentAs, composeRenderFunction } from '@fluentui/utilities';\nimport type { IFocusZone } from '../../FocusZone';\nimport type {\n  INav,\n  INavLink,\n  INavLinkGroup,\n  INavProps,\n  INavStyleProps,\n  INavStyles,\n  IRenderGroupHeaderProps,\n} from './Nav.types';\n\n// The number pixels per indentation level for Nav links.\nconst _indentationSize = 14;\n\n// The number of pixels of left margin\nconst _baseIndent = 3;\n\n// global var used in _isLinkSelectedKey\nlet _urlResolver: HTMLAnchorElement | undefined;\n\nexport function isRelativeUrl(url: string): boolean {\n  // A URL is relative if it has no protocol.\n  return !!url && !/^[a-z0-9+-.]+:\\/\\//i.test(url);\n}\n\nconst getClassNames = classNamesFunction<INavStyleProps, INavStyles>();\n\nexport interface INavState {\n  isGroupCollapsed: { [key: string]: boolean };\n  isLinkExpandStateChanged?: boolean;\n  selectedKey?: string;\n}\n\nexport class NavBase extends React.Component<INavProps, INavState> implements INav {\n  public static defaultProps: INavProps = {\n    groups: null,\n  };\n\n  private _focusZone = React.createRef<IFocusZone>();\n  constructor(props: INavProps) {\n    super(props);\n    initializeComponentRef(this);\n    this.state = {\n      isGroupCollapsed: {},\n      // TODO: consider removing\n      // eslint-disable-next-line react/no-unused-state\n      isLinkExpandStateChanged: false,\n      selectedKey: props.initialSelectedKey || props.selectedKey,\n    };\n  }\n\n  public render(): JSX.Element | null {\n    const { styles, groups, className, isOnTop, role = 'navigation', theme } = this.props;\n\n    if (!groups) {\n      return null;\n    }\n\n    const groupElements: React.ReactElement<{}>[] = groups.map(this._renderGroup);\n\n    const classNames = getClassNames(styles!, { theme: theme!, className, isOnTop, groups });\n\n    return (\n      <FocusZone direction={FocusZoneDirection.vertical} componentRef={this._focusZone} {...this.props.focusZoneProps}>\n        <nav role={role} className={classNames.root} aria-label={this.props.ariaLabel}>\n          {groupElements}\n        </nav>\n      </FocusZone>\n    );\n  }\n\n  public get selectedKey(): string | undefined {\n    return this.state.selectedKey;\n  }\n\n  /**\n   * Sets focus to the first tabbable item in the zone.\n   * @param forceIntoFirstElement - If true, focus will be forced into the first element, even\n   * if focus is already in the focus zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  public focus(forceIntoFirstElement: boolean = false): boolean {\n    if (this._focusZone && this._focusZone.current) {\n      return this._focusZone.current.focus(forceIntoFirstElement);\n    }\n    return false;\n  }\n\n  private _onRenderLink = (link: INavLink): JSX.Element => {\n    const { styles, groups, theme } = this.props;\n    const classNames = getClassNames(styles!, { theme: theme!, groups });\n    return <div className={classNames.linkText}>{link.name}</div>;\n  };\n\n  private _renderNavLink(link: INavLink, linkIndex: number, nestingLevel: number): JSX.Element {\n    const { styles, groups, theme } = this.props;\n    const isLinkWithIcon = link.icon || link.iconProps;\n    const isSelectedLink = this._isLinkSelected(link);\n    const { ariaCurrent = 'page' } = link;\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      isSelected: isSelectedLink,\n      isDisabled: link.disabled,\n      isButtonEntry: link.onClick && !link.forceAnchor,\n      leftPadding: _indentationSize * nestingLevel + _baseIndent + (isLinkWithIcon ? 0 : 24),\n      groups,\n    });\n\n    // Prevent hijacking of the parent window if link.target is defined\n    const rel = link.url && link.target && !isRelativeUrl(link.url) ? 'noopener noreferrer' : undefined;\n\n    const LinkAs = this.props.linkAs ? composeComponentAs(this.props.linkAs, ActionButton) : ActionButton;\n    const onRenderLink = this.props.onRenderLink\n      ? composeRenderFunction(this.props.onRenderLink, this._onRenderLink)\n      : this._onRenderLink;\n\n    return (\n      <LinkAs\n        className={classNames.link}\n        styles={buttonStyles}\n        href={link.url || (link.forceAnchor ? '#' : undefined)}\n        iconProps={link.iconProps || { iconName: link.icon }}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={\n          link.onClick ? this._onNavButtonLinkClicked.bind(this, link) : this._onNavAnchorLinkClicked.bind(this, link)\n        }\n        title={link.title !== undefined ? link.title : link.name}\n        target={link.target}\n        rel={rel}\n        disabled={link.disabled}\n        aria-current={isSelectedLink ? ariaCurrent : undefined}\n        aria-label={link.ariaLabel ? link.ariaLabel : undefined}\n        link={link}\n      >\n        {onRenderLink(link)}\n      </LinkAs>\n    );\n  }\n\n  private _renderCompositeLink(link: INavLink, linkIndex: number, nestingLevel: number): React.ReactElement<{}> {\n    const divProps: React.HTMLProps<HTMLDivElement> = { ...getNativeProps(link, divProperties, ['onClick']) };\n    // eslint-disable-next-line deprecation/deprecation\n    const { expandButtonAriaLabel, styles, groups, theme } = this.props;\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      isExpanded: !!link.isExpanded,\n      isSelected: this._isLinkSelected(link),\n      isLink: true,\n      isDisabled: link.disabled,\n      position: _indentationSize * nestingLevel + 1,\n      groups,\n    });\n\n    let finalExpandBtnAriaLabel = '';\n    if (link.links && link.links.length > 0) {\n      if (link.collapseAriaLabel || link.expandAriaLabel) {\n        // still respect link.collapseAriaLabel, even though it's deprecated in favor of expandAriaLabel\n        const collapseAriaLabel = link.collapseAriaLabel ?? link.expandAriaLabel;\n\n        finalExpandBtnAriaLabel = link.isExpanded ? collapseAriaLabel! : link.expandAriaLabel!;\n      } else {\n        // TODO remove when `expandButtonAriaLabel` is removed. This is not an ideal concatenation for localization.\n        finalExpandBtnAriaLabel = expandButtonAriaLabel ? `${link.name} ${expandButtonAriaLabel}` : link.name;\n      }\n    }\n\n    return (\n      <div {...divProps} key={link.key || linkIndex} className={classNames.compositeLink}>\n        {link.links && link.links.length > 0 ? (\n          <button\n            className={classNames.chevronButton}\n            onClick={this._onLinkExpandClicked.bind(this, link)}\n            aria-label={finalExpandBtnAriaLabel}\n            aria-expanded={link.isExpanded ? 'true' : 'false'}\n          >\n            <Icon className={classNames.chevronIcon} iconName=\"ChevronDown\" />\n          </button>\n        ) : null}\n        {this._renderNavLink(link, linkIndex, nestingLevel)}\n      </div>\n    );\n  }\n\n  private _renderLink(link: INavLink, linkIndex: number, nestingLevel: number): React.ReactElement<{}> {\n    const { styles, groups, theme } = this.props;\n    const classNames = getClassNames(styles!, { theme: theme!, groups });\n\n    return (\n      <li key={link.key || linkIndex} role=\"listitem\" className={classNames.navItem}>\n        {this._renderCompositeLink(link, linkIndex, nestingLevel)}\n        {link.isExpanded ? this._renderLinks(link.links, ++nestingLevel) : null}\n      </li>\n    );\n  }\n\n  private _renderLinks(links: INavLink[] | undefined, nestingLevel: number): React.ReactElement<{}> | null {\n    if (!links || !links.length) {\n      return null;\n    }\n    const linkElements: React.ReactElement<{}>[] = links.map((link: INavLink, linkIndex: number) =>\n      this._renderLink(link, linkIndex, nestingLevel),\n    );\n\n    const { styles, groups, theme } = this.props;\n    const classNames = getClassNames(styles!, { theme: theme!, groups });\n\n    return (\n      <ul role=\"list\" className={classNames.navItems}>\n        {linkElements}\n      </ul>\n    );\n  }\n\n  private _renderGroup = (group: INavLinkGroup, groupIndex: number): React.ReactElement<{}> => {\n    const { styles, groups, theme, onRenderGroupHeader = this._renderGroupHeader } = this.props;\n\n    const isExpanded = this._isGroupExpanded(group);\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      isGroup: true,\n      isExpanded,\n      groups,\n    });\n\n    const finalOnHeaderClick = (\n      ev?: React.MouseEvent<HTMLElement, MouseEvent> | undefined,\n      isCollapsing?: boolean | undefined,\n    ) => {\n      this._onGroupHeaderClicked(group, ev);\n    };\n\n    const groupProps: IRenderGroupHeaderProps = {\n      ...group,\n      isExpanded,\n      onHeaderClick: finalOnHeaderClick,\n    };\n\n    return (\n      <div key={groupIndex} className={classNames.group}>\n        {groupProps.name ? onRenderGroupHeader(groupProps, this._renderGroupHeader) : null}\n        <div className={classNames.groupContent}>{this._renderLinks(groupProps.links, 0 /* nestingLevel */)}</div>\n      </div>\n    );\n  };\n\n  private _renderGroupHeader = (group: IRenderGroupHeaderProps): React.ReactElement<{}> => {\n    // eslint-disable-next-line deprecation/deprecation\n    const { styles, groups, theme, expandButtonAriaLabel } = this.props;\n\n    const { isExpanded } = group;\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      isGroup: true,\n      isExpanded,\n      groups,\n    });\n\n    // respect deprecated collapseAriaLabel, but default to expandAriaLabel for both states\n    // eslint-disable-next-line deprecation/deprecation\n    const collapseAriaLabel = group.collapseAriaLabel ?? group.expandAriaLabel;\n    const label = (isExpanded ? collapseAriaLabel : group.expandAriaLabel) || expandButtonAriaLabel;\n\n    const { onHeaderClick } = group;\n\n    const onClick = onHeaderClick\n      ? (ev?: React.MouseEvent<HTMLElement, MouseEvent> | undefined) => {\n          onHeaderClick(ev, isExpanded);\n        }\n      : undefined;\n\n    return (\n      <button className={classNames.chevronButton} onClick={onClick} aria-label={label} aria-expanded={isExpanded}>\n        <Icon className={classNames.chevronIcon} iconName=\"ChevronDown\" />\n        {group.name}\n      </button>\n    );\n  };\n\n  private _onGroupHeaderClicked(group: INavLinkGroup, ev?: React.MouseEvent<HTMLElement>): void {\n    if (group.onHeaderClick) {\n      group.onHeaderClick(ev, this._isGroupExpanded(group));\n    }\n\n    if (group.isExpanded === undefined) {\n      this._toggleCollapsed(group);\n    }\n\n    if (ev) {\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n  }\n\n  private _onLinkExpandClicked(link: INavLink, ev: React.MouseEvent<HTMLElement>): void {\n    const { onLinkExpandClick } = this.props;\n\n    if (onLinkExpandClick) {\n      onLinkExpandClick(ev, link);\n    }\n\n    if (!ev.defaultPrevented) {\n      link.isExpanded = !link.isExpanded;\n      // eslint-disable-next-line react/no-unused-state\n      this.setState({ isLinkExpandStateChanged: true });\n    }\n\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  private _preventBounce(link: INavLink, ev: React.MouseEvent<HTMLElement>): void {\n    if (!link.url && link.forceAnchor) {\n      ev.preventDefault();\n    }\n  }\n\n  private _onNavAnchorLinkClicked(link: INavLink, ev: React.MouseEvent<HTMLElement>): void {\n    // If the href is \"#\" we should call preventDefault to prevent scrolling to the top of the page\n    this._preventBounce(link, ev);\n\n    if (this.props.onLinkClick) {\n      this.props.onLinkClick(ev, link);\n    }\n    if (!link.url && link.links && link.links.length > 0) {\n      this._onLinkExpandClicked(link, ev);\n    }\n\n    this.setState({ selectedKey: link.key });\n  }\n\n  private _onNavButtonLinkClicked(link: INavLink, ev: React.MouseEvent<HTMLElement>): void {\n    // If the href is \"#\" we should call preventDefault to prevent scrolling to the top of the page\n    this._preventBounce(link, ev);\n\n    if (link.onClick) {\n      link.onClick(ev, link);\n    }\n    if (!link.url && link.links && link.links.length > 0) {\n      this._onLinkExpandClicked(link, ev);\n    }\n\n    this.setState({ selectedKey: link.key });\n  }\n\n  private _isLinkSelected(link: INavLink): boolean {\n    // if caller passes in selectedKey, use it as first choice or\n    // if current state.selectedKey (from addressbar) is match to the link or\n    // check if URL is matching location.href (if link.url exists)\n    if (this.props.selectedKey !== undefined) {\n      return link.key === this.props.selectedKey;\n    } else if (this.state.selectedKey !== undefined) {\n      return link.key === this.state.selectedKey;\n    } else if (typeof getWindow() === 'undefined' || !link.url) {\n      // resolve is not supported for ssr\n      return false;\n    } else {\n      // If selectedKey is undefined in props and state, then check URL\n      _urlResolver = _urlResolver || document.createElement('a');\n\n      _urlResolver.href = link.url || '';\n      const target: string = _urlResolver.href;\n\n      if (location.href === target) {\n        return true;\n      }\n\n      // If selectedKey is not defined in state, then check URL to determine link selected status\n      if (location.protocol + '//' + location.host + location.pathname === target) {\n        return true;\n      }\n\n      if (location.hash) {\n        // Match the hash to the url.\n        if (location.hash === link.url) {\n          return true;\n        }\n\n        // Match a rebased url. (e.g. #foo becomes http://hostname/foo)\n        _urlResolver.href = location.hash.substring(1);\n\n        return _urlResolver.href === target;\n      }\n    }\n\n    return false;\n  }\n\n  private _isGroupExpanded(group: INavLinkGroup): boolean {\n    if (group.isExpanded !== undefined) {\n      return group.isExpanded;\n    }\n    if (group.name && this.state.isGroupCollapsed.hasOwnProperty(group.name)) {\n      return !this.state.isGroupCollapsed[group.name];\n    }\n    if (group.collapseByDefault !== undefined) {\n      return !group.collapseByDefault;\n    }\n    return true;\n  }\n\n  private _toggleCollapsed(group: INavLinkGroup): void {\n    if (group.name) {\n      const newGroupCollapsed = {\n        ...this.state.isGroupCollapsed, // Make a copy in order to not modify state\n        [group.name]: this._isGroupExpanded(group), // sic - presently open will be collapsed after setState\n      };\n      this.setState({ isGroupCollapsed: newGroupCollapsed });\n    }\n  }\n}\n"]}
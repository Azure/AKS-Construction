{"version":3,"file":"PivotItem.types.js","sourceRoot":"../src/","sources":["components/Pivot/PivotItem.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport type { IRefObject, IRenderFunction } from '@fluentui/utilities';\nimport type { IButtonProps } from '../../Button';\nimport type { IKeytipProps } from '../Keytip/Keytip.types';\n\n/**\n * {@docCategory Pivot}\n */\nexport interface IPivotItemProps extends React.HTMLAttributes<HTMLDivElement> {\n  children?: React.ReactNode;\n  /**\n   * Gets the component ref.\n   */\n  componentRef?: IRefObject<{}>;\n\n  /**\n   * The text displayed of each pivot link.\n   * @deprecated Use `headerText` instead.\n   */\n  linkText?: string;\n\n  /**\n   * The text displayed of each pivot link.\n   */\n  headerText?: string;\n\n  /**\n   * Props for the header command button. This provides a way to pass in native props, such as data-* and aria-*,\n   * for each pivot header/link element.\n   */\n  headerButtonProps?: IButtonProps | { [key: string]: string | number | boolean };\n\n  /**\n   * An required key to uniquely identify a pivot item.\n   *\n   * Note: The 'key' from react props cannot be used inside component.\n   */\n  itemKey?: string;\n\n  /**\n   * The aria label of each pivot link which will read by screen reader instead of linkText.\n   *\n   * Note that unless you have compelling requirements you should not override aria-label.\n   */\n  ariaLabel?: string;\n\n  /**\n   * Defines an optional item count displayed in parentheses just after the `linkText`.\n   *\n   * Examples: completed (4), Unread (99+)\n   */\n  itemCount?: number | string;\n\n  /**\n   * An optional icon to show next to the pivot link.\n   */\n  itemIcon?: string;\n\n  /**\n   * Optional custom renderer for the pivot item link\n   */\n  onRenderItemLink?: IRenderFunction<IPivotItemProps>;\n\n  /**\n   * Optional keytip for this PivotItem\n   */\n  keytipProps?: IKeytipProps;\n\n  /**\n   * Defines whether to always render the pivot item (regardless of whether it is selected or not).\n   * Useful if you're rendering content that is expensive to mount.\n   *\n   * @defaultvalue false\n   */\n  alwaysRender?: boolean;\n}\n"]}
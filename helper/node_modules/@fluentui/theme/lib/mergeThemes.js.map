{"version":3,"file":"mergeThemes.js","sourceRoot":"../src/","sources":["mergeThemes.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAC5C,OAAO,EAAE,iBAAiB,EAAE,MAAM,gCAAgC,CAAC;AAGnE;;GAEG;AACH,MAAM,UAAU,WAAW,CAAC,KAAY,EAAE,YAA+B;;IAA/B,6BAAA,EAAA,iBAA+B;IACvE,IAAM,WAAW,GAAG,KAAK,CAAuB,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE;QACvE,cAAc,EAAE,iBAAiB,CAC/B,YAAY,CAAC,OAAO,EACpB,YAAY,CAAC,OAAO,EACpB,YAAY,CAAC,cAAc,EAC3B,YAAY,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY,CAAC,UAAU,CACnF;KACF,CAAU,CAAC;IAEZ,IAAI,CAAA,MAAA,YAAY,CAAC,OAAO,0CAAE,YAAY,KAAI,CAAC,CAAA,MAAA,YAAY,CAAC,OAAO,0CAAE,MAAM,CAAA,EAAE;QACvE,WAAW,CAAC,OAAO,CAAC,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC;KAChE;IAED,IAAI,YAAY,CAAC,gBAAgB,EAAE;QACjC,KAAwB,UAAuD,EAAvD,KAAA,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAA0B,EAAvD,cAAuD,EAAvD,IAAuD,EAAE;YAA5E,IAAM,SAAS,SAAA;YAClB,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,KAAK,CAClC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,EAC5B,YAAY,CAAC,gBAAgB,EAC7B,MAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,KAAK,0CAAG,SAAS,CAAC,CACjC,CAAC;SACH;KACF;IAED,OAAO,WAAW,CAAC;AACrB,CAAC","sourcesContent":["import { merge } from '@fluentui/utilities';\nimport { getSemanticColors } from './utilities/makeSemanticColors';\nimport type { IFontStyles, PartialTheme, Theme } from './types/index';\n\n/**\n * Merge a partial/full theme into a full theme and returns a merged full theme.\n */\nexport function mergeThemes(theme: Theme, partialTheme: PartialTheme = {}): Theme {\n  const mergedTheme = merge<Theme | PartialTheme>({}, theme, partialTheme, {\n    semanticColors: getSemanticColors(\n      partialTheme.palette,\n      partialTheme.effects,\n      partialTheme.semanticColors,\n      partialTheme.isInverted === undefined ? theme.isInverted : partialTheme.isInverted,\n    ),\n  }) as Theme;\n\n  if (partialTheme.palette?.themePrimary && !partialTheme.palette?.accent) {\n    mergedTheme.palette.accent = partialTheme.palette.themePrimary;\n  }\n\n  if (partialTheme.defaultFontStyle) {\n    for (const fontStyle of Object.keys(mergedTheme.fonts) as (keyof IFontStyles)[]) {\n      mergedTheme.fonts[fontStyle] = merge(\n        mergedTheme.fonts[fontStyle],\n        partialTheme.defaultFontStyle,\n        partialTheme?.fonts?.[fontStyle],\n      );\n    }\n  }\n\n  return mergedTheme;\n}\n"]}
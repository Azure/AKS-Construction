{"version":3,"file":"ISemanticColors.js","sourceRoot":"../src/","sources":["types/ISemanticColors.ts"],"names":[],"mappings":"","sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\nimport type { ISemanticTextColors } from './ISemanticTextColors';\n\n// WARNING: The comment below must use valid markdown, or it will break the website.\n// Headings must start at h4 to be appropriate for the website.\n/**\n * The collection of all semantic slots for colors used in themes.\n *\n * Note: text colors are defined in ISemanticTextColors.ts.\n * We plan to move completely to semantic slots and replace all usage of Fabric palette slots.\n * We've been actively making some of these changes but still have a ways to go. At present,\n * we're only adding slots if absolutely necessary because we are trying to avoid bloating\n * the already sizeable offering. We're also working on a better solution for design tokens\n * overall in our next iteration. We'll provide an update on this site when that's ready.\n * Thank you for your patience.\n *\n * #### Naming Convention\n *\n * The name of a semantic slot can quickly tell you how it’s meant to be used. It generally follows this format:\n *\n * `[category name][element name][Checked][Hovered/Pressed/Disabled state]`\n *\n * * `[category name]` – The “family” that this slot belongs to.\n * * `[element name]` – The name of the thing being targeted, such as the background or border.\n * * `[Checked]` – Whether the thing is checked. We assume things are unchecked by default, so no need to specify the\n * unchecked state. (“Checked” refers to anything that is on, selected, toggled, highlighted, emphasized, etc.)\n * * `[Hovered/Pressed/Disabled state]` – One of these states, if applicable. Each of these states are mutually\n * exclusive. Pressed styles overwrite hovered styles, and disabled elements cannot be hovered or pressed.\n *\n * #### Base Slots\n *\n * A basic set of slots that provide many default body styles, such as text, subtext, disabled colors, and so on.\n * If a category doesn't provide the slot you're looking for, use one from this category.\n * For example, the placeholder text on a text input field has no corresponding slot in its category,\n * so you'd use the bodySubtextColor from this category.\n *\n * #### Invariants\n *\n * When color has meaning, we do not want to change the color much theme to theme. For example, we\n * will always want errors to be some shade of red, but we will need to tweak the exact shade so it's\n * legible depending on whether it's an inverted theme or not.\n * Invariant colors should almost never be changed by the theme, the defaults should suffice.\n *\n * #### Input Controls\n *\n * This category contains input components commonly used to denote state, including radio buttons,\n * check boxes, toggle switches, sliders, progress bars, and more.\n *\n * #### Buttons\n *\n * Buttons! And all the flavors thereof.\n *\n * #### Menus\n *\n * Any kind of popup menus uses this category.\n *\n * #### Lists\n *\n * Lists differ from menus in that they are designed to show infinite amounts of items, often scroll,\n * and have a large and complex interaction surface.\n * This category covers all kinds of lists, whether they're typical one-item-per-row lists (like DetailsList)\n * or ones with a tiled layout.\n *\n * {@docCategory ISemanticColors}\n */\nexport interface ISemanticColors extends ISemanticTextColors {\n  /*\n   * !!!!!!!!\n   * FOR ANY ADDITIONS/REMOVALS HERE YOU MUST ALSO RUN `yarn update-sass-theme-files` in packages/common-styles\n   * to ensure that semantic slots scss variables are updated\n   * !!!!!!!!\n   */\n\n  //// Base slots\n\n  /**\n   * The default color for backgrounds.\n   */\n  bodyBackground: string;\n\n  /**\n   * The default hover color for the backgrounds of interactable elements that don't have their own backgrounds.\n   * e.g. if links had hover backgrounds, they'd use this\n   */\n  bodyBackgroundHovered: string;\n\n  /**\n   * The default background color of selected interactable elements that don't have their own backgrounds.\n   * e.g. indicates in the nav which page you're currently on\n   */\n  bodyBackgroundChecked: string;\n\n  /**\n   * The standout color for highlighted content backgrounds.\n   * For highlighted content when there is no emphasis, use the neutral variant instead.\n   * This should be a shade darker than bodyBackground in light themes, and a shade lighter in inverted themes.\n   */\n  bodyStandoutBackground: string;\n\n  /**\n   * The color for chrome adjacent to an area with bodyBackground.\n   * This can be used to provide visual separation of zones when using stronger colors, when using a divider line\n   * is not desired.\n   * In most themes, this should match the color of bodyBackground.\n   * See also: bodyFrameDivider\n   */\n  bodyFrameBackground: string;\n\n  /**\n   * Used as the border between a zone with bodyFrameBackground and a zone with bodyBackground.\n   * If bodyBackground and bodyFrameBackground are different, this should be the same color as bodyFrameBackground\n   * in order to visually disappear.\n   * See also: bodyFrameBackground\n   */\n  bodyFrameDivider: string;\n\n  /**\n   * Divider lines; e.g. lines that separate sections in a menu, an <HR> element.\n   */\n  bodyDivider: string;\n\n  /**\n   * The default color for backgrounds of disabled controls; e.g. disabled text field.\n   */\n  disabledBackground: string;\n\n  /**\n   * The default color for border of disabled controls; e.g. disabled slider, disabled toggle border.\n   */\n  disabledBorder: string;\n\n  /**\n   * The color of the outline around focused controls that don't already have a border; e.g. menu items\n   */\n  focusBorder: string;\n\n  /**\n   * The background color of a card (or other surface) on a standout background.\n   * Cards usually have shadows, but the variantBorder slots can be used for a solid border.\n   * e.g. cards on a carousel of highlighted articles\n   */\n  cardStandoutBackground: string;\n\n  /**\n   * The default box-shadow for a card. In inverted themes, by default, this is set to `none` since shadows do not work\n   * well on dark backgrounds. If the card could be the same color as the background, it is recommended that\n   * `variantBorder` is used instead, so the card doesn't disappear in inverted themes.\n   * For use with `box-shadow`.\n   */\n  cardShadow: string;\n\n  /**\n   * The default box-shadow when hovering on a card. Generally, this is a deeper shadow than `cardShadow`, to give\n   * the effect that the card is lifting off the page.\n   * In inverted themes, this should be set to a box-shadow that looks like a solid border, because shadows are not\n   * visible on dark themes.\n   * For use with `box-shadow`.\n   */\n  cardShadowHovered: string;\n\n  /**\n   * The color of the border that provides contrast between an element, such as a card, and a standout background.\n   */\n  variantBorder: string;\n\n  /**\n   * Hover color of border that provides contrast between an element, such as a card, and a standout background.\n   */\n  variantBorderHovered: string;\n\n  /**\n   * Background color for default/empty state graphical elements; eg default icons, empty section that\n   * needs user to fill in content, placeholder graphics, empty seats, etc.\n   */\n  defaultStateBackground: string;\n\n  //// Invariants - slots that rarely change color theme-to-theme because the color has meaning\n  /**\n   * Background for informational messages.\n   */\n  infoBackground: string;\n  /**\n   * The background for errors, if necessary, or highlighting the section of the page where the error is present.\n   */\n  errorBackground: string;\n  /**\n   * Background for blocking issues, which is more severe than a warning, but not as bad as an error.\n   */\n  blockingBackground: string;\n  /**\n   * Background for warning messages.\n   */\n  warningBackground: string;\n  /**\n   * Background for severe warning messages.\n   */\n  severeWarningBackground: string;\n  /**\n   * Background for success\n   */\n  successBackground: string;\n  /**\n   * Color for icons on infoBackground.\n   */\n  infoIcon: string;\n  /**\n   * Color for icons on errorBackground.\n   */\n  errorIcon: string;\n  /**\n   * Color for icons on blockingBackground.\n   */\n  blockingIcon: string;\n  /**\n   * Color for icons on warningBackground.\n   */\n  warningIcon: string;\n  /**\n   * Color for icons on severeWarningBackground.\n   */\n  severeWarningIcon: string;\n  /**\n   * Color for icons on successBackground.\n   */\n  successIcon: string;\n  /**\n   * Color of links within a message.\n   */\n  messageLink: string;\n  /**\n   * Color of links within a message when hovered.\n   */\n  messageLinkHovered: string;\n\n  //// Input controls slots (text fields, checkboxes, radios...)\n\n  /**\n   * The border of a large input control in its resting, state; e.g. the box of dropdown.\n   */\n  inputBorder: string;\n\n  /**\n   * The border of a small input control in its resting unchecked state; e.g. the box of an unchecked checkbox.\n   */\n  smallInputBorder: string;\n\n  /**\n   * The border color of a large hovered input control, such as textbox.\n   */\n  inputBorderHovered: string;\n\n  /**\n   * The background color of an input, e.g. textbox background.\n   */\n  inputBackground: string;\n\n  /**\n   * The background of a checked control; e.g. checked radio button's dot, checked toggle's background.\n   */\n  inputBackgroundChecked: string;\n\n  /**\n   * The background of a checked and hovered control; e.g. checked checkbox's background color on hover.\n   */\n  inputBackgroundCheckedHovered: string;\n\n  /**\n   * The placeholder background color of a checked control, e.g. slider background, spinner background.\n   */\n  inputPlaceholderBackgroundChecked: string;\n\n  /**\n   * The foreground of a checked control; e.g. checked checkbox's checkmark color, checked toggle's thumb color,\n   * radio button's background color around the dot.\n   */\n  inputForegroundChecked: string;\n\n  /**\n   * The alternate focus border color for elements that already have a border; e.g. text field borders on focus.\n   */\n  inputFocusBorderAlt: string;\n\n  /**\n   * The color for disabled icon ; e.g. SearchBox magnifying glass in disabled state.\n   */\n  inputIconDisabled: string;\n\n  /**\n   * The color for icon ; e.g. SearchBox magnifying glass in rest state.\n   */\n  inputIcon: string;\n\n  /**\n   * The color for hovered icon ; e.g. SearchBox magnifying glass in hovered state.\n   */\n  inputIconHovered: string;\n\n  //// Buttons\n\n  /**\n   * Background of a standard button\n   */\n  buttonBackground: string;\n\n  /**\n   * Background of a checked standard button; e.g. bold/italicize/underline text button in toolbar\n   */\n  buttonBackgroundChecked: string;\n\n  /**\n   * Background of a hovered standard button\n   */\n  buttonBackgroundHovered: string;\n\n  /**\n   * Background of a checked and hovered standard button; e.g. bold/italicize/underline text button in toolbar\n   */\n  buttonBackgroundCheckedHovered: string;\n\n  /**\n   * Background of a disabled standard button\n   */\n  buttonBackgroundDisabled: string;\n\n  /**\n   * Background of a pressed standard button; i.e. currently being clicked by mouse\n   */\n  buttonBackgroundPressed: string;\n\n  /**\n   * Border of a standard button\n   */\n  buttonBorder: string;\n\n  /**\n   * Border of a disabled standard button\n   */\n  buttonBorderDisabled: string;\n\n  /**\n   * Background of a primary button\n   */\n  primaryButtonBackground: string;\n\n  /**\n   * Background of a hovered primary button\n   */\n  primaryButtonBackgroundHovered: string;\n\n  /**\n   * Background of a pressed primary button; i.e. currently being clicked by mouse\n   */\n  primaryButtonBackgroundPressed: string;\n\n  /**\n   * Background of a disabled primary button\n   */\n  primaryButtonBackgroundDisabled: string;\n\n  /**\n   * Border of a primary button\n   */\n  primaryButtonBorder: string;\n\n  /**\n   * Background of an accent button (kicker)\n   */\n  accentButtonBackground: string;\n\n  //// Menus, popups, etc\n\n  /**\n   * The background of a menu.\n   */\n  menuBackground: string;\n\n  /**\n   * The divider between menu items.\n   */\n  menuDivider: string;\n\n  /**\n   * The default colors of icons in menus.\n   */\n  menuIcon: string;\n\n  /**\n   * The headers in menus that denote title of a section.\n   */\n  menuHeader: string;\n\n  /**\n   * The background of a hovered menu item.\n   */\n  menuItemBackgroundHovered: string;\n\n  /**\n   * The background of a pressed menu item.\n   */\n  menuItemBackgroundPressed: string;\n\n  /**\n   * The text color of a menu item.\n   */\n  menuItemText: string;\n\n  /**\n   * The text color of a hovered menu item.\n   */\n  menuItemTextHovered: string;\n\n  //// Lists\n\n  /**\n   * The background color for the entire list.\n   */\n  listBackground: string;\n\n  /**\n   * The default text color for list item titles and text in column fields.\n   */\n  listText: string;\n\n  /**\n   * The background color of a hovered list item.\n   */\n  listItemBackgroundHovered: string;\n\n  /**\n   * The background color of a checked list item.\n   */\n  listItemBackgroundChecked: string;\n\n  /**\n   * The background color of a checked and hovered list item.\n   */\n  listItemBackgroundCheckedHovered: string;\n\n  /**\n   * The background color for a hovered list header.\n   */\n  listHeaderBackgroundHovered: string;\n\n  /**\n   * The background color for a pressed list header.\n   */\n  listHeaderBackgroundPressed: string;\n\n  //// DEPRECATED SLOTS\n  // Do not use these slots, they are only maintained for backwards compatibility.\n\n  /**\n   * @deprecated\n   * (Checked menu items no longer get a background color.)\n   * The background of checked menu item; e.g. a menu item whose submenu is open, a selected dropdown item.\n   */\n  menuItemBackgroundChecked: string;\n\n  /**\n   * @deprecated\n   * (no longer used)\n   * Foreground color for warning highlights\n   */\n  warningHighlight: string;\n}\n"]}
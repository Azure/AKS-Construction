{"version":3,"file":"DefaultFontStyles.js","sourceRoot":"../src/","sources":["fonts/DefaultFontStyles.ts"],"names":[],"mappings":"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","sourcesContent":["import { fontFace } from '@fluentui/merge-styles';\nimport { FontWeights, LocalizedFontFamilies, LocalizedFontNames } from './FluentFonts';\nimport { createFontStyles } from './createFontStyles';\nimport { getLanguage, getWindow } from '@fluentui/utilities';\nimport type { IFontWeight } from '@fluentui/merge-styles';\nimport type { IFontStyles } from '../types/IFontStyles';\nimport type { IFabricConfig } from '../types/IFabricConfig';\n\n// Default urls.\nconst DefaultBaseUrl = 'https://static2.sharepointonline.com/files/fabric/assets';\n\n// Standard font styling.\nexport const DefaultFontStyles: IFontStyles = createFontStyles(getLanguage());\n\nfunction _registerFontFace(fontFamily: string, url: string, fontWeight?: IFontWeight, localFontName?: string): void {\n  fontFamily = `'${fontFamily}'`;\n\n  const localFontSrc = localFontName !== undefined ? `local('${localFontName}'),` : '';\n\n  fontFace({\n    fontFamily,\n    src: localFontSrc + `url('${url}.woff2') format('woff2'),` + `url('${url}.woff') format('woff')`,\n    fontWeight,\n    fontStyle: 'normal',\n    fontDisplay: 'swap',\n  });\n}\n\nfunction _registerFontFaceSet(\n  baseUrl: string,\n  fontFamily: string,\n  cdnFolder: string,\n  cdnFontName: string = 'segoeui',\n  localFontName?: string,\n): void {\n  const urlBase = `${baseUrl}/${cdnFolder}/${cdnFontName}`;\n\n  _registerFontFace(fontFamily, urlBase + '-light', FontWeights.light, localFontName && localFontName + ' Light');\n  _registerFontFace(\n    fontFamily,\n    urlBase + '-semilight',\n    FontWeights.semilight,\n    localFontName && localFontName + ' SemiLight',\n  );\n  _registerFontFace(fontFamily, urlBase + '-regular', FontWeights.regular, localFontName);\n  _registerFontFace(\n    fontFamily,\n    urlBase + '-semibold',\n    FontWeights.semibold,\n    localFontName && localFontName + ' SemiBold',\n  );\n  _registerFontFace(fontFamily, urlBase + '-bold', FontWeights.bold, localFontName && localFontName + ' Bold');\n}\n\nexport function registerDefaultFontFaces(baseUrl: string): void {\n  if (baseUrl) {\n    const fontUrl = `${baseUrl}/fonts`;\n\n    // Produce @font-face definitions for all supported web fonts.\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Thai, 'leelawadeeui-thai', 'leelawadeeui');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Arabic, 'segoeui-arabic');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Cyrillic, 'segoeui-cyrillic');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.EastEuropean, 'segoeui-easteuropean');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Greek, 'segoeui-greek');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Hebrew, 'segoeui-hebrew');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Vietnamese, 'segoeui-vietnamese');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.WestEuropean, 'segoeui-westeuropean', 'segoeui', 'Segoe UI');\n    _registerFontFaceSet(fontUrl, LocalizedFontFamilies.Selawik, 'selawik', 'selawik');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Armenian, 'segoeui-armenian');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Georgian, 'segoeui-georgian');\n\n    // Leelawadee UI (Thai) does not have a 'light' weight, so we override\n    // the font-face generated above to use the 'semilight' weight instead.\n    _registerFontFace('Leelawadee UI Web', `${fontUrl}/leelawadeeui-thai/leelawadeeui-semilight`, FontWeights.light);\n\n    // Leelawadee UI (Thai) does not have a 'semibold' weight, so we override\n    // the font-face generated above to use the 'bold' weight instead.\n    _registerFontFace('Leelawadee UI Web', `${fontUrl}/leelawadeeui-thai/leelawadeeui-bold`, FontWeights.semibold);\n  }\n}\n\n/**\n * Reads the fontBaseUrl from window.FabricConfig.fontBaseUrl or falls back to a default.\n */\nfunction _getFontBaseUrl(): string {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const fabricConfig: IFabricConfig | undefined = (getWindow() as any)?.FabricConfig;\n\n  return fabricConfig?.fontBaseUrl ?? DefaultBaseUrl;\n}\n\n/**\n * Register the font faces.\n */\nregisterDefaultFontFaces(_getFontBaseUrl());\n"]}
{"version":3,"file":"dynamicproto-js.js","sources":["../../out/lib/src/DynamicProto.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar _a;\r\n;\r\nvar UNDEFINED = \"undefined\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Constructor = 'constructor';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Prototype = 'prototype';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strFunction = 'function';\r\n/**\r\n * Used to define the name of the instance function lookup table\r\n * @ignore\r\n */\r\nvar DynInstFuncTable = '_dynInstFuncs';\r\n/**\r\n * Name used to tag the dynamic prototype function\r\n * @ignore\r\n */\r\nvar DynProxyTag = '_isDynProxy';\r\n/**\r\n * Name added to a prototype to define the dynamic prototype \"class\" name used to lookup the function table\r\n * @ignore\r\n */\r\nvar DynClassName = '_dynClass';\r\n/**\r\n * Prefix added to the classname to avoid any name clashes with other instance level properties\r\n * @ignore\r\n */\r\nvar DynClassNamePrefix = '_dynCls$';\r\n/**\r\n * A tag which is used to check if we have already to attempted to set the instance function if one is not present\r\n * @ignore\r\n */\r\nvar DynInstChkTag = '_dynInstChk';\r\n/**\r\n * A tag which is used to check if we are allows to try and set an instance function is one is not present. Using the same\r\n * tag name as the function level but a different const name for readability only.\r\n */\r\nvar DynAllowInstChkTag = DynInstChkTag;\r\n/**\r\n * The global (imported) instances where the global performance options are stored\r\n */\r\nvar DynProtoDefaultOptions = '_dfOpts';\r\n/**\r\n * Value used as the name of a class when it cannot be determined\r\n * @ignore\r\n */\r\nvar UnknownValue = '_unknown_';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar str__Proto = \"__proto__\";\r\n/**\r\n * The polyfill version of __proto__ so that it doesn't cause issues for anyone not expecting it to exist\r\n */\r\nvar DynProtoBaseProto = \"_dyn\" + str__Proto;\r\n/**\r\n * Runtime Global holder for dynamicProto settings\r\n */\r\nvar DynProtoGlobalSettings = \"__dynProto$Gbl\";\r\n/**\r\n * Track the current prototype for IE8 as you can't look back to get the prototype\r\n */\r\nvar DynProtoCurrent = \"_dynInstProto\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strUseBaseInst = 'useBaseInst';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strSetInstFuncs = 'setInstFuncs';\r\nvar Obj = Object;\r\n/**\r\n * Pre-lookup to check if we are running on a modern browser (i.e. not IE8)\r\n * @ignore\r\n */\r\nvar _objGetPrototypeOf = Obj[\"getPrototypeOf\"];\r\n/**\r\n * Pre-lookup to check for the existence of this function\r\n */\r\nvar _objGetOwnProps = Obj[\"getOwnPropertyNames\"];\r\n/**\r\n * Gets the runtime global reference\r\n * @returns\r\n */\r\nfunction _getGlobal() {\r\n    var result;\r\n    if (typeof globalThis !== UNDEFINED) {\r\n        result = globalThis;\r\n    }\r\n    if (!result && typeof self !== UNDEFINED) {\r\n        result = self;\r\n    }\r\n    if (!result && typeof window !== UNDEFINED) {\r\n        result = window;\r\n    }\r\n    if (!result && typeof global !== UNDEFINED) {\r\n        result = global;\r\n    }\r\n    return result || {};\r\n}\r\n// Since 1.1.7 moving these to the runtime global to work around mixed version and module issues\r\n// See Issue https://github.com/microsoft/DynamicProto-JS/issues/57 for details\r\nvar _gbl = _getGlobal();\r\nvar _gblInst = _gbl[DynProtoGlobalSettings] || (_gbl[DynProtoGlobalSettings] = {\r\n    o: (_a = {},\r\n        _a[strSetInstFuncs] = true,\r\n        _a[strUseBaseInst] = true,\r\n        _a),\r\n    n: 1000 // Start new global index @ 1000 so we \"fix\" some cases when mixed with 1.1.6 or earlier\r\n});\r\n/**\r\n * Helper to check if the object contains a property of the name\r\n * @ignore\r\n */\r\nfunction _hasOwnProperty(obj, prop) {\r\n    return obj && Obj[Prototype].hasOwnProperty.call(obj, prop);\r\n}\r\n/**\r\n * Helper used to check whether the target is an Object prototype or Array prototype\r\n * @ignore\r\n */\r\nfunction _isObjectOrArrayPrototype(target) {\r\n    return target && (target === Obj[Prototype] || target === Array[Prototype]);\r\n}\r\n/**\r\n * Helper used to check whether the target is an Object prototype, Array prototype or Function prototype\r\n * @ignore\r\n */\r\nfunction _isObjectArrayOrFunctionPrototype(target) {\r\n    return _isObjectOrArrayPrototype(target) || target === Function[Prototype];\r\n}\r\n/**\r\n * Helper used to get the prototype of the target object as getPrototypeOf is not available in an ES3 environment.\r\n * @ignore\r\n */\r\nfunction _getObjProto(target) {\r\n    var newProto;\r\n    if (target) {\r\n        // This method doesn't exist in older browsers (e.g. IE8)\r\n        if (_objGetPrototypeOf) {\r\n            return _objGetPrototypeOf(target);\r\n        }\r\n        var curProto = target[str__Proto] || target[Prototype] || (target[Constructor] ? target[Constructor][Prototype] : null);\r\n        // Using the pre-calculated value as IE8 doesn't support looking up the prototype of a prototype and thus fails for more than 1 base class\r\n        newProto = target[DynProtoBaseProto] || curProto;\r\n        if (!_hasOwnProperty(target, DynProtoBaseProto)) {\r\n            // As this prototype doesn't have this property then this is from an inherited class so newProto is the base to return so save it\r\n            // so we can look it up value (which for a multiple hierarchy dynamicProto will be the base class)\r\n            delete target[DynProtoCurrent]; // Delete any current value allocated to this instance so we pick up the value from prototype hierarchy\r\n            newProto = target[DynProtoBaseProto] = target[DynProtoCurrent] || target[DynProtoBaseProto];\r\n            target[DynProtoCurrent] = curProto;\r\n        }\r\n    }\r\n    return newProto;\r\n}\r\n/**\r\n * Helper to get the properties of an object, including none enumerable ones as functions on a prototype in ES6\r\n * are not enumerable.\r\n * @param target\r\n */\r\nfunction _forEachProp(target, func) {\r\n    var props = [];\r\n    if (_objGetOwnProps) {\r\n        props = _objGetOwnProps(target);\r\n    }\r\n    else {\r\n        for (var name_1 in target) {\r\n            if (typeof name_1 === \"string\" && _hasOwnProperty(target, name_1)) {\r\n                props.push(name_1);\r\n            }\r\n        }\r\n    }\r\n    if (props && props.length > 0) {\r\n        for (var lp = 0; lp < props.length; lp++) {\r\n            func(props[lp]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Helper function to check whether the provided function name is a potential candidate for dynamic\r\n * callback and prototype generation.\r\n * @param target The target object, may be a prototype or class object\r\n * @param funcName The function name\r\n * @param skipOwn Skips the check for own property\r\n * @ignore\r\n */\r\nfunction _isDynamicCandidate(target, funcName, skipOwn) {\r\n    return (funcName !== Constructor && typeof target[funcName] === strFunction && (skipOwn || _hasOwnProperty(target, funcName)));\r\n}\r\n/**\r\n * Helper to throw a TypeError exception\r\n * @param message the message\r\n * @ignore\r\n */\r\nfunction _throwTypeError(message) {\r\n    throw new TypeError(\"DynamicProto: \" + message);\r\n}\r\n/**\r\n * Returns a collection of the instance functions that are defined directly on the thisTarget object, it does\r\n * not return any inherited functions\r\n * @param thisTarget The object to get the instance functions from\r\n * @ignore\r\n */\r\nfunction _getInstanceFuncs(thisTarget) {\r\n    // Get the base proto\r\n    var instFuncs = {};\r\n    // Save any existing instance functions\r\n    _forEachProp(thisTarget, function (name) {\r\n        // Don't include any dynamic prototype instances - as we only want the real functions\r\n        if (!instFuncs[name] && _isDynamicCandidate(thisTarget, name, false)) {\r\n            // Create an instance callback for passing the base function to the caller\r\n            instFuncs[name] = thisTarget[name];\r\n        }\r\n    });\r\n    return instFuncs;\r\n}\r\n/**\r\n * Returns whether the value is included in the array\r\n * @param values The array of values\r\n * @param value  The value\r\n */\r\nfunction _hasVisited(values, value) {\r\n    for (var lp = values.length - 1; lp >= 0; lp--) {\r\n        if (values[lp] === value) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Returns an object that contains callback functions for all \"base/super\" functions, this is used to \"save\"\r\n * enabling calling super.xxx() functions without requiring that the base \"class\" has defined a prototype references\r\n * @param target The current instance\r\n * @ignore\r\n */\r\nfunction _getBaseFuncs(classProto, thisTarget, instFuncs, useBaseInst) {\r\n    function _instFuncProxy(target, funcHost, funcName) {\r\n        var theFunc = funcHost[funcName];\r\n        if (theFunc[DynProxyTag] && useBaseInst) {\r\n            // grab and reuse the hosted looking function (if available) otherwise the original passed function\r\n            var instFuncTable = target[DynInstFuncTable] || {};\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                theFunc = (instFuncTable[funcHost[DynClassName]] || {})[funcName] || theFunc;\r\n            }\r\n        }\r\n        return function () {\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return theFunc.apply(target, arguments);\r\n        };\r\n    }\r\n    // Start creating a new baseFuncs by creating proxies for the instance functions (as they may get replaced)\r\n    var baseFuncs = {};\r\n    _forEachProp(instFuncs, function (name) {\r\n        // Create an instance callback for passing the base function to the caller\r\n        baseFuncs[name] = _instFuncProxy(thisTarget, instFuncs, name);\r\n    });\r\n    // Get the base prototype functions\r\n    var baseProto = _getObjProto(classProto);\r\n    var visited = [];\r\n    // Don't include base object functions for Object, Array or Function\r\n    while (baseProto && !_isObjectArrayOrFunctionPrototype(baseProto) && !_hasVisited(visited, baseProto)) {\r\n        // look for prototype functions\r\n        _forEachProp(baseProto, function (name) {\r\n            // Don't include any dynamic prototype instances - as we only want the real functions\r\n            // For IE 7/8 the prototype lookup doesn't provide the full chain so we need to bypass the \r\n            // hasOwnProperty check we get all of the methods, main difference is that IE7/8 doesn't return\r\n            // the Object prototype methods while bypassing the check\r\n            if (!baseFuncs[name] && _isDynamicCandidate(baseProto, name, !_objGetPrototypeOf)) {\r\n                // Create an instance callback for passing the base function to the caller\r\n                baseFuncs[name] = _instFuncProxy(thisTarget, baseProto, name);\r\n            }\r\n        });\r\n        // We need to find all possible functions that might be overloaded by walking the entire prototype chain\r\n        // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n        // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n        visited.push(baseProto);\r\n        baseProto = _getObjProto(baseProto);\r\n    }\r\n    return baseFuncs;\r\n}\r\nfunction _getInstFunc(target, funcName, proto, currentDynProtoProxy) {\r\n    var instFunc = null;\r\n    // We need to check whether the class name is defined directly on this prototype otherwise\r\n    // it will walk the proto chain and return any parent proto classname.\r\n    if (target && _hasOwnProperty(proto, DynClassName)) {\r\n        var instFuncTable = target[DynInstFuncTable] || {};\r\n        instFunc = (instFuncTable[proto[DynClassName]] || {})[funcName];\r\n        if (!instFunc) {\r\n            // Avoid stack overflow from recursive calling the same function\r\n            _throwTypeError(\"Missing [\" + funcName + \"] \" + strFunction);\r\n        }\r\n        // We have the instance function, lets check it we can speed up further calls\r\n        // by adding the instance function back directly on the instance (avoiding the dynamic func lookup)\r\n        if (!instFunc[DynInstChkTag] && instFuncTable[DynAllowInstChkTag] !== false) {\r\n            // If the instance already has an instance function we can't replace it\r\n            var canAddInst = !_hasOwnProperty(target, funcName);\r\n            // Get current prototype\r\n            var objProto = _getObjProto(target);\r\n            var visited = [];\r\n            // Lookup the function starting at the top (instance level prototype) and traverse down, if the first matching function\r\n            // if nothing is found or if the first hit is a dynamic proto instance then we can safely add an instance shortcut\r\n            while (canAddInst && objProto && !_isObjectArrayOrFunctionPrototype(objProto) && !_hasVisited(visited, objProto)) {\r\n                var protoFunc = objProto[funcName];\r\n                if (protoFunc) {\r\n                    canAddInst = (protoFunc === currentDynProtoProxy);\r\n                    break;\r\n                }\r\n                // We need to find all possible initial functions to ensure that we don't bypass a valid override function\r\n                visited.push(objProto);\r\n                objProto = _getObjProto(objProto);\r\n            }\r\n            try {\r\n                if (canAddInst) {\r\n                    // This instance doesn't have an instance func and the class hierarchy does have a higher level prototype version\r\n                    // so it's safe to directly assign for any subsequent calls (for better performance)\r\n                    target[funcName] = instFunc;\r\n                }\r\n                // Block further attempts to set the instance function for any\r\n                instFunc[DynInstChkTag] = 1;\r\n            }\r\n            catch (e) {\r\n                // Don't crash if the object is readonly or the runtime doesn't allow changing this\r\n                // And set a flag so we don't try again for any function\r\n                instFuncTable[DynAllowInstChkTag] = false;\r\n            }\r\n        }\r\n    }\r\n    return instFunc;\r\n}\r\nfunction _getProtoFunc(funcName, proto, currentDynProtoProxy) {\r\n    var protoFunc = proto[funcName];\r\n    // Check that the prototype function is not a self reference -- try to avoid stack overflow!\r\n    if (protoFunc === currentDynProtoProxy) {\r\n        // It is so lookup the base prototype\r\n        protoFunc = _getObjProto(proto)[funcName];\r\n    }\r\n    if (typeof protoFunc !== strFunction) {\r\n        _throwTypeError(\"[\" + funcName + \"] is not a \" + strFunction);\r\n    }\r\n    return protoFunc;\r\n}\r\n/**\r\n * Add the required dynamic prototype methods to the the class prototype\r\n * @param proto - The class prototype\r\n * @param className - The instance classname\r\n * @param target - The target instance\r\n * @param baseInstFuncs - The base instance functions\r\n * @param setInstanceFunc - Flag to allow prototype function to reset the instance function if one does not exist\r\n * @ignore\r\n */\r\nfunction _populatePrototype(proto, className, target, baseInstFuncs, setInstanceFunc) {\r\n    function _createDynamicPrototype(proto, funcName) {\r\n        var dynProtoProxy = function () {\r\n            // Use the instance or prototype function\r\n            var instFunc = _getInstFunc(this, funcName, proto, dynProtoProxy) || _getProtoFunc(funcName, proto, dynProtoProxy);\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return instFunc.apply(this, arguments);\r\n        };\r\n        // Tag this function as a proxy to support replacing dynamic proxy elements (primary use case is for unit testing\r\n        // via which can dynamically replace the prototype function reference)\r\n        dynProtoProxy[DynProxyTag] = 1;\r\n        return dynProtoProxy;\r\n    }\r\n    if (!_isObjectOrArrayPrototype(proto)) {\r\n        var instFuncTable = target[DynInstFuncTable] = target[DynInstFuncTable] || {};\r\n        var instFuncs_1 = instFuncTable[className] = (instFuncTable[className] || {}); // fetch and assign if as it may not exist yet\r\n        // Set whether we are allow to lookup instances, if someone has set to false then do not re-enable\r\n        if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n            instFuncTable[DynAllowInstChkTag] = !!setInstanceFunc;\r\n        }\r\n        _forEachProp(target, function (name) {\r\n            // Only add overridden functions\r\n            if (_isDynamicCandidate(target, name, false) && target[name] !== baseInstFuncs[name]) {\r\n                // Save the instance Function to the lookup table and remove it from the instance as it's not a dynamic proto function\r\n                instFuncs_1[name] = target[name];\r\n                delete target[name];\r\n                // Add a dynamic proto if one doesn't exist or if a prototype function exists and it's not a dynamic one\r\n                if (!_hasOwnProperty(proto, name) || (proto[name] && !proto[name][DynProxyTag])) {\r\n                    proto[name] = _createDynamicPrototype(proto, name);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Checks whether the passed prototype object appears to be correct by walking the prototype hierarchy of the instance\r\n * @param classProto The class prototype instance\r\n * @param thisTarget The current instance that will be checked whether the passed prototype instance is in the hierarchy\r\n * @ignore\r\n */\r\nfunction _checkPrototype(classProto, thisTarget) {\r\n    // This method doesn't existing in older browsers (e.g. IE8)\r\n    if (_objGetPrototypeOf) {\r\n        // As this is primarily a coding time check, don't bother checking if running in IE8 or lower\r\n        var visited = [];\r\n        var thisProto = _getObjProto(thisTarget);\r\n        while (thisProto && !_isObjectArrayOrFunctionPrototype(thisProto) && !_hasVisited(visited, thisProto)) {\r\n            if (thisProto === classProto) {\r\n                return true;\r\n            }\r\n            // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n            // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n            visited.push(thisProto);\r\n            thisProto = _getObjProto(thisProto);\r\n        }\r\n        return false;\r\n    }\r\n    // If objGetPrototypeOf doesn't exist then just assume everything is ok.\r\n    return true;\r\n}\r\n/**\r\n * Gets the current prototype name using the ES6 name if available otherwise falling back to a use unknown as the name.\r\n * It's not critical for this to return a name, it's used to decorate the generated unique name for easier debugging only.\r\n * @param target\r\n * @param unknownValue\r\n * @ignore\r\n */\r\nfunction _getObjName(target, unknownValue) {\r\n    if (_hasOwnProperty(target, Prototype)) {\r\n        // Look like a prototype\r\n        return target.name || unknownValue || UnknownValue;\r\n    }\r\n    return (((target || {})[Constructor]) || {}).name || unknownValue || UnknownValue;\r\n}\r\n/**\r\n * Helper function when creating dynamic (inline) functions for classes, this helper performs the following tasks :-\r\n * - Saves references to all defined base class functions\r\n * - Calls the delegateFunc with the current target (this) and a base object reference that can be used to call all \"super\" functions.\r\n * - Will populate the class prototype for all overridden functions to support class extension that call the prototype instance.\r\n * Callers should use this helper when declaring all function within the constructor of a class, as mentioned above the delegateFunc is\r\n * passed both the target \"this\" and an object that can be used to call any base (super) functions, using this based object in place of\r\n * super.XXX() (which gets expanded to _super.prototype.XXX()) provides a better minification outcome and also ensures the correct \"this\"\r\n * context is maintained as TypeScript creates incorrect references using super.XXXX() for dynamically defined functions i.e. Functions\r\n * defined in the constructor or some other function (rather than declared as complete typescript functions).\r\n * ### Usage\r\n * ```typescript\r\n * import dynamicProto from \"@microsoft/dynamicproto-js\";\r\n * class ExampleClass extends BaseClass {\r\n *     constructor() {\r\n *         dynamicProto(ExampleClass, this, (_self, base) => {\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.newFunc = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     ...\r\n *                 }\r\n *             }\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.myFunction = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     // Call the base version of the function that we are overriding\r\n *                     base.myFunction();\r\n *                 }\r\n *                 ...\r\n *             }\r\n *             _self.initialize = () => {\r\n *                 ...\r\n *             }\r\n *             // Warnings: While the following will work as _self is simply a reference to\r\n *             // this, if anyone overrides myFunction() the overridden will be called first\r\n *             // as the normal JavaScript method resolution will occur and the defined\r\n *             // _self.initialize() function is actually gets removed from the instance and\r\n *             // a proxy prototype version is created to reference the created method.\r\n *             _self.initialize();\r\n *         });\r\n *     }\r\n * }\r\n * ```\r\n * @typeparam DPType This is the generic type of the class, used to keep intellisense valid\r\n * @typeparam DPCls The type that contains the prototype of the current class\r\n * @param theClass - This is the current class instance which contains the prototype for the current class\r\n * @param target - The current \"this\" (target) reference, when the class has been extended this.prototype will not be the 'theClass' value.\r\n * @param delegateFunc - The callback function (closure) that will create the dynamic function\r\n * @param options - Additional options to configure how the dynamic prototype operates\r\n */\r\nexport default function dynamicProto(theClass, target, delegateFunc, options) {\r\n    // Make sure that the passed theClass argument looks correct\r\n    if (!_hasOwnProperty(theClass, Prototype)) {\r\n        _throwTypeError(\"theClass is an invalid class definition.\");\r\n    }\r\n    // Quick check to make sure that the passed theClass argument looks correct (this is a common copy/paste error)\r\n    var classProto = theClass[Prototype];\r\n    if (!_checkPrototype(classProto, target)) {\r\n        _throwTypeError(\"[\" + _getObjName(theClass) + \"] not in hierarchy of [\" + _getObjName(target) + \"]\");\r\n    }\r\n    var className = null;\r\n    if (_hasOwnProperty(classProto, DynClassName)) {\r\n        // Only grab the class name if it's defined on this prototype (i.e. don't walk the prototype chain)\r\n        className = classProto[DynClassName];\r\n    }\r\n    else {\r\n        // As not all browser support name on the prototype creating a unique dynamic one if we have not already\r\n        // assigned one, so we can use a simple string as the lookup rather than an object for the dynamic instance\r\n        // function table lookup.\r\n        className = DynClassNamePrefix + _getObjName(theClass, \"_\") + \"$\" + _gblInst.n;\r\n        _gblInst.n++;\r\n        classProto[DynClassName] = className;\r\n    }\r\n    var perfOptions = dynamicProto[DynProtoDefaultOptions];\r\n    var useBaseInst = !!perfOptions[strUseBaseInst];\r\n    if (useBaseInst && options && options[strUseBaseInst] !== undefined) {\r\n        useBaseInst = !!options[strUseBaseInst];\r\n    }\r\n    // Get the current instance functions\r\n    var instFuncs = _getInstanceFuncs(target);\r\n    // Get all of the functions for any base instance (before they are potentially overridden)\r\n    var baseFuncs = _getBaseFuncs(classProto, target, instFuncs, useBaseInst);\r\n    // Execute the delegate passing in both the current target \"this\" and \"base\" function references\r\n    // Note casting the same type as we don't actually have the base class here and this will provide some intellisense support\r\n    delegateFunc(target, baseFuncs);\r\n    // Don't allow setting instance functions for older IE instances\r\n    var setInstanceFunc = !!_objGetPrototypeOf && !!perfOptions[strSetInstFuncs];\r\n    if (setInstanceFunc && options) {\r\n        setInstanceFunc = !!options[strSetInstFuncs];\r\n    }\r\n    // Populate the Prototype for any overridden instance functions\r\n    _populatePrototype(classProto, className, target, instFuncs, setInstanceFunc !== false);\r\n}\r\n/**\r\n * Exposes the default global options to allow global configuration, if the global values are disabled these will override\r\n * any passed values. This is primarily exposed to support unit-testing without the need for individual classes to expose\r\n * their internal usage of dynamic proto.\r\n */\r\ndynamicProto[DynProtoDefaultOptions] = _gblInst.o;\r\n//# sourceMappingURL=DynamicProto.js.map"],"names":[],"mappings":"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"}
{"version":3,"file":"Helpers.js","sourceRoot":"","sources":["../src/Helpers.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC;AAElC,OAAO,EAAG,SAAS,EAAE,eAAe,EAAE,aAAa,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,MAAM,aAAa,CAAC;AAK7G,IAAI,aAAa,GAAW,IAAI,CAAC;AAEjC;;;;;;;;;;;GAWG;AACH,MAAM,UAAU,SAAS,CAAC,SAAyB;IAAzB,0BAAA,EAAA,gBAAyB;IAC/C,IAAI,MAAM,GAAG,SAAS,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC;IAExD,IAAI,CAAC,MAAM,EAAE;QACT,IAAI,OAAO,UAAU,KAAK,gBAAgB,EAAE;YACxC,MAAM,GAAG,UAAU,CAAC;SACvB;QAED,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,KAAK,gBAAgB,EAAE;YAC7C,MAAM,GAAG,IAAI,CAAC;SACjB;QAED,IAAI,CAAC,MAAM,IAAI,OAAO,MAAM,KAAK,gBAAgB,EAAE;YAC/C,MAAM,GAAG,MAAM,CAAC;SACnB;QAED,IAAI,CAAC,MAAM,IAAI,OAAO,MAAM,KAAK,gBAAgB,EAAE;YAC/C,MAAM,GAAG,MAAM,CAAC;SACnB;QAED,aAAa,GAAG,MAAM,CAAC;KAC1B;IAED,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,MAAM,UAAU,cAAc,CAAC,OAAe;IAC1C,MAAM,IAAI,SAAS,CAAC,OAAO,CAAC,CAAC;AACjC,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,WAAW,CAAC,GAAQ;IAChC,IAAI,IAAI,GAAG,SAAS,CAAC;IACrB,6BAA6B;IAC7B,IAAI,IAAI,EAAE;QACN,wCAAwC;QACxC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;KACpB;IACD,IAAI,GAAG,IAAI,IAAI,EAAE;QACb,OAAO,EAAE,CAAC;KACb;IACD,IAAI,IAAI,GAAG,OAAO,GAAG,CAAC;IACtB,IAAI,IAAI,KAAK,aAAa,IAAI,IAAI,KAAK,eAAe,EAAE;QACpD,cAAc,CAAC,yCAAyC,GAAG,GAAG,CAAC,CAAC;KACnE;IAED,SAAS,OAAO,KAAI,CAAC;IACrB,OAAO,CAAC,gBAAgB,CAAC,GAAG,GAAG,CAAC;IAEhC,OAAO,IAAK,OAAe,EAAE,CAAC;AAClC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {  ObjCreate, strShimFunction, strShimObject, strShimPrototype, strShimUndefined } from \"./Constants\";\r\n\r\ndeclare var globalThis: Window;\r\ndeclare var global: Window;\r\n\r\nlet _cachedGlobal: Window = null;\r\n\r\n/**\r\n * Returns the current global scope object, for a normal web page this will be the current\r\n * window, for a Web Worker this will be current worker global scope via \"self\". The internal\r\n * implementation returns the first available instance object in the following order\r\n * - globalThis (New standard)\r\n * - self (Will return the current window instance for supported browsers)\r\n * - window (fallback for older browser implementations)\r\n * - global (NodeJS standard)\r\n * - <null> (When all else fails)\r\n * While the return type is a Window for the normal case, not all environments will support all\r\n * of the properties or functions.\r\n */\r\nexport function getGlobal(useCached: boolean = true): Window {\r\n    let result = useCached === false ? null : _cachedGlobal;\r\n\r\n    if (!result) {\r\n        if (typeof globalThis !== strShimUndefined) {\r\n            result = globalThis;\r\n        }\r\n\r\n        if (!result && typeof self !== strShimUndefined) {\r\n            result = self;\r\n        }\r\n\r\n        if (!result && typeof window !== strShimUndefined) {\r\n            result = window;\r\n        }\r\n    \r\n        if (!result && typeof global !== strShimUndefined) {\r\n            result = global;\r\n        }\r\n\r\n        _cachedGlobal = result;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function throwTypeError(message: string): never {\r\n    throw new TypeError(message);\r\n}\r\n\r\n/**\r\n * Creates an object that has the specified prototype, and that optionally contains specified properties. This helper exists to avoid adding a polyfil\r\n * for older browsers that do not define Object.create eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation.\r\n * Note: For consistency this will not use the Object.create implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n * @param obj Object to use as a prototype. May be null\r\n */\r\nexport function objCreateFn(obj: any): any {\r\n    var func = ObjCreate;\r\n    // Use build in Object.create\r\n    if (func) {\r\n        // Use Object create method if it exists\r\n        return func(obj);\r\n    }\r\n    if (obj == null) {\r\n        return {};\r\n    }\r\n    var type = typeof obj;\r\n    if (type !== strShimObject && type !== strShimFunction) {\r\n        throwTypeError(\"Object prototype may only be an Object:\" + obj);\r\n    }\r\n\r\n    function tmpFunc() {}\r\n    tmpFunc[strShimPrototype] = obj;\r\n\r\n    return new (tmpFunc as any)();\r\n}\r\n\r\n"]}
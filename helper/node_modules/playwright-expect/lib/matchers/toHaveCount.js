"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toHaveCount = void 0;
const utils_1 = require("../utils/utils");
/**
 * Use `toHaveCount` function when you want to check that an elements length is equal to the expected length
 *
 * @example
 * ```typescript
 * // could be used with Promise<Array<ElementHandle>>
 * await expect(page.$$('img')).toHaveCount(3);
 *
 * // or with Array<ElementHandle>
 * const images = await page.$$('img');
 * await expect(toastElement).toHaveCount(3);
 *
 * // or using an array of page and selector
 * await expect([page, 'img']).toHaveCount(3);
 * ```
 *
 * @param this
 * @param elements
 * @param expectedCount
 * @param options
 * @returns
 */
async function toHaveCount(elements, expectedCount) {
    try {
        const elementHandles = await utils_1.getElements(elements);
        const actualCount = elementHandles.length;
        return {
            pass: actualCount === expectedCount,
            message: () => utils_1.getErrorMessage(this, 'toHaveCount', expectedCount, actualCount),
        };
    }
    catch (error) {
        return {
            pass: false,
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-ignore
            message: () => error.toString(),
        };
    }
}
exports.toHaveCount = toHaveCount;
